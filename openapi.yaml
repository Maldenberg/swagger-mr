openapi: 3.0.1

info:
  title: Внешний API mr-group.ru
  description: |
    Справочник внешних методов API проекта MR Group SuperApp.
  version: 0.5.0

servers:
  - description: |
      Промышленная среда.
    url: https://www.mr-group.ru/api

tags:
  - name: app
    description: Методы для работы с данными для функционирования приложения
  - name: catalog
    description: Методы каталога
  - name: code
    description: Методы для работы с функциональностью отправки и валидации одноразового кода для аутентификации пользователя
  - name: content
    description: Методы для работы с контентными данными
  - name: faq
    description: Методы для работы с FAQ
  - name: files
    description: Методы для работы с файлами
  - name: forms/configs
    description: Конфигурации форм ввода.
    externalDocs:
      description: Модуль «Формы ввода»
      url: https://wiki.adv.ru/pages/viewpage.action?pageId=307092888
  - name: hotline
    description: Методы для работы с линией доверия
  - name: legal/consent-documents
    description: Документы согласий.
    externalDocs:
      description: Модуль «Согласия пользователя»
      url: https://wiki.adv.ru/pages/viewpage.action?pageId=307094460
  - name: news
    description: Методы для работы с новостями
  - name: mortgage
    description: Методы для работы с ипотекой
  - name: mrclub
    description: Методы для работы с данными программы лояльности
  - name: partner
    description: |
      Методы, предназначенные для использования организациями-партнёрами MR Group.
      В соответствии с https://wiki.adv.ru/pages/viewpage.action?pageId=289571578
  - name: promo
    description: Методы для работы с акциями
  - name: purchase
    description: Методы для работы с платным бронированием (сделкой)
  - name: sale
    description: Методы каталога (sale-service)
    externalDocs:
      description: Служба каталога ОН (sale-service)
      url: https://wiki.adv.ru/pages/viewpage.action?pageId=273673071
  - name: site
    description: Методы для работы с данными для функционирования сайта
  - name: tradein
    description: Методы для работы с trade in
  - name: user
    description: Методы для работы с данными пользователя
  - name: hold
    description: Описанные методы, реализация которых отложена в силу бизнес-необходимости

paths:
  /app/device:
    put:
      summary: Регистрация пользовательского устройства
      tags: [app]
      description: |
        Зарегистрировать новое устройство. Авторизация не обязательна, но при её наличии устройство
        связывается с пользователем.
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=291311414
      security:
        - {}
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceDto"
      responses:
        204:
          description: Successful operation
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalServerError"

  /app/version:
    get:
      summary: Минимальные поддерживаемые версии мобильных приложений
      tags: [app]
      description: |
        Возвращает минимальные версии мобильных приложений, которые поддерживаются в данный момент.
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=291309517
      responses:
        200:
          description: |
            Минимальные поддерживаемые версии мобильных приложений.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppVersionDto"
        500:
          $ref: "#/components/responses/InternalServerError"

  /forms/configs:
    get:
      summary: Получение конфигураций форм
      tags: ["forms/configs"]
      operationId: listFormConfigs
      description: |
        Возвращает список
        [конфигураций форм](https://wiki.adv.ru/pages/viewpage.action?pageId=307092923).

        Главным образом метод предназначен для сокращения количества запросов к API в целях
        повышения отзывчивости пользовательского интерфейса. Предполагается что клиентское
        приложение (мобильное или сайт) может разом запросить конфигурации всех форм и сохранить их
        в кэше. Это позволит не запрашивать конфигурацию каждой формы перед её показом.

        - [Обзорное описание получения согласий пользователя](https://wiki.adv.ru/pages/viewpage.action?pageId=307094741)
        - [Описание метода API для бэкенда](https://wiki.adv.ru/pages/viewpage.action?pageId=307093539)
      security: []
      responses:
        200:
          $ref: "#/components/responses/FormConfigCollection"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /forms/configs/{id}:
    get:
      summary: Получение конфигурации конкретной формы
      tags: ["forms/configs"]
      description: |
        Возвращает [конфигурацию](https://wiki.adv.ru/pages/viewpage.action?pageId=307092923)
        запрошенной формы.

        **Обратите внимание, что перечень идентификаторов определён как перечисляемый тип, но может
        набор его вариантов может изменяться с выпуском новых версий.**

        - [Обзорное описание получения согласий пользователя](https://wiki.adv.ru/pages/viewpage.action?pageId=307094741)
        - [Описание метода API для бэкенда](https://wiki.adv.ru/pages/viewpage.action?pageId=307093643)
      security: []
      parameters:
        - name: id
          in: path
          required: true
          description: |
            Идентификатор (код) конфигурации формы.
          schema:
            $ref: "#/components/schemas/FormConfigId"
      responses:
        200:
          $ref: "#/components/responses/FormConfig"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /legal/consent-documents/{identifier}:
    get:
      summary: Получение документа согласия
      tags: ["legal/consent-documents"]
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=307082513
      description: |
        Возвращает [документ согласия](https://wiki.adv.ru/pages/viewpage.action?pageId=307093060)
        по его идентификатору или коду.

        - [Обзорное описание получения согласий пользователя](https://wiki.adv.ru/pages/viewpage.action?pageId=307094741)
        - [Описание метода API для бэкенда](https://wiki.adv.ru/pages/viewpage.action?pageId=307094682)
      security: []
      parameters:
        - name: identifier
          in: path
          required: true
          description: |
            Идентификатор или `urlCode` документа согласия.
          schema:
            oneOf:
              - $ref: "#/components/schemas/ConsentDocumentId"
              - $ref: "#/components/schemas/ConsentDocumentUrlName"
      responses:
        200:
          $ref: "#/components/responses/ConsentDocument"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /sale/projects:
    get:
      tags: [sale]
      description: |
        Получение списка проектов с учётом фильтров.
      parameters:
        - $ref: "#/components/parameters/categoryFilter"
        - $ref: "#/components/parameters/completedProjectFilter"
        - name: has_plans
          in: query
          description: Вернуть только проекты, у которых есть интерактивные планы
          example: false
          schema:
            type: boolean
        - $ref: "#/components/parameters/priceMinFilter"
        - $ref: "#/components/parameters/priceMaxFilter"
        - $ref: "#/components/parameters/paymentMinFilter"
        - $ref: "#/components/parameters/paymentMaxFilter"
        - $ref: "#/components/parameters/roomsCountFilter"
        - $ref: "#/components/parameters/releaseFilter"
        - $ref: "#/components/parameters/areaMinFilter"
        - $ref: "#/components/parameters/areaMaxFilter"
        - $ref: "#/components/parameters/placeFilter"
        - $ref: "#/components/parameters/projectsFilter"
        - $ref: "#/components/parameters/buildingsCodeFilter"
        - $ref: "#/components/parameters/isBookedFilter"
        - $ref: "#/components/parameters/isFreeFilter"
        - $ref: "#/components/parameters/floorMinFilter"
        - $ref: "#/components/parameters/floorMaxFilter"
        - $ref: "#/components/parameters/levelMinFilter"
        - $ref: "#/components/parameters/levelMaxFilter"
        - $ref: "#/components/parameters/isDiscountFilter"
        - $ref: "#/components/parameters/isFamilyFilter"
        - $ref: "#/components/parameters/housingFilter"
        - $ref: "#/components/parameters/decorationFilter"
        - $ref: "#/components/parameters/isAssignmentFilter"
        - $ref: "#/components/parameters/installmentsFilter"
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670711
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectListDto"
        500:
          description: Internal Server Error

  /sale/projects/private:
    get:
      tags: [sale]
      description: Получение MR Private проектов
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285084776
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrivateListDto"
        500:
          description: Internal Server Error

  /sale/projects/{code}:
    get:
      tags: [sale]
      description: |
        Получение данных проекта по коду проекта
      parameters:
        - name: code
          in: path
          required: true
          description: Код проекта
          schema:
            type: string
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670713
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        404:
          description: Not found
        500:
          description: Internal Server Error

  /sale/products:
    get:
      tags: [sale]
      description: |
        Получение списка ОН с учётом фильтров.
      parameters:
        - $ref: "#/components/parameters/productsIdsFilter"
        - $ref: "#/components/parameters/categoryFilter"
        - $ref: "#/components/parameters/paginationPage"
        - $ref: "#/components/parameters/paginationLimit"
        - $ref: "#/components/parameters/catalogSort"
        - $ref: "#/components/parameters/priceMinFilter"
        - $ref: "#/components/parameters/priceMaxFilter"
        - $ref: "#/components/parameters/paymentMinFilter"
        - $ref: "#/components/parameters/paymentMaxFilter"
        - $ref: "#/components/parameters/roomsCountFilter"
        - $ref: "#/components/parameters/releaseFilter"
        - $ref: "#/components/parameters/areaMinFilter"
        - $ref: "#/components/parameters/areaMaxFilter"
        - $ref: "#/components/parameters/placeFilter"
        - $ref: "#/components/parameters/projectsFilter"
        - $ref: "#/components/parameters/buildingsCodeFilter"
        - $ref: "#/components/parameters/isBookedFilter"
        - $ref: "#/components/parameters/isFreeFilter"
        - $ref: "#/components/parameters/floorMinFilter"
        - $ref: "#/components/parameters/floorMaxFilter"
        - $ref: "#/components/parameters/levelMinFilter"
        - $ref: "#/components/parameters/levelMaxFilter"
        - $ref: "#/components/parameters/isDiscountFilter"
        - $ref: "#/components/parameters/isFamilyFilter"
        - $ref: "#/components/parameters/housingFilter"
        - $ref: "#/components/parameters/decorationFilter"
        - $ref: "#/components/parameters/hasKitchenFilter"
        - $ref: "#/components/parameters/isAssignmentFilter"
        - $ref: "#/components/parameters/installmentsFilter"
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670715
      responses:
        200:
          description: Список объектов недвижимости.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductListDto"
        500:
          description: Внутренняя ошибка приложения.

  /sale/product/{code}:
    get:
      tags: [sale]
      description: |
        Получение данных ОН по коду ОН.
      parameters:
        - name: code
          in: path
          required: true
          description: Код ОН
          schema:
            type: string
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670718
      responses:
        200:
          description: Сведения об объекте недвижимости.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDetailDto"
        404:
          description: Not found
        500:
          description: Internal Server Error

  /sale/products/filters:
    get:
      tags: [sale]
      parameters:
        - $ref: "#/components/parameters/categoryFilter"
        - $ref: "#/components/parameters/projectCodeParam"
        - $ref: "#/components/parameters/priceMinFilter"
        - $ref: "#/components/parameters/priceMaxFilter"
        - $ref: "#/components/parameters/paymentMinFilter"
        - $ref: "#/components/parameters/paymentMaxFilter"
        - $ref: "#/components/parameters/roomsCountFilter"
        - $ref: "#/components/parameters/releaseFilter"
        - $ref: "#/components/parameters/areaMinFilter"
        - $ref: "#/components/parameters/areaMaxFilter"
        - $ref: "#/components/parameters/placeFilter"
        - $ref: "#/components/parameters/projectsFilter"
        - $ref: "#/components/parameters/buildingsCodeFilter"
        - $ref: "#/components/parameters/isBookedFilter"
        - $ref: "#/components/parameters/isFreeFilter"
        - $ref: "#/components/parameters/floorMinFilter"
        - $ref: "#/components/parameters/floorMaxFilter"
        - $ref: "#/components/parameters/levelMinFilter"
        - $ref: "#/components/parameters/levelMaxFilter"
        - $ref: "#/components/parameters/isDiscountFilter"
        - $ref: "#/components/parameters/isFamilyFilter"
        - $ref: "#/components/parameters/housingFilter"
        - $ref: "#/components/parameters/decorationFilter"
        - $ref: "#/components/parameters/hasKitchenFilter"
        - $ref: "#/components/parameters/isAssignmentFilter"
        - $ref: "#/components/parameters/installmentsFilter"
      description: |
        Фильтры поиска товаров в ES с учётом фильтров и строки поиска
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273652990
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilterResponseDto"
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /sale/typicalobjects:
    get:
      tags: [sale]
      parameters:
        - $ref: "#/components/parameters/categoryFilter"
        - $ref: "#/components/parameters/paginationPage"
        - $ref: "#/components/parameters/paginationLimit"
        - $ref: "#/components/parameters/catalogSort"
        - $ref: "#/components/parameters/priceMinFilter"
        - $ref: "#/components/parameters/priceMaxFilter"
        - $ref: "#/components/parameters/paymentMinFilter"
        - $ref: "#/components/parameters/paymentMaxFilter"
        - $ref: "#/components/parameters/roomsCountFilter"
        - $ref: "#/components/parameters/releaseFilter"
        - $ref: "#/components/parameters/areaMinFilter"
        - $ref: "#/components/parameters/areaMaxFilter"
        - $ref: "#/components/parameters/placeFilter"
        - $ref: "#/components/parameters/projectsFilter"
        - $ref: "#/components/parameters/buildingsCodeFilter"
        - $ref: "#/components/parameters/isBookedFilter"
        - $ref: "#/components/parameters/isFreeFilter"
        - $ref: "#/components/parameters/floorMinFilter"
        - $ref: "#/components/parameters/floorMaxFilter"
        - $ref: "#/components/parameters/levelMinFilter"
        - $ref: "#/components/parameters/levelMaxFilter"
        - $ref: "#/components/parameters/isDiscountFilter"
        - $ref: "#/components/parameters/isFamilyFilter"
        - $ref: "#/components/parameters/housingFilter"
        - $ref: "#/components/parameters/decorationFilter"
        - $ref: "#/components/parameters/isAssignmentFilter"
        - $ref: "#/components/parameters/installmentsFilter"
      description: Получение списка планировок
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273673064
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TypicalObjectsListDto"
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /sale/typicalobjects/{id}/products:
    get:
      tags: [sale]
      description: Получение объекта планировки
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273673091
      parameters:
        - name: id
          in: path
          description: ID планировки
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/catalogSort"
        - $ref: "#/components/parameters/priceMinFilter"
        - $ref: "#/components/parameters/priceMaxFilter"
        - $ref: "#/components/parameters/paymentMinFilter"
        - $ref: "#/components/parameters/paymentMaxFilter"
        - $ref: "#/components/parameters/roomsCountFilter"
        - $ref: "#/components/parameters/releaseFilter"
        - $ref: "#/components/parameters/areaMinFilter"
        - $ref: "#/components/parameters/areaMaxFilter"
        - $ref: "#/components/parameters/placeFilter"
        - $ref: "#/components/parameters/projectsFilter"
        - $ref: "#/components/parameters/buildingsCodeFilter"
        - $ref: "#/components/parameters/isBookedFilter"
        - $ref: "#/components/parameters/isFreeFilter"
        - $ref: "#/components/parameters/floorMinFilter"
        - $ref: "#/components/parameters/floorMaxFilter"
        - $ref: "#/components/parameters/levelMinFilter"
        - $ref: "#/components/parameters/levelMaxFilter"
        - $ref: "#/components/parameters/isDiscountFilter"
        - $ref: "#/components/parameters/isFamilyFilter"
        - $ref: "#/components/parameters/housingFilter"
        - $ref: "#/components/parameters/decorationFilter"
        - $ref: "#/components/parameters/isAssignmentFilter"
        - $ref: "#/components/parameters/installmentsFilter"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TypicalObjectDetailDto"
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /sale/plan/buildings:
    get:
      tags: [sale]
      description: |
        Метод возвращает информацию о корпусах и план, который следует открыть
      parameters:
        - $ref: "#/components/parameters/categoryFilter"
        - $ref: "#/components/parameters/projectFilter"
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668014
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanBuildingsListDto"
        500:
          description: Internal Server Error

  /sale/plan/sections:
    get:
      tags: [sale]
      description: |
        Метод возвращает информацию о секциях и план, который следует открыть
      parameters:
        - $ref: "#/components/parameters/categoryFilter"
        - name: building
          in: query
          required: true
          schema:
            type: string
          description: Код корпуса
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668019
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanSectionsListDto"
        500:
          description: Internal Server Error

  /sale/plan/floors:
    get:
      tags: [sale]
      description: |
        Метод возвращает информацию об этажах и план, который следует открыть
      parameters:
        - $ref: "#/components/parameters/categoryFilter"
        - name: building
          description: Код корпуса
          in: query
          schema:
            type: string
        - name: section
          description: ID секции
          in: query
          schema:
            type: integer
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668027
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanFloorsListDto"
        500:
          description: Internal Server Error

  /sale/plan/floor/objects:
    get:
      tags: [sale]
      description: |
        Метод возвращает список ОН на этаже.
      parameters:
        - name: category
          description: Код корпуса
          in: query
          required: true
          schema:
            type: string
            enum: ["flats", "boxrooms", "parkings", "offices", "commercials"]
        - name: building
          description: Код корпуса
          in: query
          schema:
            type: string
        - name: section
          description: ID секции
          in: query
          schema:
            type: integer
        - name: floor
          description: Номер этажа
          in: query
          required: true
          schema:
            type: integer
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668385
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlanObjectOnFloorDto"
        500:
          description: Internal Server Error

  /sale/plan/subtype_objects:
    get:
      tags: [sale]
      description: Метод возвращает список ID CRM ОН в разрезе подтипов (категорий)
      parameters:
        - name: category
          in: query
          description: Код типа ОН
          required: true
          schema:
            type: string
        - name: building
          in: query
          description: Код корпуса
          required: true
          schema:
            type: string
        - name: floor
          in: query
          description: Номер этажа
          required: true
          schema:
            type: integer
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273665394
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubTypeListDto"

  /sale/plan/objects/{crm-id}:
    get:
      tags: [sale]
      description: Метод возвращает информацию об ОН по ID CRM
      parameters:
        - name: crm-id
          in: path
          required: true
          description: ID объекта в CRM
          schema:
            type: string
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273665440
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDto"

  /sale/search:
    get:
      tags: [sale]
      description: Метод поиска
      parameters:
        - name: query
          in: query
          required: true
          description: Поисковый запрос
          schema:
            type: string
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273660869
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SaleSearchResultListDto"

  # ################################

  /banners:
    get:
      tags: [site]
      description: |
        Получение списка баннеров для главной страницы сайта
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273671532
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BannerListResponseDto"
        500:
          description: Internal Server Error

  /banners/private:
    get:
      tags: [site]
      description: |
        Получение списка баннеров для страницы MR Private
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=302781211
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrivateBannerListResponseDto"
        500:
          description: Internal Server Error

  /pages/menu:
    get:
      tags: [site]
      description: |
        Иерархичный набор ссылок для сайта \
        Есть следующие типы меню (slug):\
        — desktop_menu — меню для desktop-режиме сайта\
        — top_menu — верхнее меню сайта\
        — sitemap — карта сайта в footer сайта
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273666932
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteMenuPagesListDto"
        500:
          description: Internal Server Error

  /site/config:
    get:
      tags: [site]
      description: |
        Параметры конфигурации
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273671298
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteConfigDto"
        500:
          description: Internal Server Error

  /site/company:
    get:
      tags: [site]
      description: |
        Информация о компании
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273671301
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteCompanyDetailsDto"
        500:
          description: Internal Server Error

  /site/template:
    get:
      tags: [site]
      description: |
        Информация для header и footer
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273671307
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteTemplateDetailsDto"
        500:
          description: Internal Server Error

  # ################################

  /content/purchase/steps:
    get:
      tags: [content]
      description: |
        Получение данных для шагов процесса покупки страницы "Процесс покупки"
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670622
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentPurchaseDto"
        500:
          description: Internal Server Error

  /content/agreement:
    get:
      tags: [content]
      description: |
        Получение данных для контентной политики обработки ПД
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273678296
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentAgreementDto"
        500:
          description: Internal Server Error

  /content/sitemap:
    get:
      tags: [content]
      description: |
        Получение данных для контентной страницы "Карта сайта"
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273678289
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentSitemapDto"
        500:
          description: Internal Server Error

  /content/template/{code}:
    get:
      tags: [content]
      description: Метод получения данных для универсальных блоков контентных страниц
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285082774
      parameters:
        - name: code
          in: path
          description: Символьный код шаблона
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentTemplateDto"
        500:
          description: Internal Server Error

  /content/steps/{code}:
    get:
      tags: [content]
      description: Метод получения данных для контента для блоков с шагами
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670630
      parameters:
        - name: code
          in: path
          description: Символьный код группы шагов
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentStepsListDto"
        500:
          description: Internal Server Error

  /content/banners/{code}:
    get:
      tags: [content]
      description: Метод получения контента для Универсального блока баннеров
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285085007
      parameters:
        - name: code
          in: path
          description: Символьный код раздела для блока
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentBannersListDto"
        404:
          description: Not found
        500:
          description: Internal Server Error

  /content/facts/{code}:
    get:
      tags: [content]
      description: Метод получения контента для блоков Ключевые факты
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285084492
      parameters:
        - name: code
          in: path
          description: Символьный код раздела ключевых фактов
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentFactsListDto"
        404:
          description: Not found
        500:
          description: Internal Server Error

  /content/history:
    get:
      tags: [content]
      description: Метод получения контента для блока История
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285084522
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentHistoryListDto"
        404:
          description: Not found
        500:
          description: Internal Server Error

  /content/awards:
    get:
      tags: [content]
      description: Метод получения контента для блока Награды
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285084536
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentAwardsListDto"
        404:
          description: Not found
        500:
          description: Internal Server Error

  /content/partners:
    get:
      tags: [content]
      description: Метод получения данных объектов сущности Партнер
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285085423
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentPartnersSectionsListDto"
        404:
          description: Not found
        500:
          description: Internal Server Error

  /content/team:
    get:
      tags: [content]
      description: Метод получения данных объектов сущности Участник команды
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285085395
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentTeamMembersListDto"
        404:
          description: Not found
        500:
          description: Internal Server Error

  /content/media_articles:
    get:
      tags: [content]
      description: Метод получения данных объектов сущности Статья СМИ
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285085704
      parameters:
        - $ref: "#/components/parameters/paginationPage"
        - $ref: "#/components/parameters/paginationLimit"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentMediaArticlesListDto"
        404:
          description: Not found
        500:
          description: Internal Server Error

  /offices/company:
    get:
      tags: [content]
      description: |
        Получение основных контактов офиса компании MR
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273678329
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentOfficesCompanyListDto"
        404:
          description: Not found
        500:
          description: Internal Server Error

  /offices/projects:
    get:
      tags: [content]
      description: |
        Получение основных контактов офиса компании MR
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273678331
      parameters:
        - $ref: "#/components/parameters/projectFilter"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentOfficesProjectsListDto"
        500:
          description: Internal Server Error

  /contacts/support:
    get:
      tags: [content]
      description: |
        Получение контактов ЦКП (центра клиентской поддержки)
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273674951
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactsSupportListDto"
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /services:
    get:
      tags: [content]
      description: |
        Метод возвращает карточки сервисов
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273658285
      parameters:
        - $ref: "#/components/parameters/projectFilter"
        - $ref: "#/components/parameters/applicationFilter"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServicesListDto"
        400:
          description: Bad request
        500:
          description: Internal Server Error

  # ################################

  /faq/category:
    get:
      tags: [faq]
      description: |
        Получение всех категорий FAQ
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670599
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FaqCategoryListDto"
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /faq/category/{category-code}/questions:
    get:
      tags: [faq]
      description: |
        Получение списка вопросов для категории
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670602
      parameters:
        - name: category-code
          in: path
          required: true
          description: Категория FAQ
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FaqQuestionsListDto"
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Internal Server Error

  /faq/search:
    get:
      tags: [faq]
      description: |
        Получение списка вопросов для категории
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670614
      parameters:
        - name: query
          in: query
          required: true
          description: Поисковый запрос
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FaqSearchResultListDto"
        400:
          description: Bad request
        500:
          description: Internal Server Error
  # ################################

  /news:
    get:
      tags: [news]
      description: |
        Получение списка новостей
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273662845
      parameters:
        - $ref: "#/components/parameters/projectsFilter"
        - name: dateFrom
          in: query
          description: Фильтр по дате новости, ОТ (включительно)
          schema:
            $ref: "#/components/schemas/AttrDate"
        - name: dateTo
          in: query
          description: Фильтр по дате новости, ДО (включительно)
          schema:
            $ref: "#/components/schemas/AttrDate"
        - name: tags[]
          in: query
          description: |
            Фильтр по тегам новостей
          example: ["social"]
          schema:
            type: array
            items:
              type: string
        - $ref: "#/components/parameters/paginationPage"
        - $ref: "#/components/parameters/paginationLimit"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewsListDto"
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /news/{news-code}:
    get:
      tags: [news]
      description: |
        Получение контента по новости
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273670589
      parameters:
        - name: news-code
          in: path
          required: true
          description: Код новости
          schema:
            type: string

      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewsContentDto"
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Internal Server Error

  # ################################

  /promo:
    get:
      tags: [promo]
      description: Получение списка акций
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273672541
      parameters:
        - name: projectCode
          in: query
          required: false
          description: Код проекта
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromoListDto"
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Internal Server Error

  /promo/{promo-code}:
    get:
      tags: [promo]
      description: Получение акций
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273672541
      parameters:
        - name: promo-code
          in: path
          required: true
          description: Код акции
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromoContentDto"
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Internal Server Error

  # ################################

  /mortgage/program:
    get:
      tags: [mortgage]
      description: |
        Получение списка ипотечных программ
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273671695
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MortgageProgramListDto"
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /mortgage/calc/bank:
    get:
      tags: [mortgage]
      description: |
        Получение списка банков для ипотечного калькулятора
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273669724
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MortgageCalcBanksListDto"
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /mortgage/calc/category:
    get:
      tags: [mortgage]
      description: |
        Получение списка подтипов ОН для ипотечного калькулятора
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273671672
      parameters:
        - name: project-code
          in: query
          description: Код проекта
          schema:
            type: string
            example: "mod"
        - name: product-code
          in: query
          description: Код ОН
          schema:
            type: string
            example: "kvartira-21"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MortgageCalcCategoryListDto"
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /mortgage/calc/offer:
    get:
      tags: [mortgage]
      description: |
        Получение списка банковских предложений по ипотеке
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668976
      parameters:
        - name: project-code
          in: query
          required: true
          description: Код проекта
          schema:
            type: string
            example: "mod"
        - name: price
          in: query
          required: true
          description: Стоимость ОН
          schema:
            type: number
        - name: initial-payment
          in: query
          required: true
          description: Сумма первоначального взноса
          schema:
            type: number
        - name: period
          in: query
          required: true
          description: Срок кредита в годах
          schema:
            type: number
        - name: banks
          in: query
          description: Массив кодов банков, выбранных в фильтре по банкам (параметр "Код" сущности Банк)
          schema:
            type: array
            items:
              type: string
        - name: subtype-code
          in: query
          description: Символьный код подтипа ОН
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MortgageCalcResultListDto"
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /mortgage/calc/projects:
    get:
      tags: [mortgage]
      description: |
        Получение списка проектов для калькулятора
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273675189
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MortgageCalcProjectListDto"
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Internal Server Error

  /mortgage/application:
    get:
      tags: [mortgage]
      description: |
        Возвращает список заявок на ипотеку и заявок в банк клиента.
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285093632
      responses:
        200:
          description: |
            Список заявок на ипотеку.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MortgageApplicationListDto"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

    post:
      tags: [mortgage]
      description: |
        Метод создает заявку на ипотеку в ДВИЖ и возвращает ссылку на форму.\
        Если доступа к пользователю ДВИЖ нет, возвращает 422.\
        В этом случае требуется повторно вызвать метод с параметром code
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285091060
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MortgageRequestDto"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required: [form_url, number]
                properties:
                  number:
                    type: string
                    description: Номер заявки ДВИЖ
                    example: "ИП456789"
                    minLength: 1
                  form_url:
                    type: string
                    format: url
                    description: Ссылка на форму заявки в ДВИЖ
                    minLength: 1
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        422:
          description: |
            Неизвестная ошибка \
            * `sms_authentication_required` - Пользователю отправлено смс, \
            * `sms_code_invalid` - Неправильный код,
            Необходимо вызвать метод повторно с параметром code

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /mortgage/offer/{offer-id}:
    get:
      tags: [mortgage]
      description: Получить детали заявки в банк
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285093634
      parameters:
        - name: offer-id
          in: path
          description: Внутренний ID заявки в банк
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MortgageOfferDetailDto"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"
    post:
      tags: [mortgage]
      description: |
        Выбор заявки в банк в качестве основной
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285093626
      parameters:
        - name: offer-id
          in: path
          description: Внутренний ID заявки в банк
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successful operation
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  # ################################

  /tradein/offers:
    get:
      tags: [tradein]
      description: |
        Получение списка предложений Trade in
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285082257
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TradeinOffersListDto"
        500:
          description: Internal Server Error

  /tradein/form:
    post:
      tags: [tradein]
      description: |
        Отправка заявки на оценку квартиры для trade in\
        Метод можно вызвать как для авторизованного пользователя, так и для неавторизованного\
        От этого зависят проверки входных данных
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285088635
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TradeinFormRequestDto"
      responses:
        204:
          description: Successful operation
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  # ################################

  /user:
    delete:
      tags:
        - user
      description: |
        Метод удаляет личный кабинет и пользователя в SuperApp со всеми связанными сущностями\
        Работает только для авторизованных пользователей\
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/x/rgpdEQ
      responses:
        204:
          description: Successful operation
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"

    get:
      tags:
        - user
      description: |
        Метод основных данных по пользователю
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668012
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetailsDto"
        400:
          description: Bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal Server Error

  /user/bookings:
    get:
      tags:
        - user
      description: |
        Метод получения списка бесплатных бронирований пользователя (в т.ч. исторических) с полным набором данных о бронируемых ОН
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668102
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserBookingListDto"
        400:
          description: Bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal Server Error

  /user/bookings/active:
    get:
      tags:
        - user
      description: |
        Метод получения списка действующих бесплатных бронирований пользователя
      security:
        - JWT: []
        - FUSER_ID: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=291315638
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserActiveBookingListDto"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        500:
          description: Internal Server Error

  /user/booking/product/{code}:
    post:
      tags: [user]
      description: |
        Бесплатное бронирование объектов недвижимости.
        Метод можно использовать как для аутентифицированного пользователя, так и для не
        аутентифицированного. От этого зависят проверки входных данных.
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273657900
      parameters:
        - name: code
          description: |
            Символьный код объекта недвижимости.
          in: path
          required: true
          schema:
            type: string
            example: "sb-5-5-k-1-2-1-50201"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - properties:
                    meta:
                      description: |
                        Метаданные запроса.
                      type: object
                      properties:
                        consents:
                          $ref: "#/components/schemas/Consents"
                - $ref: "#/components/schemas/ProductBookingRequestDto"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductBookingResponseDto"
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductBookingResponseDto"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingErrorDto"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingErrorDto"
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingErrorDto"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingErrorDto"
        503:
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingErrorDto"

  /user/devices:
    get:
      tags:
        - user
      description: |
        Метод получения списка устройств пользователя
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=302779707
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDevicesListDto"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        500:
          description: Internal Server Error

  /user/devices/{id}/logout:
    post:
      tags: [user]
      description: |
        Метод для сброса сессии на конкретном устройстве
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=302780521
      parameters:
        - name: id
          in: path
          required: true
          description: Идентификатор устройства в системе
          schema:
            type: integer
      responses:
        204:
          description: Successful operation
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"

  /user/favourites:
    get:
      tags:
        - user
      description: |
        Метод получения списка избранного пользователя
      security:
        - JWT: []
        - FUSER_ID: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285091119
      parameters:
        - $ref: "#/components/parameters/categoryFilter"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFavouritesListDto"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        500:
          description: Internal Server Error

  /user/favourites/{code}:
    post:
      tags: [user]
      description: |
        Добавление в избранное ОН\
        Метод можно вызвать как для авторизованного пользователя, так и для неавторизованного\
        От этого зависят проверки входных данных
      security:
        - JWT: []
        - FUSER_ID: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285091115
      parameters:
        - name: code
          in: path
          required: true
          description: Код ОН
          schema:
            type: string
      responses:
        204:
          description: Successful operation
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"

    delete:
      tags: [user]
      description: |
        Удаление избранного ОН\
        Метод можно вызвать как для авторизованного пользователя, так и для неавторизованного\
        От этого зависят проверки входных данных
      security:
        - JWT: []
        - FUSER_ID: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285091117
      parameters:
        - name: code
          in: path
          required: true
          description: Код ОН
          schema:
            type: string
      responses:
        204:
          description: Successful operation
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"

  /user/subscription/marketing:
    post:
      summary: Подписка на маркетинговые рассылки
      tags: [user]
      description: |
        Оформляет подписку пользователя на маркетинговую рассылку. Метод можно использовать как для
        аутентифицированного пользователя, так и для неаутентифицированного.
      security:
        - {}
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273668410
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - properties:
                    meta:
                      description: |
                        Метаданные запроса.
                      type: object
                      properties:
                        consents:
                          $ref: "#/components/schemas/Consents"
                - $ref: "#/components/schemas/NewSubscriptionMarketingDto"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewSubscriptionResultDto"
        400:
          $ref: "#/components/responses/BadRequest"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /user/subscription/product-status:
    post:
      tags: [user]
      description: |
        Метод оформления подписки на смену статуса ОН. Метод можно использовать как для
        аутентифицированного пользователя, так и для не аутентифицированного.
      security:
        - {}
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273665381
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - properties:
                    meta:
                      description: |
                        Метаданные запроса.
                      type: object
                      properties:
                        consents:
                          $ref: "#/components/schemas/Consents"
                - $ref: "#/components/schemas/NewSubscriptionProductStatusDto"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewSubscriptionResultDto"
        400:
          description: |
            Синтаксическая ошибка в запросе.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: |
                      Общее сообщение об ошибке.
                    type: string
                    nullable: true
                    example: "Не все обязательные поля указаны."
                  errors:
                    description: |
                      Подробные описания ошибок.
                    type: array
                    items:
                      type: string
                      example: "Подробное описание ошибки."
        422:
          description: |
            Невозможно этот запрос.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: |
                      Общее сообщение об ошибке.
                    type: string
                    nullable: true
                    example: "Не все обязательные поля указаны."
                  errors:
                    description: |
                      Подробные описания ошибок.
                    type: array
                    items:
                      type: string
                      example: "Подробное описание ошибки."
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /user/consultation:
    post:
      tags: [user]
      description: |
        Запрос на консультации для пользователя. Метод можно использовать как для
        аутентифицированного пользователя, так и для не аутентифицированного.
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285093271
      parameters:
        - $ref: "#/components/parameters/captchaToken"
        - $ref: "#/components/parameters/deviceToken"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - properties:
                    meta:
                      description: |
                        Метаданные запроса.
                      type: object
                      properties:
                        consents:
                          $ref: "#/components/schemas/Consents"
                - $ref: "#/components/schemas/UserConsultationRequestDto"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required: [id]
                properties:
                  id:
                    type: string
                    format: uuid
                    description: appId созданной заявки
        400:
          $ref: "#/components/responses/BadRequest"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /user/callback:
    post:
      tags: [user]
      description: |
        Запрос на обратный звонок. Метод можно использовать как для
        аутентифицированного пользователя, так и для не аутентифицированного.
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=321193076
      parameters:
        - $ref: "#/components/parameters/captchaToken"
        - $ref: "#/components/parameters/deviceToken"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - properties:
                    meta:
                      description: |
                        Метаданные запроса.
                      type: object
                      properties:
                        consents:
                          $ref: "#/components/schemas/Consents"
                - $ref: "#/components/schemas/UserCallbackRequestDto"
      responses:
        204:
          description: Successful operation
        400:
          $ref: "#/components/responses/BadRequest"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /user/password/change:
    post:
      tags: [user]
      description: |
        Запрос на смену пароля для пользователя
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285093271
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPasswordChangeRequestDto"
      responses:
        204:
          description: Successful operation
        500:
          $ref: "#/components/responses/InternalServerError"

  /purchases:
    get:
      tags:
        - purchase
      description: |
        Метод получения списка сделок пользователя
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=289570862
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchasesListDto"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /purchase/{purchase-id}:
    get:
      tags: [purchase]
      description: |
        Метод, который позволяет получить данные по сделке в текущем состоянии
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=289571678
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: ID сделки
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseDetailDto"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /purchase/{purchase-id}/documents:
    get:
      tags: [purchase]
      description: |
        Метод, который позволяет получить список документов по сделке
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=289572300
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: ID сделки
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseDocumentsListDto"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /purchase/{purchase-id}/documents/{document-id}:
    get:
      tags: [purchase]
      description: |
        Метод, который позволяет получить реквизиты документа в сделке
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=289572442
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: ID сделки
          schema:
            type: string
        - name: document-id
          in: path
          required: true
          description: ID документа
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseDocumentDetailDto"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /purchase/{purchase-id}/bills:
    get:
      tags: [purchase]
      description: |
        Метод, который позволяет получить список счетов по сделке
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=289572436
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: ID сделки
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillsListDto"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /purchase/{purchase-id}/documents/{document-id}/acceptance:
    post:
      tags: [purchase]
      description: |
        Метод, который позволяет отправить подтверждение ознакомления с договором в процессе сделки
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=291310349
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: ID сделки
          schema:
            type: string
        - name: document-id
          in: path
          required: true
          description: ID документа
          schema:
            type: string
      responses:
        200:
          description: Successful operation
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /purchase/{purchase-id}/schedule/{product-id}:
    get:
      tags: [purchase]
      description: |
        Метод, который позволяет получить список слотов для записи на осмотр ОН
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=307073763
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: Внутренний идентификатор сделки
          schema:
            type: string
        - name: product-id
          in: path
          required: true
          description: Внутренний идентификатор ОН
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleDto"
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /purchase/{purchase-id}/inspections/registration:
    post:
      tags: [purchase]
      description: |
        Метод создания записи на осмотр
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=307072814
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: Внутренний идентификатор сделки
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InspectionRegistrationRequestDto"
      responses:
        204:
          description: Successful operation
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /purchase/{purchase-id}/inspections/{inspection-id}/cancel:
    post:
      tags: [purchase]
      description: |
        Метод отмены записи на осмотр.
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=307073066
      parameters:
        - name: purchase-id
          in: path
          required: true
          description: Внутренний идентификатор сделки
          schema:
            type: string
        - name: inspection-id
          in: path
          required: true
          description: Внешний идентификатор осмотра
          schema:
            type: string
      responses:
        204:
          description: Successful operation
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /purchase/mrclub/offers:
    get:
      tags: [purchase]
      description: |
        Получение списка предложений MR Club для сделок
      security:
        - JWT: []
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=307076095
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseMrclubOffersListDto"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"

  # ################################

  /code/send:
    post:
      tags: [code]
      description: |
        Отправка кода подтверждения на email или телефон
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273654708
      parameters:
        - $ref: "#/components/parameters/captchaToken"
        - $ref: "#/components/parameters/deviceToken"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendCodeRequest"
        required: false
      responses:
        200:
          description: Successful operation (код отправлен)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendCodeResponse"
        202:
          description: Accepted (запрос обработан, но отправка кода невозможна)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendCodeResponse2"
        400:
          description: Bad request (синтаксические ошибки в запросе - неверный JSON, нет обязательного поля, недопустимый тип значения)
          content:
            application/json:
              example: { "errors": [{ "detail": "Недопустимый тип значения" }] }
        403:
          description: Forbidden (переход на следующий шаг запрещен)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendCodeResponse3"
        500:
          description: Internal Server Error

  /code/check:
    post:
      tags: [code]
      description: |
        Проверка значения кода подтверждения
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273653144
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckCodeRequest"
        required: false
      responses:
        200:
          description: Successful operation (итерация закрыта)
        400:
          description: Bad request (синтаксические ошибки в запросе - неверный JSON, нет обязательного поля, недопустимый тип значения)
          content:
            application/json:
              example: { "errors": [{ "detail": "Недопустимый тип значения" }] }
        403:
          description: Forbidden (переход на след. шаг запрещен)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendCodeResponse2"
        500:
          description: Internal Server Error

  /project/{project-code}/features:
    get:
      tags: [catalog]
      description: Метод получения списка особенностей проекта
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285085285
      parameters:
        - name: project-code
          in: path
          required: true
          description: Код Проекта
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeaturesListDto"
        400:
          description: Bad request
        404:
          description: Not Found
        500:
          description: Internal Server Error

  /project/{project-code}/features/{id}:
    get:
      tags: [catalog]
      description: Метод получения списка особенностей проекта
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285085289
      parameters:
        - name: project-code
          in: path
          required: true
          description: Код проекта
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: ID особенности
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureContentDto"
        400:
          description: Bad request
        404:
          description: Not Found
        500:
          description: Internal Server Error

  /project/{project-code}/gallery:
    get:
      tags: [catalog]
      description: Метод получения галереи для проекта
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273656410
      parameters:
        - name: project-code
          in: path
          required: true
          description: Код проекта
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectGalleryListDto"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /decoration:
    get:
      tags: [catalog]
      description: |
        Получение информации по отделкам
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285093883
      parameters:
        - $ref: "#/components/parameters/projectCodeParam"
        - $ref: "#/components/parameters/productCodeFilter"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DecorationListDto"
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalServerError"

  /decoration/kitchen/options:
    get:
      tags: [catalog]
      description: |
        Получение информации о доступных вариантах кухонь по идентификатору типа планировки кухни
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=307069149
      parameters:
        - $ref: "#/components/parameters/kitchenLayoutTypeIdParam"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KitchenOptionsListDto"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"

  /project/{project-code}/infrastructure:
    get:
      tags: [catalog]
      description: Метод возвращает объекты инфраструктуры, категории инфраструктуры и данные проекта для карты
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285089266
      parameters:
        - name: project-code
          in: path
          required: true
          description: Код проекта
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfrastructureResponseDto"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /construction-progress/projects:
    get:
      tags: [catalog]
      description: Метод получения списка проектов с ходом строительства
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285089566
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstructionProgressProjectsListDto"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /project/{project-code}/construction-progress:
    get:
      tags: [catalog]
      description: Возвращает общую информацию для блока Ход строительства
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273677634
      parameters:
        - name: project-code
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstructionProgressDto"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  /project/{project-code}/construction-progress/photo:
    get:
      tags: [catalog]
      description: Возвращает фотографии за определенный месяц для блока Ход строительства
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=273677635
      parameters:
        - name: project-code
          in: path
          required: true
          schema:
            type: string
        - name: month
          in: query
          required: true
          schema:
            type: integer
        - name: year
          in: query
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstructionProgressPhotoDto"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  # ################################

  /mrclub/offers/category:
    get:
      tags: [mrclub]
      description: |
        Получение всех категорий предложений MR Club
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285095021
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MrclubCategoryListDto"
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalServerError"

  /mrclub/offers/category/{category-code}:
    get:
      tags: [mrclub]
      description: |
        Получение списка предложений MR Club для категории
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285095023
      parameters:
        - name: category-code
          in: path
          required: true
          description: Категория предложения MR Club
          schema:
            type: string
        - $ref: "#/components/parameters/paginationPage"
        - $ref: "#/components/parameters/paginationLimit"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MrclubOffersListDto"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"

  /mrclub/offers/{offer-code}:
    get:
      tags: [mrclub]
      description: |
        Получение информации по конкретному предложению MR Club
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285095026
      parameters:
        - name: offer-code
          in: path
          required: true
          description: Код предложения
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MrclubOfferContentDto"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"

  # ################################

  /products-collection:
    get:
      tags: [hold]
      description: |
        Метод возвращает список всех карточек подборок для главной страницы
      externalDocs:
        url: https://wiki.adv.ru/x/ew1dEQ
      parameters:
        - $ref: "#/components/parameters/paginationPage"
        - $ref: "#/components/parameters/paginationLimit"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductsCollectionListDto"
        500:
          $ref: "#/components/responses/InternalServerError"

  /products-collection/{code}:
    get:
      tags: [hold]
      description: |
        Метод возвращает по коду список ОН конкретной подборки
      externalDocs:
        url: https://wiki.adv.ru/x/vxFdEQ
      parameters:
        - name: code
          in: path
          description: Внутренний код подборки
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/paginationPage"
        - $ref: "#/components/parameters/paginationLimit"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductsCollectionGoodsListDto"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"

  /project/{project-code}/booklets:
    get:
      tags: [catalog]
      description: |
        Метод возвращает материалы по проекту
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=291315558
      parameters:
        - name: project-code
          in: path
          required: true
          description: Код проекта
          schema:
            type: string
            example: "mod"
      responses:
        200:
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookletsResponseDto"

  /private-file/{file-id}:
    get:
      tags: [files]
      description: |
        Метод возвращает файл из приватного хранилища, предваритально проверяя наличие доступа к файлу
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=291322206
      parameters:
        - name: file-id
          in: path
          required: true
          description: ID приватного файла
          schema:
            type: integer
            example: 2225511
      responses:
        200:
          description: Succesfull opeartion
          content:
            application/octet-stream: {}
        400:
          $ref: "#/components/responses/BadRequest"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  # ################################

  /hotline/form:
    post:
      tags: [hotline]
      description: |
        Метод отправки обращения на линию доверия
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=291318867
      parameters:
        - $ref: "#/components/parameters/captchaToken"
        - $ref: "#/components/parameters/deviceToken"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HotlineFormRequestDto"
      responses:
        200:
          description: Successful operation
        400:
          $ref: "#/components/responses/BadRequest"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        422:
          $ref: "#/components/responses/UnprocessableEntity"
        500:
          $ref: "#/components/responses/InternalServerError"
        503:
          $ref: "#/components/responses/ServiceUnavailable"

  # ################################

  /example:
    get:
      description: |
        Метод для примера использования типовых ответов.
      responses:
        "204":
          description: Действие выполнено успешно.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"

# ################################
#
# Модели данных
#
# ################################

components:
  headers:
    CacheControl:
      description: |
        Инструкции по кэшированию ответа.

        - [Cache-Control](https://www.ietf.org/rfc/rfc9111.html#name-cache-control) (RFC 9111)
        - [Cache-Control](https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Cache-Control) (MDN)
      schema:
        type: string
        example: "private"

    LastModified:
      description: |
        Дата и время последнего изменения запрошенного ресурса.
        Для коллекций — время последнего изменения ресурсов в коллекции.

        - [Last-Modified](https://www.ietf.org/rfc/rfc7232.html#section-2.2) (RFC 7232)
        - [Last-Modified](https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Last-Modified) (MDN)
      schema:
        type: string
        example: "Wed, 21 Oct 2015 07:28:00 GMT"

  responses:
    #######################################
    ## Типовые ответы.
    ## Располагайте в алфавитном порядке!
    #######################################

    BadRequest:
      description: |
        Синтаксическая ошибка в запросе: неверный JSON, нет обязательного поля, недопустимый тип
        значения и т.п.

        Возможные коды ошибок:

        - `invalid_value` — полученное значение не соответствует заданным ограничениям;
        - `syntax_error` — синтаксическая ошибка в запросе.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"

    ConsentDocument:
      description: |
        [Документ согласия](https://wiki.adv.ru/pages/viewpage.action?pageId=307093060).
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: "#/components/schemas/ConsentDocument"
      headers:
        cache-control:
          $ref: "#/components/headers/CacheControl"
        last-modified:
          $ref: "#/components/headers/LastModified"

    Forbidden:
      description: |
        Доступ запрещен.

        Возможные коды ошибок:
        - `access_denied` — доступ запрещён.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"

    FormConfig:
      description: |
        [Конфигурация формы](https://wiki.adv.ru/pages/viewpage.action?pageId=307092923).
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: "#/components/schemas/FormConfig"
      headers:
        cache-control:
          $ref: "#/components/headers/CacheControl"

    FormConfigCollection:
      description: |
        Коллекция конфигураций форм.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/FormConfig"
      headers:
        cache-control:
          $ref: "#/components/headers/CacheControl"

    InternalServerError:
      description: |
        При обработке запроса на сервере произошла внутренняя ошибка.

        Возможные коды ошибок:
        - `internal_error` — внутренняя ошибка приложения.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"

    NotFound:
      description: |
        Запрошенный URL не существует.

        Возможные коды ошибок:

        - `not_found` — запрошенный ресурс не найден.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"

    ServiceUnavailable:
      description: |
        Сервер не готов обработать запрос.

        Возможные коды ошибок:

        - `service_unavailable` — приложение временно недоступно.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"

    Unauthorized:
      description: |
        Требуется аутентификация.

        Возможные коды ошибок:

        - `authentication_required` — не предоставлены аутентификационные данные.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"

    UnprocessableEntity:
      description: |
        Данные запроса не могут быть обработаны.

        Возможные коды ошибок:

        - `unprocessable_entity` — логическая ошибка, из-за которой невозможно произвести операцию над ресурсом.
        - `not_available_time` — запрашиваемое время недоступно
        - `already_created` — запрашиваемая на создание сущность уже создана
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"

  schemas:
    ################################################################
    ## Располагайте схемы в алфавитном порядке для удобства поиска
    ## и снижения риска конфликтов при слиянии.
    ################################################################

    BookingErrorDto:
      description: Сообщение об ошибки для метода бесплатного бронирования
      type: object
      properties:
        result:
          type: string
          description: Текст ошибки
        description:
          type: string
          description: Описание ошибки

    ConsentDocument:
      description: |
        Документ, выражающий согласие, которое должен/может дать пользователь.
      type: object
      required:
        - brief
        - id
        - text
        - title
        - url_name
      properties:
        id:
          $ref: "#/components/schemas/ConsentDocumentId"
        url_name:
          $ref: "#/components/schemas/ConsentDocumentUrlName"
        title:
          description: |
            Название документа для показа пользователям.
          type: string
          example: "Согласие на обработку персональных данных в целях маркетинговых рассылок"
        brief:
          description: |
            Краткое (обычно один-два абзаца) описание документа. Точное назначение неизвестно, но
            вероятно должно показываться при отображении документа между заголовком и полным
            текстом. Как правило носит справочный характер и не является юридически значимым.

            *Может содержать разметку HTML!*
          type: string
          example: "<p>Даю согласие на получение всякой фигни на электронную почту.</p>"
        text:
          description: |
            Юридически значимый текст.

            *Может содержать разметку HTML!*
          type: string
          example: "<ol>\n<li>…</li>\n<li>…</li>\n</ol>"

    ConsentDocumentId:
      description: |
        Идентификатор документа согласия.
      type: string
      example: "123456"

    ConsentDocumentRef:
      description: |
        Ссылка на документ, выражающий согласие, которое должен/может дать пользователь.
      type: object
      required:
        - id
        - url_name
      properties:
        id:
          $ref: "#/components/schemas/ConsentDocumentId"
        url_name:
          $ref: "#/components/schemas/ConsentDocumentUrlName"

    ConsentDocumentUrlName:
      description: |
        **Под вопросом!**

        Предположительно в этом атрибуте будет возвращаться код документа для использования в URL
        страницы документа на сайте.
      type: string
      example: "politika-obrabotki-personalnykh-dannykh"

    ConsentRequest:
      description: |
        [Запрос согласия](https://wiki.adv.ru/pages/viewpage.action?pageId=307093033) — связующее
        звено между конфигурацией формы и документом согласия. Задаёт необходимость/возможность
        получения определённого согласия в определённой форме. Упрощённо говоря задаёт «галочку»,
        которую отобразить в форме ввода и определяет, является ли её установка обязательной для
        отправки формы.
      type: object
      required:
        - caption
        - consent_document
        - display_condition
        - required
      properties:
        caption:
          description: |
            Надпись для показа в форме возле «галочки».

            По требованиям нужна возможность поставить ссылку на связанный документ согласия с
            произвольной части подписи. При этом сама ссылка может быть разной на разных фронтах
            (в т. ч. вообще быть не ссылкой, а триггером какого-либо действия). Исходя из этого было
            принято решение отмечать нужный участок надписи метками  [URL]…[/URL] и оставить фронтам
            решение о том как именно делать ссылку с этого участка.
          type: string
          minLength: 14
          maxLength: 100
          example: "Я ознакомлен с [URL]политикой обработки персональных данных[/URL] и даю согласие на обработку персональных данных."
        consent_document:
          $ref: "#/components/schemas/ConsentDocumentRef"
        display_condition:
          description: |
            Условие показа. Некоторые согласия могут требоваться (быть доступны) только при
            определённых условиях.

            - `always` — показывать всегда
            - `anonymous` — только анонимным пользователям
          type: string
          enum:
            - "always"
            - "anonymous"
        required:
          description: |
            Если флаг установлен, это означает что нельзя отправлять форму, пока пользователь не
            предоставит это согласие. При этом `displayCondition` имеет приоритет — если условие
            показа не выполняется, то обязательность неприменима.
          type: boolean

    Consents:
      description: |
        Согласия, предоставленные пользователем.
      type: object
      required:
        - consent_documents
      properties:
        consent_documents:
          description: |
            Перечень документов, с которыми выразил согласие пользователь.
          type: array
          items:
            $ref: "#/components/schemas/ConsentDocumentId"
        phone:
          allOf:
            - $ref: "#/components/schemas/PhoneNumber"
            - description: |
                Номер телефона пользователя для его идентификации как лица, предоставившего
                согласие.
                Можно не указывать, если запрос содержит заголовок `authentication` или указан
                адрес электронной почты в соседнем поле `email`.
        email:
          allOf:
            - $ref: "#/components/schemas/Email"
            - description: |
                Адрес электронной почты пользователя для его идентификации как лица, предоставившего
                согласие.
                Можно не указывать, если запрос содержит заголовок `authentication` или указан
                номер телефона в соседнем поле `phone`.

    DiscountDto:
      type: object
      nullable: true
      description: |
        Полная информация о скидке и цене со скидкой
      required:
        - price
        - meter_price
        - type
        - percentage_discount
        - absolute_discount
        - description
      properties:
        price:
          $ref: "#/components/schemas/AttrProductDiscountPrice"
        meter_price:
          $ref: "#/components/schemas/AttrProductMeterPrice"
        type:
          $ref: "#/components/schemas/AttrProductDiscountType"
        percentage_discount:
          $ref: "#/components/schemas/AttrProductDiscountPercent"
        absolute_discount:
          $ref: "#/components/schemas/AttrProductDiscountAbsolute"
        description:
          $ref: "#/components/schemas/AttrProductDiscountDescription"

    DiscountedPrice:
      description: |
        Цена со скидкой.
      type: object
      nullable: true
      required:
        - percentage_discount
        - price
        - type
      properties:
        percentage_discount:
          $ref: "#/components/schemas/AttrProductDiscountPercent"
        price:
          $ref: "#/components/schemas/AttrProductDiscountPrice"
        type:
          $ref: "#/components/schemas/AttrProductDiscountType"

    Email:
      description: |
        Адрес электронной почты.
      type: string
      example: "user@example.com"

    Error:
      description: |
        Сообщение об ошибке.
      type: object
      required:
        - code
        - detail
      properties:
        code:
          description: |
            Код ошибки. Предназначен для машинной обработки.
            Список возможных кодов см. в описаниях ответа и/или метода API.
          type: string
          example: "some_error_code"
        title:
          description: |
            Краткое описание ошибки, пригодное для показа пользователю. Описание одинаково для всех
            ошибок с одним кодом (`code`).
          type: string
          example: "Описание кода ошибки."
        detail:
          description: |
            Подробное описание ошибки, пригодное для показа пользователю.
          type: string
          example: "Подробное описание ошибки."
        source:
          oneOf:
            - description: |
                Указание на поле с ошибкой.
              type: object
              required:
                - pointer
              properties:
                pointer:
                  description: |
                    Указатель ([RFC6901](https://tools.ietf.org/html/rfc6901)) на проблемный
                    атрибут запроса.
                  type: string
                  example: "/data/0/id"
            - description: |
                Указание на ошибочный параметр.
              type: object
              required:
                - parameter
              properties:
                parameter:
                  description: |
                    Строка, указывающая, какой параметр в URI вызвал ошибку.
                  type: string
                  example: "sort"
            - description: |
                Указание заголовок HTTP, вызывавший ошибку.
              type: object
              required:
                - header
              properties:
                header:
                  description: |
                    Строка, указывающая имя единственного заголовка запроса, который вызвал ошибку.
                  type: string
                  example: "content-type"

    Errors:
      description: |
        Список ошибок.
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"
        message:
          description: |
            Описание ошибки для совместимости со старым форматом.

            **Использовать не рекомендуется**. Используйте поле `errors`.
          type: string
          example: "Подробное описание ошибки (для совместимости со старым форматом)."

    FormConfig:
      description: |
        [Конфигурация формы ввода](https://wiki.adv.ru/pages/viewpage.action?pageId=307092923).
      type: object
      required:
        - consents
        - id
      properties:
        id:
          $ref: "#/components/schemas/FormConfigId"
        consents:
          description: |
            Согласия, которые должен или может дать пользователь перед отправкой формы. Проще говоря
            «галочки», которые должен (может) проставить пользователь перед отправкой формы.
          type: array
          items:
            $ref: "#/components/schemas/ConsentRequest"

    FormConfigId:
      description: |
        Идентификатор (код) конфигурации формы.
      type: string
      enum:
        - "booking"
        - "callback"
        - "consultation"
        - "consultation_boxrooms_parking"
        - "consultation_decoration"
        - "consultation_mortgage_calc"
        - "consultation_mortgage_manager"
        - "phone_input"
        - "registration"
        - "subscription"
        - "subscription_marketing"
        - "subscription_news"

    PhoneNumber:
      description: |
        Номер телефона в формате E.164.
      type: string
      pattern: '^\+7[0-9]{10}$'
      example: "+70001234567"

    ProductsCollectionGoodsListDto:
      description: Возвращает список ОН внутри конкретной подборки
      required:
        - code
        - title
        - description
        - items
        - count
        - limit
        - page
        - page_count
      properties:
        code:
          type: string
          minLength: 1
          description: Код подборки
          example: "Kvartiri_bez_okon_klass"
        title:
          type: string
          minLength: 1
          description: Заголовок подборки
          example: "Квартиры без окон, класс"
        description:
          type: string
          minLength: 1
          description: Описание подборки
          example: "Посмотрите классные квартиры без окон"
        items:
          type: array
          description: Список ОН
          items:
            $ref: "#/components/schemas/ProductDto"
        count:
          $ref: "#/components/schemas/AttrCount"
        limit:
          $ref: "#/components/schemas/AttrPaginationLimit"
        page:
          $ref: "#/components/schemas/AttrPaginationPage"
        page_count:
          $ref: "#/components/schemas/AttrPaginationPageCount"

    ProductsCollectionListDto:
      description: Возвращает список всех подборок ОН для главной страницы
      required:
        - items
        - count
        - limit
        - page
        - page_count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProductsCollectionDto"
        count:
          $ref: "#/components/schemas/AttrCount"
        limit:
          $ref: "#/components/schemas/AttrPaginationLimit"
        page:
          $ref: "#/components/schemas/AttrPaginationPage"
        page_count:
          $ref: "#/components/schemas/AttrPaginationPageCount"

    ProductsCollectionDto:
      description: Подборка ОН для главной страницы
      required:
        - code
        - title
        - description
        - background_image
        - background_color
        - icon
      type: object
      properties:
        code:
          type: string
          minLength: 1
          description: Код подборки
          example: "Kvartiri_bez_okon_klass"
        title:
          type: string
          minLength: 1
          description: Заголовок подборки
          example: "Квартиры без окон, класс"
        description:
          type: string
          minLength: 1
          description: Описание подборки
          example: "Посмотрите классные квартиры без окон"
        background_image:
          type: string
          minLength: 1
          description: Фоновое изображение
          example: "/upload/iblock/f0a/krkifi3pym5qvtoal3pjmgu59ni8ac47.png"
        background_color:
          type: string
          minLength: 1
          description: Фоновый цвет
          example: "#BEBBC9"
        icon:
          type: string
          minLength: 1
          description: Иконка
          example: "/upload/uf/f23/gmo2t696s6py2xk8ywmsryz6zzrfom2d.png"

    MortgageRequestDto:
      type: object
      description: Объект для запроса создания новой заявки на ипотеку
      required:
        - project
      properties:
        project:
          $ref: "#/components/schemas/AttrProjectCode"
        code:
          description: Код из смс для подтверждения доступа к пользователю в ДВИЖ
          type: string
          example: "412351"
        rate:
          $ref: "#/components/schemas/AttrMortgageRate"
        payment:
          $ref: "#/components/schemas/AttrMortgageMonthlyPayment"
        period_max:
          description: Максимальный период ипотечного предложения
          type: number
          example: 30
        initial_payment:
          description: Первоначальный взнос в рублях
          type: number
          example: 4500999
        price:
          $ref: "#/components/schemas/AttrProductTotalPrice"
        purchase_id:
          description: Идентификатор сделки, из которой создается заявка
          type: number

    MortgageApplicationListDto:
      description: |
        Список заявок на ипотеку.
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/MortgageApplicationDetailDto"

    MortgageApplicationDetailDto:
      description: |
        Заявка на ипотеку.
      type: object
      required:
        - id
        - lead_id
        - number
        - status
        - project
        - rate
        - payment
        - period
        - create_date
        - link
        - offers
      properties:
        id:
          description: Внутренний ID заявки.
          type: integer
          minimum: 1
        lead_id:
          type: string
          description: Идентификатор клиентского интереса (идентификатор лида в CRM)
          minLength: 1
          nullable: true
        number:
          description: Номер заявки.
          type: string
          minLength: 1
          example: "ИП456789"
        status:
          $ref: "#/components/schemas/MortgageApplicationStatus"
        project:
          description: |
            Проект, в контексте которого была отправлена заявка
          type: object
          required: [id, code, name]
          properties:
            id:
              $ref: "#/components/schemas/AttrProjectId"
            code:
              $ref: "#/components/schemas/AttrProjectCode"
            name:
              $ref: "#/components/schemas/AttrProjectName"
        rate:
          $ref: "#/components/schemas/AttrMortgageRate"
        payment:
          type: number
          description: Платеж по ипотеке в рублях
          example: 25665
          nullable: true
        period:
          type: integer
          description: Срок кредита в годах
          example: 30
          nullable: true
        create_date:
          type: string
          format: date
          description: Дата создания заявки
          example: "2022-03-15"
        link:
          type: string
          format: url
          description: Ссылка на форму
          example: "https://make.dvizh.online/sms/4VKX"
          minLength: 1
        offers:
          type: array
          description: Список заявок в банк
          items:
            $ref: "#/components/schemas/MortgageOfferDto"

    MortgageApplicationDto:
      type: object
      description: Заявка на ипотеку
      required:
        - id
        - number
        - project
        - create_date
        - status
        - manager
      properties:
        id:
          type: integer
          description: Внутренний ID заявки
        number:
          type: string
          description: Номер заявки
          example: "ИП874525"
          minLength: 1
        project:
          type: object
          description: Проект
          required: [id, code, name]
          properties:
            id:
              $ref: "#/components/schemas/AttrProjectId"
            code:
              $ref: "#/components/schemas/AttrProjectCode"
            name:
              $ref: "#/components/schemas/AttrProjectName"
        create_date:
          type: string
          format: date
          description: Дата создания заявки
          example: "2022-03-15"
        status:
          $ref: "#/components/schemas/MortgageApplicationStatus"
        manager:
          type: object
          description: Ипотечный менеджер
          required: [name, email, phone]
          nullable: true
          properties:
            name:
              type: string
              description: ФИО менеджера
              example: "Фролов Андрей Викторович"
              nullable: true
              minLength: 1
            email:
              type: string
              description: email менеджера
              example: "user@domain.com"
              nullable: true
              minLength: 1
            phone:
              type: string
              description: телефон менеджера
              example: "+79996665555"
              nullable: true
              minLength: 1

    MortgageOfferDto:
      type: object
      description: Заявка в банк
      required:
        - id
        - program
        - bank
        - rate
        - payment
        - amount
        - period
        - available
        - status
      properties:
        id:
          type: integer
          description: Внутренний id заявки в банк
        program:
          type: string
          description: Название ипотечной программы
          example: "Семейная"
          minLength: 1
        bank:
          $ref: "#/components/schemas/MortgageCalcBankDto"
        rate:
          $ref: "#/components/schemas/AttrMortgageRate"
        payment:
          type: number
          description: Платеж по ипотеке
          example: 25665
          nullable: true
        amount:
          type: number
          description: Сумма кредита
          example: 10000000
          nullable: true
        period:
          type: integer
          description: Срок кредита в годах
          example: 30
          nullable: true
        available:
          type: boolean
          description: Предложение доступно для выбора
        status:
          $ref: "#/components/schemas/MortgageApplicationStatus"

    MortgageOfferDetailDto:
      description: Детальная карточка заявки в банк.
      type: object
      required:
        - id
        - create_date
        - program
        - bank
        - rate
        - payment
        - amount
        - period
        - initial_payment
        - status
        - persons
        - reject_reason
        - available
        - application
      properties:
        id:
          description: Внутренний ID заявки в банк.
          type: integer
          minimum: 1
        create_date:
          description: Дата создания заявки.
          type: string
          format: date
          example: "2022-08-15"
        program:
          description: Название ипотечной программы.
          type: string
          minLength: 1
          example: "IT"
        bank:
          $ref: "#/components/schemas/MortgageCalcBankDto"
        rate:
          $ref: "#/components/schemas/AttrMortgageRate"
        payment:
          description: Платеж по ипотеке `TODO `В рублях? В копейках?`.
          type: number
          nullable: true
          minimum: 0
          example: 25565
        amount:
          description: Сумма кредита `TODO В рублях? В копейках?`.
          type: number
          nullable: true
          minimum: 0
          example: 12000000
        period:
          description: Срок кредита в годах.
          type: integer
          nullable: true
          example: 30
          minimum: 1
        initial_payment:
          $ref: "#/components/schemas/AttrMortgageInitialPayment"
        status:
          $ref: "#/components/schemas/MortgageApplicationStatus"
        persons:
          type: array
          items:
            $ref: "#/components/schemas/MortgagePerson"
        reject_reason:
          type: string
          description: Текст причины отказа
          example: "Низкий кредитный рейтинг"
          minLength: 1
          nullable: true
        available:
          type: boolean
          description: Предложение доступно для выбора
        application:
          $ref: "#/components/schemas/MortgageApplicationDto"

    MortgageApplicationStatus:
      description: |
        Статус заявки на ипотеку.
      type: object
      externalDocs:
        url: https://wiki.adv.ru/pages/viewpage.action?pageId=285091037
      required:
        - code
        - name
      properties:
        code:
          description: Код статуса заявки.
          type: string
          enum:
            - "new"
            - "awaiting_approval"
            - "approved"
            - "chosen"
            - "completed"
            - "rejected"
        name:
          description: Название статуса, пригодное для показа пользователю.
          type: string

    MortgagePerson:
      type: object
      description: Участник заявки
      required:
        - id
        - surname
        - name
        - patronymic
        - phone
        - email
        - role
      properties:
        id:
          type: integer
          description: Внутренний ID участника
          example: 25
        surname:
          type: string
          description: Фамилия участника
          example: "Федоров"
          minLength: 1
        name:
          type: string
          description: Имя участника
          example: "Иван"
          minLength: 1
        patronymic:
          type: string
          description: Отчество участника
          example: "Петрович"
          nullable: true
        phone:
          type: string
          description: Телефон участника
          example: "+7999888777"
          nullable: true
        email:
          type: string
          description: email участника
          example: "user@domain.com"
          nullable: true
        role:
          type: string
          description: Название роли участника
          example: "Заемщик"
          minLength: 1

    ConstructionProgressProjectsListDto:
      type: array
      description: Список проектов с ходом строительства
      items:
        $ref: "#/components/schemas/ConstructionProgressProjectDto"

    ConstructionProgressProjectDto:
      type: object
      required:
        - id
        - name
        - code
        - metro
        - metro_distance
        - movement_way
        - image
      properties:
        id:
          type: integer
          description: ID проекта
        name:
          $ref: "#/components/schemas/AttrProjectName"
        code:
          $ref: "#/components/schemas/AttrProjectCode"
        image:
          type: string
          description: Актуальное изображение стройки проекта или маркетинговое изображение
        metro:
          $ref: "#/components/schemas/MetroDto"
        metro_distance:
          $ref: "#/components/schemas/AttrMetroDistance"
        movement_way:
          $ref: "#/components/schemas/MetroMovementWayDto"

    PlanObjectOnFloorDto:
      type: object
      description: Информация об ОН
      required:
        - id
        - code
        - price
        - discount
        - purchase_type
        - monthly_payment
        - number_on_floor
        - project
        - category
        - area
        - floor
        - rooms_number
        - number
        - status
        - booking_type
      properties:
        id:
          type: integer
          description: ID ОН
        code:
          type: string
          description: Код ОН
          example: "kvartira-21"
          minLength: 1
        price:
          $ref: "#/components/schemas/AttrProductTotalPrice"
        discount:
          $ref: "#/components/schemas/DiscountDto"
        purchase_type:
          type: string
          description: Код основного способа покупки
          example: "mortgage"
          minLength: 1
        monthly_payment:
          $ref: "#/components/schemas/AttrProductMonthlyPayment"
        project:
          $ref: "#/components/schemas/ProductProjectDto"
        category:
          $ref: "#/components/schemas/ProductCategoryDto"
        area:
          $ref: "#/components/schemas/AttrProductArea"
        floor:
          $ref: "#/components/schemas/AttrProductFloor"
        rooms_number:
          $ref: "#/components/schemas/AttrProductRoomsNumber"
        number:
          $ref: "#/components/schemas/AttrProductNumber"
        number_on_floor:
          $ref: "#/components/schemas/AttrProductNumberOnFloor"
        status:
          $ref: "#/components/schemas/ProductStatusDto"
        booking_type:
          $ref: "#/components/schemas/AttrProductBookingType"

    ProjectListDto:
      type: object
      description: Информация по проекту
      required:
        - category
        - items
      properties:
        category:
          $ref: "#/components/schemas/AttrCategoryCode"
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProjectBrief"

    ProjectBrief:
      description: |
        Краткие сведения о [проекте](https://wiki.adv.ru/pages/viewpage.action?pageId=307083606).
      type: object
      required:
        - external
        - id
        - code
        - name
        - logo
        - image
        - is_completed
        - completion_date
        - title
        - key_project
        - latitude
        - longitude
        - metro
        - metro_distance
        - movement_way
        - project_usp
        - main_3d
        - air_3d
        - queues
        - partners
        - max_discount
        - min_price
        - price_table
      properties:
        id:
          $ref: "#/components/schemas/AttrProjectId"
        code:
          $ref: "#/components/schemas/AttrProjectCode"
        name:
          $ref: "#/components/schemas/AttrProjectName"
        logo:
          $ref: "#/components/schemas/AttrProjectLogo"
        image:
          $ref: "#/components/schemas/AttrProjectImage"
        min_price:
          $ref: "#/components/schemas/AttrMinPrice"
        max_discount:
          $ref: "#/components/schemas/AttrMaxDiscount"
        is_completed:
          type: boolean
          description: Признак завершения проекта
        completion_date:
          description: Дата завершения проекта
          type: string
          nullable: true
          format: date
          example: "2023-05-22"
        title:
          $ref: "#/components/schemas/AttrProjectTitle"
        key_project:
          type: boolean
          description: Признак ключевого проекта [пока не реализовано]
        external:
          $ref: "#/components/schemas/AttrProjectExternal"
        latitude:
          $ref: "#/components/schemas/AttrMapCoordinate"
        longitude:
          $ref: "#/components/schemas/AttrMapCoordinate"
        metro:
          $ref: "#/components/schemas/MetroDto"
        metro_distance:
          $ref: "#/components/schemas/AttrMetroDistance"
        movement_way:
          $ref: "#/components/schemas/MetroMovementWayDto"
        partners:
          type: array
          items:
            $ref: "#/components/schemas/ProjectPartnerDto"
        project_usp:
          type: array
          items:
            $ref: "#/components/schemas/ProjectUSPDto"
        price_table:
          $ref: "#/components/schemas/PriceTableDto"
        main_3d:
          $ref: "#/components/schemas/AttrProjectMain3d"
        air_3d:
          $ref: "#/components/schemas/AttrProjectAir3d"
        queues:
          $ref: "#/components/schemas/AttrQueues"

    Project:
      description: |
        Полные сведения о [проекте](https://wiki.adv.ru/pages/viewpage.action?pageId=307083606).
      type: object
      required:
        - code
        - external
        - id
        - max_price
        - min_price
        - name
        - object_types
        - title
        - description
        - metro
        - metro_distance
        - movement_way
        - marketing_images
        - mobile_marketing_images
        - apartments_count
        - queues
        - main_plan
        - alternative_plan
        - view_from_above_plan
        - main_3d
        - air_3d
        - latitude
        - longitude
        - documentation
      properties:
        id:
          $ref: "#/components/schemas/AttrProjectId"
        code:
          $ref: "#/components/schemas/AttrProjectCode"
        name:
          $ref: "#/components/schemas/AttrProjectName"
        title:
          $ref: "#/components/schemas/AttrProjectTitle"
        description:
          type: string
          nullable: true
          description: Описание проекта
          example: "MOD — город городов. Коллекция лучших решений из самых прогрессивных мегаполисов планеты."
        min_price:
          $ref: "#/components/schemas/AttrMinPriceNullable"
        max_price:
          type: number
          description: Максимальная цена ОН в проекте в рублях
          example: 10052890
          nullable: true
        metro:
          $ref: "#/components/schemas/MetroDto"
        metro_distance:
          $ref: "#/components/schemas/AttrMetroDistance"
        movement_way:
          $ref: "#/components/schemas/MetroMovementWayDto"
        marketing_images:
          type: array
          description: Маркетинговые изображения
          items:
            type: string
            example: "/upload/iblock/d0f/y5w6toh1vrvm292v4tcaq26ez777kf7a.jpg"
        mobile_marketing_images:
          type: array
          description: Маркетинговые изображения (Мобильные)
          items:
            type: string
            example: "/upload/iblock/d0f/y5w6toh1vrvm292v4tcaq26ez777kf7a.jpg"
        apartments_count:
          type: integer
          description: Всего квартир
          example: 10
        queues:
          $ref: "#/components/schemas/AttrQueues"
        object_types:
          type: array
          description: Доступные типы ОН
          items:
            $ref: "#/components/schemas/ObjectTypeDto"
        main_plan:
          $ref: "#/components/schemas/InteractivePlanDto"
        alternative_plan:
          $ref: "#/components/schemas/InteractivePlanDto"
        view_from_above_plan:
          $ref: "#/components/schemas/InteractivePlanDto"
        main_3d:
          $ref: "#/components/schemas/AttrProjectMain3d"
        air_3d:
          $ref: "#/components/schemas/AttrProjectAir3d"
        latitude:
          $ref: "#/components/schemas/AttrMapCoordinate"
        longitude:
          $ref: "#/components/schemas/AttrMapCoordinate"
        documentation:
          type: string
          nullable: true
          format: html
          description: "Документация к материалам проекта (Свойство 'Описание к материалам')"
        external:
          $ref: "#/components/schemas/AttrProjectExternal"

    PrivateListDto:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/PrivateProjectDto"

    PrivateProjectDto:
      type: object
      description: Сниппет проекта MR Private
      required:
        - id
        - code
        - name
        - title
        - marketing_image
        - phone
        - link
        - video
      properties:
        id:
          $ref: "#/components/schemas/AttrProjectId"
        code:
          $ref: "#/components/schemas/AttrProjectCode"
        name:
          $ref: "#/components/schemas/AttrProjectName"
        title:
          type: string
          description: Заголовок проекта
          minLength: 1
        marketing_image:
          type: string
          description: Первое маркетинговое изображение проекта
          minLength: 1
        phone:
          type: string
          description: Телефон офиса продаж проекта
          minLength: 1
        link:
          type: string
          description: Ссылка на внешний сайт
          example: "https://privateproject.site"
          minLength: 1
          nullable: true
        video:
          type: string
          description: Ссылка на файл видео
          example: "/upload/iblock/26c/video_full.mp4"
          minLength: 1
          nullable: true

    ObjectTypeDto:
      type: object
      description: Доступные типы ОН для карточки проекта.
      required:
        - code
        - name
        - image
        - background_color
        - description
        - price
        - discounted_price
      properties:
        code:
          $ref: "#/components/schemas/AttrCategoryCode"
        name:
          $ref: "#/components/schemas/AttrCategoryName"
        image:
          description: Изображение.
          type: string
          nullable: true
          example: "/upload/iblock/f0a/krkifi3pym5qvtoal3pjmgu59ni8ac47.png"
        background_color:
          description: Фоновый цвет
          nullable: true
          type: string
          example: "#BEBBC9"
        description:
          description: Описание для типа ОН.
          nullable: true
          type: string
          example: "Прекрасные квартиры MR Group!"
        price:
          $ref: "#/components/schemas/AttrProductTotalPrice"
        discounted_price:
          $ref: "#/components/schemas/DiscountedPrice"

    ProjectUSPDto:
      type: object
      description: УТП проекта
      required: [icon, name]
      properties:
        icon:
          type: string
          description: Иконка УТП
          example: "/upload/uf/f23/gmo2t696s6py2xk8ywmsryz6zzrfom2d.png"
        name:
          type: string
          description: Название УТП
          example: "2 минуты до реки"

    ProjectPartnerDto:
      type: object
      description: Партнер проекта
      required: [logo, name]
      properties:
        logo:
          type: string
          description: Логотип партнера
          example: "/upload/uf/9ab/3ereodo6u1ystmv6ofco6z0w48yu76yf.png"
        name:
          type: string
          description: Название партнера
          example: "Сбер"

    ProductListDto:
      type: object
      required:
        - category
        - items
        - limit
        - page
        - page_count
        - sort
      description: Объект списка ОН
      properties:
        category:
          type: string
          description: Примененная категория
          nullable: true
        items:
          type: array
          description: Список ОН
          items:
            $ref: "#/components/schemas/ProductDto"
        limit:
          $ref: "#/components/schemas/AttrPaginationLimit"
        page:
          $ref: "#/components/schemas/AttrPaginationPage"
        page_count:
          $ref: "#/components/schemas/AttrPaginationPageCount"
        sort:
          $ref: "#/components/schemas/SortDto"

    ProductDto:
      type: object
      description: Информация по ОН для сниппета
      required:
        - id
        - crm_id
        - code
        - name
        - price
        - discount
        - purchase_type
        - meter_price
        - monthly_payment
        - category
        - decoration
        - technical_layout
        - functional_layout
        - apartment_on_floor
        - area
        - floor
        - rooms_number
        - number
        - family
        - plan
        - building
        - project
        - subtype
        - booking_type
        - purchase_types
        - kitchen
        - status
        - stop_sales
      properties:
        id:
          $ref: "#/components/schemas/AttrProductId"
        crm_id:
          type: string
          description: ID ОН в CRM
          minLength: 1
          example: "85718282-f6f6-48e6-bacc-517460b3ad48"
        code:
          $ref: "#/components/schemas/AttrProductCode"
        name:
          $ref: "#/components/schemas/AttrProductName"
        price:
          $ref: "#/components/schemas/AttrProductTotalPrice"
        discount:
          $ref: "#/components/schemas/DiscountDto"
        purchase_type:
          type: string
          description: Основной способ покупки
          example: "mortgage"
          minLength: 1
        meter_price:
          $ref: "#/components/schemas/AttrProductMeterPrice"
        monthly_payment:
          $ref: "#/components/schemas/AttrProductMonthlyPayment"
        category:
          $ref: "#/components/schemas/ProductCategoryDto"
        decoration:
          $ref: "#/components/schemas/ProductDecorationDto"
        technical_layout:
          $ref: "#/components/schemas/AttrProductTechnicalLayout"
        functional_layout:
          $ref: "#/components/schemas/AttrProductFunctionalLayout"
        apartment_on_floor:
          $ref: "#/components/schemas/AttrProductApartmentOnFloor"
        area:
          $ref: "#/components/schemas/AttrProductArea"
        floor:
          $ref: "#/components/schemas/AttrProductFloor"
        rooms_number:
          $ref: "#/components/schemas/AttrProductRoomsNumber"
        number:
          $ref: "#/components/schemas/AttrProductNumber"
        family:
          type: boolean
          description: Признак семейного места
        plan:
          $ref: "#/components/schemas/ShortInteractivePlanDto"
        building:
          $ref: "#/components/schemas/BuildingDto"
        status:
          $ref: "#/components/schemas/ProductStatusDto"
        stop_sales:
          $ref: "#/components/schemas/AttrProductStopSales"
        project:
          $ref: "#/components/schemas/ProductProjectDto"
        subtype:
          $ref: "#/components/schemas/ProductSubTypeDto"
        booking_type:
          $ref: "#/components/schemas/AttrProductBookingType"
        purchase_types:
          type: array
          description: Доступные способы покупки.
          items:
            $ref: "#/components/schemas/ProductPurchaseTypeDto"
        kitchen:
          $ref: "#/components/schemas/ProductKitchenDto"

    ProductDetailDto:
      type: object
      description: Полная информация по ОН.
      required:
        - id
        - code
        - name
        - project
        - status
        - category
        - decoration
        - object_types
        - purchase_types
        - kitchen
        - article
        - stop_sales
        - booking_type
        - price
        - meter_price
        - monthly_payment
        - area
        - number
        - ceiling_height
        - rooms_number
        - floor
        - room_type
        - functional_layout
        - technical_layout
        - apartment_on_floor
        - layout_3d
        - metro
        - metro_distance
        - movement_way
        - building
        - environment
        - view_from_window
        - purchase_type
      properties:
        id:
          $ref: "#/components/schemas/AttrProductId"
        code:
          $ref: "#/components/schemas/AttrProductCode"
        name:
          $ref: "#/components/schemas/AttrProductName"
        price:
          $ref: "#/components/schemas/AttrProductTotalPrice"
        meter_price:
          $ref: "#/components/schemas/AttrProductMeterPrice"
        monthly_payment:
          $ref: "#/components/schemas/AttrProductMonthlyPayment"
        area:
          $ref: "#/components/schemas/AttrProductArea"
        number:
          $ref: "#/components/schemas/AttrProductNumber"
        ceiling_height:
          $ref: "#/components/schemas/AttrProductCellingHeught"
        rooms_number:
          $ref: "#/components/schemas/AttrProductRoomsNumber"
        floor:
          $ref: "#/components/schemas/AttrProductFloor"
        room_type:
          type: string
          description: Тип помещения ОН
          example: "Жилая"
          nullable: true
        functional_layout:
          $ref: "#/components/schemas/AttrProductFunctionalLayout"
        technical_layout:
          $ref: "#/components/schemas/AttrProductTechnicalLayout"
        apartment_on_floor:
          $ref: "#/components/schemas/AttrProductApartmentOnFloor"
        layout_3d:
          $ref: "#/components/schemas/AttrProductLayout3d"
        metro:
          $ref: "#/components/schemas/MetroDto"
        metro_distance:
          $ref: "#/components/schemas/AttrMetroDistance"
        movement_way:
          $ref: "#/components/schemas/MetroMovementWayDto"
        building:
          $ref: "#/components/schemas/BuildingDetailDto"
        status:
          $ref: "#/components/schemas/ProductStatusDto"
        stop_sales:
          $ref: "#/components/schemas/AttrProductStopSales"
        project:
          $ref: "#/components/schemas/ProductProjectDto"
        environment:
          $ref: "#/components/schemas/ProductEnvironmentDto"
        view_from_window:
          $ref: "#/components/schemas/ProductWindowViewDto"
        category:
          $ref: "#/components/schemas/ProductCategoryDto"
        decoration:
          $ref: "#/components/schemas/ProductDecorationDto"
        purchase_types:
          type: array
          description: Доступные способы покупки.
          items:
            $ref: "#/components/schemas/ProductPurchaseTypeDto"
        purchase_type:
          type: string
          description: Основной способ покупки
          example: "mortgage"
        booking_type:
          $ref: "#/components/schemas/AttrProductBookingType"
        object_types:
          type: array
          description: Доступные типы ОН.
          items:
            $ref: "#/components/schemas/ObjectTypeDto"
        kitchen:
          $ref: "#/components/schemas/ProductKitchenDto"
        article:
          $ref: "#/components/schemas/AttrProductArticle"

    BuildingDto:
      type: object
      description: Информация по корпусу
      nullable: true
      required:
        - id
        - code
        - name
        - floors_number
        - deadline
        - readiness
        - scheme
        - compass_angle
      properties:
        id:
          $ref: "#/components/schemas/AttrBuildingId"
        code:
          $ref: "#/components/schemas/AttrBuildingCode"
        name:
          $ref: "#/components/schemas/AttrBuildingName"
        floors_number:
          type: integer
          description: Количество этажей в корпусе
          nullable: true
          example: 24
        deadline:
          $ref: "#/components/schemas/AttrBuildingDeadline"
        readiness:
          type: integer
          description: Готовность в %
          nullable: true
          example: 30
        scheme:
          type: string
          description: Изображение для корпуса
          example: "/upload/iblock/8d0/sghev3wfnq5gjycw0d1p691ievt7kkfh.png"
          nullable: true
        compass_angle:
          $ref: "#/components/schemas/AttrCompassAngle"

    BuildingDetailDto:
      allOf:
        - $ref: "#/components/schemas/BuildingDto"
        - type: object
          properties:
            shadow_map:
              type: object
              properties:
                sunrise_angle:
                  type: integer
                  minimum: 0
                  maximum: 359
                  example: 30
                  description: Угол восхода солнца
                  nullable: true
                sunset_angle:
                  type: integer
                  minimum: 0
                  maximum: 359
                  example: 30
                  description: Угол восхода солнца
                  nullable: true
                direction:
                  type: string
                  enum: ["clockwise", "counterclockwise"]
                  nullable: true
                  description: Направление движения солнца. По часовой/Против часовой стрелки

    ProductStatusDto:
      type: object
      description: Статус ОН
      required: [code, name]
      properties:
        code:
          type: string
          description: Код статуса
          enum: ["free", "booked", "purchased"]
          example: "free"
          minLength: 1
        name:
          type: string
          description: Название статуса
          example: "Доступен"
          minLength: 1

    ProductProjectDto:
      type: object
      description: Краткая информация о проекте для ОН
      required:
        - code
        - description
        - id
        - marketing_image
        - name
        - title
      properties:
        id:
          $ref: "#/components/schemas/AttrProjectId"
        code:
          $ref: "#/components/schemas/AttrProjectCode"
        name:
          $ref: "#/components/schemas/AttrProjectName"
        marketing_image:
          type: string
          nullable: true
          description: Первое маркетинговое изображение
        title:
          type: string
          nullable: true
          description: Заголовок проекта
        description:
          type: string
          nullable: true
          description: Описание к проекту

    ProductEnvironmentDto:
      type: object
      required:
        - upper_side
        - right_side
        - lower_side
        - left_side
      description: Ориентиры вокруг квартиры для плана ОН
      nullable: true
      properties:
        upper_side:
          type: string
          description: Ориентир сверху
          example: "Парк"
          nullable: true
          minLength: 1
        right_side:
          type: string
          description: Ориентир справа
          example: "Лес"
          nullable: true
          minLength: 1
        lower_side:
          type: string
          description: Ориентир снизу
          example: "Шоссе"
          nullable: true
          minLength: 1
        left_side:
          type: string
          description: Ориентир слева
          example: "Метро"
          nullable: true
          minLength: 1

    ProductWindowViewDto:
      type: object
      description: Вид из окна
      nullable: true
      required:
        - image
        - x
        - y
        - angle
        - size
        - front_segment
        - left_segment
        - right_segment
        - back_segment
      properties:
        image:
          type: string
          description: Изображение для вида из окна
          example: "/upload/iblock/a20/4kqhk9l1d12fh4bfss4tjb5ldv24ox64.gif"
        x:
          $ref: "#/components/schemas/AttrPointCoordinate"
        y:
          $ref: "#/components/schemas/AttrPointCoordinate"
        angle:
          $ref: "#/components/schemas/AttrCompassAngle"
        size:
          type: string
          description: Размер поинта
          enum: [small, medium. large]
        front_segment:
          type: boolean
          description: Флаг активности верхнего сегмента SVG
        left_segment:
          type: boolean
          description: Флаг активности левого сегмента SVG
        right_segment:
          type: boolean
          description: Флаг активности правого сегмента SVG
        back_segment:
          type: boolean
          description: Флаг активности нижнего сегмента SVG

    ProductCategoryDto:
      type: object
      description: Категория ОН (тип ОН)
      required: [id, code, name]
      properties:
        id:
          type: integer
          description: Идентификатор
          example: 5
        code:
          $ref: "#/components/schemas/AttrCategoryCode"
        name:
          $ref: "#/components/schemas/AttrCategoryName"

    ProductDecorationDto:
      type: object
      description: Отделка ОН
      required: [code, name]
      properties:
        code:
          description: Код отделки
          type: string
          example: "ready"
          minLength: 1
        name:
          description: Наименование отделки
          type: string
          example: "MR Ready"
          minLength: 1

    ProductPurchaseTypeDto:
      type: object
      description: Способы покупки, доступные для продукта
      required:
        - code
        - name
        - discount
      properties:
        code:
          type: string
          description: Код
          example: "mortgage"
          minLength: 1
        name:
          type: string
          description: Название
          example: "Ипотека"
          minLength: 1
        discount:
          $ref: "#/components/schemas/DiscountDto"

    ProductBookingRequestDto:
      type: object
      description: |
        Запрос бесплатного бронирования.
      required:
        - purchase_type
      properties:
        purchase_type:
          $ref: "#/components/schemas/PurchaseTypeCode"
        phone:
          allOf:
            - $ref: "#/components/schemas/PhoneNumber"
            - description: |
                Номер телефона (для неаутентифицированного пользователя).
        name:
          description: /
            Имя (для неаутентифицированного пользователя).
          type: string
          example: "Иван"
        sms_code:
          description: |
            Код, введенный в форму ввода кода неаутентифицированным пользователем.
          type: integer
          example: 1234

    ProductBookingResponseDto:
      description: |
        Результат запроса бесплатного бронирования.
        Возможные коды результата работы метода:

        - `success` — успешно забронировано;
        - `request_received` — запрос принят в обработку.
      type: object
      required:
        - code
        - detail
      properties:
        id:
          description: |
            Идентификатор бронирования (передается, если бронирование было создано)
          type: integer
          example: 1234
        code:
          description: |
            Код результата работы метода.
          type: string
          enum:
            - "success"
            - "request_received"
        detail:
          description: |
            Текстовый комментарий к результату.
          type: string
          example: "Успешно забронировано."

    PurchaseTypeCode:
      description: |
        Код способа покупки.

        - `cash` — 100 % оплата
        - `mortgage` — Ипотека
        - `installments` — Рассрочка
      type: string
      enum:
        - "cash"
        - "mortgage"
        - "installments"

    SaleSearchResultListDto:
      type: object
      description: Список результатов поиска
      required: [items]
      properties:
        items:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/ProjectBrief"
        count:
          $ref: "#/components/schemas/AttrCount"

    DecorationListDto:
      type: object
      description: Список отделок
      required: [items, count]
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/DecorationTypeDto"
        count:
          $ref: "#/components/schemas/AttrCount"

    DecorationTypeDto:
      type: object
      description: Тип отделки
      required: [id, name, options]
      properties:
        id:
          type: integer
          description: Идентификатор отделки
        name:
          type: string
          description: Название типа отделки
          example: "MR Ready"
          minLength: 1
        description:
          type: string
          nullable: true
          description: Опциональное общее описание типа отделки
        options:
          type: array
          items:
            $ref: "#/components/schemas/DecorationOptionDto"

    DecorationOptionDto:
      type: object
      description: Вариант отделки
      required: [id, name, description, image, booklet, 3d, image_pins]
      properties:
        id:
          type: integer
          description: Идентификатор отделки
        name:
          type: string
          description: Название варианта отделки
          example: "Harmony Soft"
          minLength: 1
        description:
          type: string
          nullable: true
          description: Опциональное описание варианта отделки
        image:
          $ref: "#/components/schemas/AttrImageLink"
        booklet:
          type: string
          nullable: true
          description: Ссылка на буклет по отделке
          example: "/decoration/mr_ready_symphony.pdf"
        3d:
          type: string
          nullable: true
          description: Ссылка на 3D-тур по отделке
          example: "https://example.com/3d_plan"
        image_pins:
          type: array
          items:
            $ref: "#/components/schemas/DecorationOptionImagePinDto"

    DecorationOptionImagePinDto:
      type: object
      description: Вариант отделки
      required: [x, y, label]
      properties:
        x:
          $ref: "#/components/schemas/AttrPointCoordinate"
        y:
          $ref: "#/components/schemas/AttrPointCoordinate"
        label:
          type: string
          description: Текстовое описание для пина
          example: "Качественная входная дверь"
          minLength: 1

    SaleSearchResultDto:
      type: object
      description: Баннер
      required:
        [id, type, preview_picture, preview_title, active_color, active_title]
      properties:
        id:
          type: integer
          description: Идентификатор баннера
          example: 55
        title:
          type: string
          description: Заголовок баннера
          example: "Метрополия"

    BannerListResponseDto:
      type: object
      description: Список баннеров для главной страницы сайта
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/BannerDto"

    BannerDto:
      type: object
      description: Контент баннера
      required:
        - id
        - type
        - preview_picture
        - preview_title
        - active_color
        - active_title
        - ad_label
      properties:
        id:
          type: integer
          description: Идентификатор баннера
          example: 55
        title:
          type: string
          description: Заголовок баннера
          example: "Метрополия"
        type:
          type: string
          description: Тип баннера (проект, скидка)
          enum: [project, discount]
        discount_amount:
          type: integer
          description: Сумма скидки (для типа баннера = "Скидка")
          example: 5
        preview_title:
          type: string
          description: Заголовок баннера для режима превью
          example: "Метрополия"
        preview_picture:
          type: string
          description: Изображение для баннера для режима превью
          example: "/upload/iblock/686/fk8o5qawseokv1frdcpbma45f0jkpcvp.png"
        desktop_normal_picture:
          type: integer
          description: Изображение баннера для desktop viewport
          example: "/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png"
        project:
          $ref: "#/components/schemas/BannerProjectDto"
        active_color:
          type: string
          description: Цвет фона баннера для активного режима
          example: "#6B6A72"
        active_title:
          type: string
          description: Заголовок баннера для активного режима
          example: "Метрополия"
        active_btn_text:
          type: string
          description: Текст кнопки баннера для активного режима
          example: "Подробнее о проекте"
        active_btn_link:
          type: string
          description: Ссылка кнопки баннера для активного режима
          example: "site.com"
        mobile_picture:
          type: string
          description: Изображение для мобильного viewport
          example: "/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png"
        tablet_picture:
          type: string
          description: Изображение для планшетного viewport
          example: "/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png"
        desktop_big_picture:
          type: string
          description: Изображение для viewport под большой desktop
          example: "/upload/iblock/26c/ft7v8k532rpyt3wkgdhuha8wkgtydoi5.png"
        ad_label:
          $ref: "#/components/schemas/AttrAdvertisementLabel"

    BannerProjectDto:
      description: Проекты для баннера
      required: [id]
      properties:
        price_from:
          type: number
          description: Стоимость от
          example: 23
        metro:
          $ref: "#/components/schemas/MetroDto"
        metro_distance:
          $ref: "#/components/schemas/AttrMetroDistance"
        movement_way:
          $ref: "#/components/schemas/MetroMovementWayDto"

    PrivateBannerListResponseDto:
      type: object
      description: Список баннеров для страницы MR Private сайта
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/PrivateBannerDto"
        count:
          $ref: "#/components/schemas/AttrCount"

    PrivateBannerDto:
      type: object
      description: Баннер MR Private
      required:
        - id
        - name
        - type
        - image
        - video
      properties:
        id:
          type: integer
          description: Идентификатор баннера
          example: 55
        name:
          type: string
          description: Название баннера (будет использоваться в качестве alt-текста)
          minLength: 1
        type:
          type: string
          description: Тип баннера MR Private
          enum: [image, video]
        image:
          type: object
          description: Объект для видео
          nullable: true
          required:
            - image_desktop_big
            - image_desktop
            - image_tablet
            - image_mobile
          properties:
            image_desktop_big:
              type: string
              description: Ссылка на изображение (desktop большой)
              example: "/upload/iblock/26c/ft7gtydoi5.png"
              minLength: 1
              nullable: true
            image_desktop:
              type: string
              description: Ссылка на изображение (desktop)
              example: "/upload/iblock/26c/ft7gtydoi5.png"
              minLength: 1
            image_tablet:
              type: string
              description: Ссылка на изображение (планшет)
              example: "/upload/iblock/26c/ft7gtydoi5.png"
              minLength: 1
              nullable: true
            image_mobile:
              type: string
              description: Ссылка на изображение (mobile)
              example: "/upload/iblock/26c/ft7gtydoi5.png"
              minLength: 1
        video:
          type: object
          description: Объект для видео
          nullable: true
          required:
            - video_desktop
            - image_preview_desktop
            - video_mobile
            - image_preview_mobile
          properties:
            video_desktop:
              type: string
              description: Ссылка на видео (desktop)
              example: "/upload/iblock/26c/video1_desk.mp4"
              minLength: 1
            image_preview_desktop:
              type: string
              description: Ссылка на изображение (desktop)
              example: "/upload/iblock/26c/desk1.png"
              minLength: 1
            video_mobile:
              type: string
              description: ИСсылка на видео (mobile)
              example: "/upload/iblock/26c/video1_mob.mp4"
              minLength: 1
            image_preview_mobile:
              type: string
              description: Ссылка на изображение (mobile)
              example: "/upload/iblock/26c/mob1.png"
              minLength: 1

    SiteMenuPagesListDto:
      type: object
      description: Объект со ссылками
      required: [id]
      properties:
        id:
          type: integer
          description: Идентификатор ссылки
          example: 55
        href:
          type: string
          description: Значение ссылки
          example: "site.com"
        name:
          type: string
          description: Текст для ссылки для отображения в интерфейсе
          example: "Купить онлайн"
        depthLevel:
          type: integer
          description: Уровень ссылки
          example: 1
        sort:
          type: integer
          description: Сортировки
          example: 100
        columnNumber:
          type: integer
          description: Номер колонки (актуально для slug = sitemap, значения от 1 до 4)
          example: 1
        slug:
          type: string
          description: Тип меню
          example: "desktop_menu"
        children:
          type: array
          description: Массив дочерних объектов (с аналогичной атрибутикой)
          items:
            $ref: "#/components/schemas/SiteMenuPagesListDto"

    SiteConfigDto:
      type: object
      description: Объект с параметрами конфигурации
      properties:
        phone_support:
          type: string
          description: Телефон центра клиентской поддержки
          example: "+7 (495) 021-19-15"
        email_support:
          type: string
          description: Email центра клиентской поддержки
          example: "otvet@mr-group.ru"
        address:
          type: string
          description: Адрес офиса MR
          example: "123112, Москва, 1-й Красногвардейский проезд, д. 22, стр. 1 (Бизнес-центр Neva Towers, башня Т1)"
        reg_text:
          type: string
          description: Нормативный текст
          example: "Любая информация, представленная на данном сайте, носит исключительно информационный характер и ни при каких условиях не является публичной офертой, определяемой положениями статьи 437 ГК РФ."
        footer_copyright:
          type: string
          description: Копирайт
          example: "© MR Group 2023"

    SiteCompanyDetailsDto:
      type: object
      description: Объект с информацией для блока "О компании" главной страницы сайта
      properties:
        block_main:
          $ref: "#/components/schemas/SiteCompanyDetailsMainBlockDto"
        block1:
          $ref: "#/components/schemas/SiteCompanyDetailsTextBlockDto"
        block2:
          $ref: "#/components/schemas/SiteCompanyDetailsTextBlockDto"
        block3:
          $ref: "#/components/schemas/SiteCompanyDetailsTextBlockDto"
        files:
          type: array
          items:
            $ref: "#/components/schemas/FileDto"

    SiteCompanyDetailsMainBlockDto:
      type: object
      description: Основная информация о компании для главной страницы
      properties:
        title:
          type: string
          description: Заголовок
          example: "MR Group — ваш надежный партнер в мире недвижимости"
        text:
          type: string
          description: Текст (с поддержкой HTML-форматирования)
          example: "<p>\r\n              Мы работаем в Москве и Московской области — на хорошо известных нам территориях, в экономически, социально и экологически\r\n              благополучных местах. Уважение к людям лежит в основе всех решений команды MR Group.\r\n            </p>"
        button_link:
          type: string
          description: Ссылка для кнопки
          example: "#more"
        button_text:
          type: string
          description: Текст для кнопки
          example: "О компании"

    SiteCompanyDetailsTextBlockDto:
      type: object
      description: Специальный текст для отображения блока о компании
      properties:
        accent_text:
          type: string
          description: Акцентный текст
          example: "44"
        additional_text:
          type: string
          description: Дополнительный текст
          example: "Объекта в портфолио компании"

    SiteTemplateDetailsDto:
      type: object
      description: Информация для header и footer сайта
      properties:
        app_links:
          type: array
          items:
            $ref: "#/components/schemas/LinkWithIconDto"
        socnet_links:
          type: array
          items:
            $ref: "#/components/schemas/LinkWithIconDto"
        reg_links:
          type: array
          items:
            $ref: "#/components/schemas/LinkWithIconDto"
        footer_links:
          type: array
          items:
            $ref: "#/components/schemas/LinkWithIconDto"
        advert:
          $ref: "#/components/schemas/SiteTemplateMenuAdvertDto"

    SiteTemplateMenuAdvertDto:
      type: object
      description: Информация для рекламного баннера в меню сайта
      properties:
        title:
          type: string
          description: Текстовое описание ссылки для интерфейса
          example: "Рассрочка 0%"
        link:
          type: string
          description: Ссылка для перехода по клику на баннер
          example: "https://www.site.com/url"
        description:
          type: string
          description: Описание предложения
          example: "Покупайте квартиры без переплат<br/> в ряде наших ЖК"
        accent_text:
          type: string
          description: Акцентный текст
          example: "0%"

    LinkWithIconDto:
      type: object
      description: Ссылка с опциональной иконкой
      required:
        - name
        - link
        - icon
        - button
      properties:
        name:
          type: string
          description: Текстовое описание ссылки для интерфейса
          example: "Личный кабинет"
          minLength: 1
          nullable: true
        link:
          type: string
          description: Сама ссылка
          example: "site.com/"
          minLength: 1
        icon:
          $ref: "#/components/schemas/ImageDto"
        button:
          type: string
          description: Ссылка на изображение-кнопку
          minLength: 1
          nullable: true

    ContentPurchaseDto:
      required: [steps]
      description: Информация для отображения контентной страницы по способу покупки
      type: object
      properties:
        steps:
          type: array
          items:
            $ref: "#/components/schemas/ContentPurchaseStepsDto"
        faq_linked_category:
          type: array
          description: Связанные категории FAQ
          items:
            type: string

    ContentPurchaseStepsDto:
      required: [image, title, description]
      description: Список шагов для описания проц/есса покупки
      type: object
      properties:
        image:
          $ref: "#/components/schemas/ImageDto"
        step:
          type: string
          description: Номер шага процесса покупки
        title:
          type: string
          description: Заголовок шага процесса покупки
        description:
          type: string
          description: Описание шага процесса покупки (с поддержкой HTML-форматирования)
        button:
          $ref: "#/components/schemas/ButtonDto"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/ContentPurchaseStepTagsDto"

    ContentPurchaseStepTagsDto:
      required: [title, action_type, description]
      description: Список тегов для шага из описания процесса покупки
      type: object
      properties:
        title:
          type: string
          description: Название тега
        action_type:
          type: string
          description: Тип действия по тегу
          example: "tooltip"
        description:
          type: string
          description: Описание по тегу (с поддержкой HTML-форматирования)

    ContentAgreementDto:
      required: [name]
      description: Информация для отображения страницы политики обработки ПД
      type: object
      properties:
        name:
          type: string
          description: Название документа
        title:
          type: string
          description: Полное название документа для заголовков
        note:
          type: string
          description: Краткое описание - текст с поддержкой HTML-форматирования
        description:
          type: string
          description: Текст документа - текст с поддержкой HTML-форматирования

    ContentTradeinDto:
      required: [offers]
      description: Информация для отображения контентной страницы по trade in
      type: object
      properties:
        faq_linked_category:
          type: array
          description: Связанные категории FAQ
          items:
            type: string

    ContentSitemapDto:
      required: [sections]
      description: Информация для отображения карты сайта
      type: object
      properties:
        sections:
          type: array
          items:
            $ref: "#/components/schemas/ContentSitemapSectionDto"

    ContentSitemapSectionDto:
      description: Раздел карты сайта
      required: [name, links]
      type: object
      properties:
        name:
          type: string
          description: Название раздела карты сайта
          example: "Информация о компании"
        links:
          type: array
          items:
            $ref: "#/components/schemas/ContentSitemapSectionLinkDto"

    ContentSitemapSectionLinkDto:
      description: Ссылки для карты сайта
      required: [text, link]
      type: object
      properties:
        text:
          type: string
          description: Описание ссылки
          example: "О компании"
        link:
          type: string
          description: Ссылка
          example: "https://www.mr-group.ru/company/about/"

    ContentStepsListDto:
      description: Контакты компании
      required: [steps]
      type: object
      properties:
        steps:
          type: array
          items:
            $ref: "#/components/schemas/ContentStepDto"

    ContentStepDto:
      description: Контакты офисов по проектам
      required: [name]
      type: object
      properties:
        number:
          type: string
          description: Номер шага
          example: "1"
        title:
          type: string
          description: Название шага
          example: "Оценка вашей квартиры"
        description:
          type: string
          description: Описание шага
          example: "Оценка диапазона стоимости вашей квартиры зачёту за 1 минуту"

    ContentBannersListDto:
      description: массив баннеров для переданного кода раздела
      required: [main_title, items]
      type: object
      properties:
        main_title:
          type: string
          description: Название всего блока
          example: "Социальная ответственность"
        items:
          type: array
          items:
            $ref: "#/components/schemas/ContentBannerDto"

    ContentBannerDto:
      description: Контент для одного баннера в блоке
      type: object
      properties:
        title:
          $ref: "#/components/schemas/ContentTitleDto"
        description:
          type: string
          description: Название всего блока
          example: "Социальная ответственность"
          nullable: true
        font_color:
          type: string
          description: Цвет шрифта на всем баннере
          example: "#FFFFFF"
          nullable: true
        background_color:
          type: string
          description: Цвет фона
          example: "#000000"
          nullable: true
        image:
          type: string
          description: Фоновое изображение
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"
          nullable: true
        icon:
          type: string
          description: Пиктограмма для баннера
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"
          nullable: true

    ContentTitleDto:
      description: Данные для заголовка
      type: object
      properties:
        text:
          type: string
          description: Текст заголовка
          example: "Инфраструктура для маленьких детей"
          nullable: true
        font_size:
          type: integer
          description: Название всего блока
          example: 32
          nullable: true

    ContentFactsListDto:
      description: массив Ключевых фактов для страницы
      required: [facts]
      type: object
      properties:
        facts:
          type: array
          items:
            $ref: "#/components/schemas/ContentFactDto"

    ContentFactDto:
      description: объект сущности Ключевые факты
      required: [title]
      type: object
      properties:
        title:
          type: string
          description: Заголовок
          example: "16 000"
          minLength: 1
        description:
          type: string
          description: Описание
          example: "Семей выбрали дома MR Group"

    ContentHistoryListDto:
      description: Массив элементов для блока История
      required: [items]
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ContentHistoryDto"

    ContentHistoryDto:
      description: Объект сущности История
      required: [year]
      type: object
      properties:
        year:
          type: integer
          description: Год
          example: 2021
        title:
          type: string
          description: Заголовок
          example: "MR Group получила независимую оценку управления рейтингованияна базе Мосгосэкспертизы."
          minLength: 1
        description:
          type: string
          description: Описание событий за год
          example: "MR Group получила независимую оценку управления рейтингования на базе Мосгосэкспертизы."
          minLength: 1
        image:
          type: string
          description: Изображение для элемента
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"
          minLength: 1

    ContentAwardsListDto:
      description: Массив годов
      required: [items]
      type: object
      properties:
        awards_qty:
          type: integer
          description: количество наград
          example: 21
        items:
          type: array
          items:
            $ref: "#/components/schemas/ContentAwardsHistoryListDto"

    ContentAwardsHistoryListDto:
      description: Год получения наград
      required: [year, awards]
      type: object
      properties:
        year:
          type: integer
          description: Год получения наград
          example: "2021"
        awards:
          type: array
          items:
            $ref: "#/components/schemas/ContentAwardDto"

    ContentAwardDto:
      description: Объект сущности Награды, относящийся к году
      required: [title]
      type: object
      properties:
        title:
          type: string
          description: Заголовок
          example: "ЖК MOD - «Лучший строящийся жилой комплекс премиум-класса»"
        description:
          type: string
          description: Описание - название награды
          example: "Urban Awards 2021 «Девелопер года»"

    ContentPartnersSectionsListDto:
      description: Массив разделов партнеров
      required: [items]
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ContentPartnersListDto"

    ContentPartnersListDto:
      description: Данные раздела
      required: [name, partners]
      type: object
      properties:
        name:
          type: string
          description: Название раздела
          example: "Архитектура"
        partners:
          type: array
          description: Массив партнеров
          items:
            $ref: "#/components/schemas/ContentPartnerDto"

    ContentPartnerDto:
      description: Объект сущности Партнер, относящийся к разделу
      type: object
      properties:
        image:
          type: string
          description: Изображение для элемента
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"
        web_link:
          type: string
          nullable: true
          description: Ссылка на сайт партнера
          example: "https://digitaldeveloper.ru"

    ContentTeamMembersListDto:
      description: Массив участников команды
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ContentTeamMemberDto"

    ContentTeamMemberDto:
      description: объект сущности Участник команды
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: Имя
          example: "Иван"
        surname:
          type: string
          nullable: true
          description: Фамилия
          example: "Иванов"
        job_title:
          type: string
          nullable: true
          description: Должность
          example: "Руководитель направления"
        image:
          type: string
          nullable: true
          description: Фото участника
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"

    ContentMediaArticlesListDto:
      description: Массив статей с упоминанием в СМИ
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ContentMediaArticleDto"
        count:
          $ref: "#/components/schemas/AttrCount"
        page:
          $ref: "#/components/schemas/AttrPaginationPage"
        page_count:
          $ref: "#/components/schemas/AttrPaginationPageCount"

    ContentMediaArticleDto:
      description: Данные объекта сущности Статья СМИ
      type: object
      properties:
        title:
          type: string
          nullable: true
          description: Заголовок
          example: "Как машинное обучение помогает индексировать цены на недвижимость"
        descriptions:
          type: string
          nullable: true
          description: Описание
          example: "На формирование стоимости квартиры влияет множество факторов: от расположения и инфраструктуры района до макроэкономических показателей. Девелопер MR Group внедрил аналитическую систему динамического ценообразования от интегратора «Иннодата», чтобы в моменте индексации учитывать максимальное количество параметров. Рассказываем, как это работает."
        date:
          $ref: "#/components/schemas/AttrDatetime"
        logo:
          type: string
          nullable: true
          description: Логотип
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"
        web_link:
          type: string
          nullable: true
          description: Ссылка
          example: "https://digitaldeveloper.ru"

    ContentOfficesCompanyListDto:
      description: Контакты компании
      required:
        - offices
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ContentOfficesCompanyDto"

    ContentOfficesCompanyDto:
      description: Информация об офисах компании MR
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Наименование типа офиса
          example: "Центральный офис продаж"
          minLength: 1
        address:
          type: string
          description: Адрес офиса
          example: "Москва, Волгоградский проспект, д. 32/3, корпус 4"
          minLength: 1
          nullable: true
        latitude:
          $ref: "#/components/schemas/AttrMapCoordinate"
        longitude:
          $ref: "#/components/schemas/AttrMapCoordinate"
        schedule:
          type: string
          description: Время работы офиса
          example: "Пн. — Вс. с 09:00 до 21:00"
          minLength: 1
          nullable: true
        phone:
          type: string
          description: Телефон офиса
          example: "+7 (495) 514-15-14"
          minLength: 1
          nullable: true
        email:
          type: string
          description: Email офиса
          example: "mr@mr-group.ru"
          minLength: 1
          nullable: true

    ContentOfficesProjectsListDto:
      description: Контакты офисов по проектам
      required:
        - projects
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: "#/components/schemas/ContentOfficesProjectDto"

    ContentOfficesProjectDto:
      description: Информация о проекте для офисов
      required:
        - id
        - code
        - image
        - offices
      type: object
      properties:
        id:
          type: integer
          description: ID Проекта
          example: 9252
        code:
          $ref: "#/components/schemas/AttrProjectCode"
        name:
          $ref: "#/components/schemas/AttrProjectName"
        image:
          $ref: "#/components/schemas/AttrProjectImage"
        latitude:
          $ref: "#/components/schemas/AttrMapCoordinate"
        longitude:
          $ref: "#/components/schemas/AttrMapCoordinate"
        address:
          type: string
          description: Адрес проекта
          example: "1-й Сетуньский проезд, вл. 6-10"
          minLength: 1
          nullable: true
        offices:
          type: array
          items:
            $ref: "#/components/schemas/ContentOfficesProjectContactDto"

    ContentOfficesProjectContactDto:
      description: Контакт офиса по проекту
      nullable: true
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Наименование типа офиса
          example: "Отдел продаж"
          minLength: 1
        address:
          type: string
          description: Адрес офиса
          example: "Москва, Волгоградский проспект, д. 32/3, корпус 4"
          minLength: 1
          nullable: true
        schedule:
          type: string
          description: Время работы офиса
          example: "Пн. — Вс. с 09:00 до 21:00"
          minLength: 1
          nullable: true
        phone:
          type: string
          description: Телефон офиса
          example: "+7 (495) 514-15-14"
          minLength: 1
          nullable: true
        email:
          type: string
          description: Email офиса
          example: "mr@mr-group.ru"
          minLength: 1
          nullable: true
        latitude:
          $ref: "#/components/schemas/AttrMapCoordinate"
        longitude:
          $ref: "#/components/schemas/AttrMapCoordinate"

    FaqCategoryListDto:
      required:
        - categories
      description: Список базовой информации для FAQ
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: "#/components/schemas/FaqCategoryDto"

    FaqCategoryDto:
      description: Категория FAQ
      required:
        - name
        - code
      type: object
      properties:
        name:
          type: string
          description: Название категории для отображения в UI
        code:
          type: string
          description: Системное имя категории
        image:
          type: string
          description: Изображение для категории
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"
        subcategories:
          type: array
          items:
            $ref: "#/components/schemas/FaqSubcategoryDto"

    FaqSubcategoryDto:
      description: Подкатегории FAQ
      required:
        - name
        - code
      type: object
      properties:
        name:
          type: string
          description: Название подкатегории для отображения в UI
        code:
          type: string
          description: Системное имя подкатегории
        image:
          type: string
          description: Пиктограмма категории
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"

    FaqQuestionsListDto:
      description: Список вопросов по FAQ
      properties:
        name:
          type: string
          description: Наименование раздела
        questions:
          type: array
          items:
            $ref: "#/components/schemas/FaqQuestionDto"
        count:
          $ref: "#/components/schemas/AttrCount"

    FaqQuestionDto:
      description: Вопрос по FAQ
      required:
        - id
        - question
        - answer
      type: object
      properties:
        id:
          type: number
          description: Идентификатор вопроса
        question:
          type: string
          description: Текст вопроса в формате HTML (сложного форматирования тут не предполагается, тем не менее тут HTML)
          minLength: 1
        answer:
          type: string
          description: Текст ответа (с поддержкой HTML-форматирования)
          minLength: 1

    FaqSearchResultListDto:
      description: Результат поисковых запросов по FAQ
      required: [items, count]
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/FaqSearchResultDto"
        count:
          $ref: "#/components/schemas/AttrCount"

    FaqSearchResultDto:
      description: Результат поискового запроса по FAQ
      required:
        - question
        - category_code
      type: object
      properties:
        question_id:
          type: string
          description: Идентификатор найденного вопроса
        question:
          type: string
          description: Текст найденного вопроса в HTML (сложного форматирования тут не предполагается, тем не менее тут HTML)
          minLength: 1
        answer:
          type: string
          description: Текст ответа (с поддержкой HTML-форматирования)
        category_code:
          type: string
          description: Системное имя категории вопроса, сооответствующего подсказке
          minLength: 1
        category_name:
          type: string
          description: Наименование категории вопроса, сооответствующего подсказке
        subcategory_code:
          type: string
          description: Системное имя категории вопроса, сооответствующего подсказке
        subcategory_name:
          type: string
          description: Наименование категории вопроса, сооответствующего подсказке

    ContactsSupportListDto:
      required:
        - items
      description: Список контактов
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ContactDto"

    ContactDto:
      required:
        - type
        - name
        - value
      type: object
      properties:
        type:
          type: string
          description: Код типа контакта
          enum: [msg_t, msg_wa, msg_viber]
        name:
          type: string
          description: Имя типа контакта
          example: "WhatsApp"
          minLength: 1
        value:
          type: string
          description: Значение контакта
          example: "https://t.me/MRGroupChatBot"
          minLength: 1
        icon:
          type: string
          description: Ссылка на пиктограмму
          minLength: 1

    ServicesListDto:
      required:
        - count
        - items
      description: Список контактов
      type: object
      properties:
        count:
          $ref: "#/components/schemas/AttrCount"
        items:
          type: array
          items:
            $ref: "#/components/schemas/ServiceDto"

    ServiceDto:
      required:
        - id
        - header
        - description
        - white_text
        - gradient
        - url
        - screen_mp
        - background_image
        - background_color
        - icon
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор карточки-сервиса
          example: 9318
        header:
          type: string
          description: Заголовок карточки-сервиса
          example: "Умный дом"
          minLength: 1
        description:
          type: string
          description: Описание карточки-сервиса
          example: "Система управления всей электроникой в доме"
          minLength: 1
          nullable: true
        white_text:
          type: boolean
          description: Флаг отображения светлого текста на стороне frontend
        gradient:
          type: boolean
          description: Флаг использования градиентной подложки для шрифта
        url:
          type: string
          format: url
          description: URL для перехода по клику на карточку-сервис
          minLength: 1
          nullable: true
        screen_mp:
          type: string
          description: Имя экрана в МП для перехода по тапу на карточку-сервис
          minLength: 1
          nullable: true
        background_image:
          type: string
          description: Адрес для фонового изображения
          minLength: 1
          nullable: true
        background_color:
          type: string
          description: Цвет фоновой заливки
          minLength: 1
          nullable: true
        icon:
          type: string
          description: Адрес для пиктограммы для отображения на карточке-сервисе
          minLength: 1
          nullable: true

    NewsListDto:
      description: Список новостей
      required:
        - items
        - count
        - page
        - page_count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/NewsDto"
        count:
          $ref: "#/components/schemas/AttrCount"
        page:
          $ref: "#/components/schemas/AttrPaginationPage"
        page_count:
          $ref: "#/components/schemas/AttrPaginationPageCount"

    NewsDto:
      description: Краткая информация по новости
      required:
        - date
        - code
        - image
        - title
        - teaser
        - project
      type: object
      properties:
        date:
          $ref: "#/components/schemas/AttrDate"
        code:
          type: string
          description: Символьный код
          minLength: 1
        image:
          type: string
          description: Изображение для сниппета (ссылка)
        title:
          type: string
          description: Заголовок новости
          minLength: 1
        teaser:
          type: string
          description: Тизер новости
        project:
          type: array
          description: Связанные проекты
          items:
            type: object
            description: Объект связанного проекта
            required:
              - id
              - code
              - name
            properties:
              id:
                $ref: "#/components/schemas/AttrProjectId"
              code:
                $ref: "#/components/schemas/AttrProjectCode"
              name:
                $ref: "#/components/schemas/AttrProjectName"

    NewsContentDto:
      description: Детальный контент по новости
      required:
        - date
        - code
        - image
        - title
        - teaser
        - text
        - project
        - ad_label
      type: object
      properties:
        date:
          $ref: "#/components/schemas/AttrDate"
        code:
          type: string
          description: Символьный код
          minLength: 1
        image:
          type: string
          nullable: true
          description: Детальное изображение (ссылка)
        title:
          type: string
          description: Заголовок новости
          minLength: 1
        teaser:
          type: string
          description: Тизер новости
        text:
          type: string
          description: Текст новости (с поддержкой HTML-форматирования)
        project:
          type: array
          description: Связанные проекты
          items:
            type: object
            description: Объект связанного проекта
            required:
              - id
              - code
              - name
            properties:
              id:
                $ref: "#/components/schemas/AttrProjectId"
              code:
                $ref: "#/components/schemas/AttrProjectCode"
              name:
                $ref: "#/components/schemas/AttrProjectName"
        ad_label:
          $ref: "#/components/schemas/AttrAdvertisementLabel"

    MortgageCalcBanksListDto:
      description: Список банков для ипотечного калькулятора
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/MortgageCalcBankDto"
        count:
          $ref: "#/components/schemas/AttrCount"

    MortgageCalcBankDto:
      description: Банк для ипотечного калькулятора
      required:
        - logo
        - name
        - code
      type: object
      properties:
        logo:
          type: string
          format: url
          description: Ссылка на логотип банка
          example: "/upload/uf/89a/zvu3bs8hzu5t6idbgxtmdyoiw756wx2g.svg"
        name:
          type: string
          description: Название банка
        code:
          type: string
          description: Код банка

    MortgageCalcCategoryListDto:
      description: Список подтипов ОН для ипотечного калькулятора
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/MortgageCalcCategoryDto"
        count:
          $ref: "#/components/schemas/AttrCount"

    MortgageCalcCategoryDto:
      description: Подтип ОН для ипотечного калькулятора
      required:
        - code
        - name
        - min_price
        - max_price
      type: object
      properties:
        code:
          type: string
          description: Внутренний код подтипа ОН
          minLength: 1
        name:
          type: string
          description: Название подтипа ОН
          minLength: 1
        min_price:
          $ref: "#/components/schemas/AttrMinPrice"
        max_price:
          type: number
          description: Максимальная стоимость ОН в проекте для данного подтипа

    MortgageProgramListDto:
      description: Список ипотечных программ для ипотечного калькулятора
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/MortgageProgramDto"
        count:
          $ref: "#/components/schemas/AttrCount"

    MortgageProgramDto:
      description: Ипотечная программа для ипотечного калькулятора
      required:
        - code
        - short_name
        - full_name
        - rate
        - amount
        - initial_payment
        - term
        - note
        - description
        - background_color
        - image
      type: object
      properties:
        code:
          type: string
          description: Внутренний код ипотечной программы
          example: "it"
          minLength: 1
        short_name:
          type: string
          description: Название ипотечной программы
          example: "IT-ипотека"
          minLength: 1
        full_name:
          type: string
          description: Полное название ипотечной программы
          example: "Ипотека для IT-специалистов"
          minLength: 1
        rate:
          type: string
          description: Описание программы — ставка ипотечной программы
          example: "от 0.1 %"
          minLength: 1
        amount:
          type: string
          description: Описание программы — сумма кредита
          example: "до 30 млн ₽"
          minLength: 1
        initial_payment:
          type: string
          description: Описание программы — первоначальный взнос
          example: "15 %"
          minLength: 1
        term:
          type: string
          description: Описание программы — срок
          example: "До 30 лет"
          minLength: 1
        note:
          type: string
          description: Краткое описание программы (для баннера)
          example: "Ипотека для ИТ-специалистов аккредитованных компаний"
        description:
          type: string
          description: Полное описание программы, с поддержкой HTML-форматирования (для карточки)
        background_color:
          type: string
          description: Фоновый цвет (для баннера)
          example: "#356547"
        image:
          type: string
          description: Ссылка на изображение (для баннера)

    MortgageCalcResultListDto:
      description: Результат расчёта ипотечного калькулятора
      required:
        - psk_description
        - mortgage_types
      type: object
      properties:
        psk_description:
          type: string
          nullable: true
          description: |
            Текст описания для дисклеймера ПСК (полная стоимость кредита)

            Статичен, актуалььный текст см. в документации метода.
          example: "Информация по кредитам не является публичной офертой, размещена исключительно для ознакомления. Полные условия выдачи кредита можно получить в кредитных организациях."
        mortgage_types:
          type: array
          items:
            $ref: "#/components/schemas/MortgageCalcResultTypeListDto"

    MortgageCalcResultTypeListDto:
      description: Результат расчёта ипотечного калькулятора в разрезе типов программ
      required:
        - code
        - name
        - offers_qty
        - rates
      type: object
      properties:
        code:
          type: string
          description: Код типа ипотечной программы
          minLength: 1
        name:
          type: string
          description: Наименование типа ипотечной программы
          minLength: 1
        offers_qty:
          type: integer
          description: Общее количество предложений для данного типа ипотечной программы
        rates:
          type: array
          items:
            $ref: "#/components/schemas/MortgageCalcResultRatesListDto"

    MortgageCalcResultRatesListDto:
      description: Ставки для данного подтипа ОН и данной ипотечной программы
      required:
        - code
        - name
        - offers_qty
        - payment
        - period_max
        - period_min
        - amount
        - initial_payment_percent
        - initial_payment
        - offers
      type: object
      properties:
        code:
          type: string
          description: Код группировки по ставке
        name:
          type: string
          description: Наименование диапазона ставки
        offers_qty:
          type: integer
          description: Общее количество предложений для данного диапазона ставки
        payment:
          type: integer
          description: Мин. ежемесячный платеж в группировке
        period_max:
          type: integer
          description: Мин. срок ипотеки в годах в группировке
        period_min:
          type: integer
          description: Макс. срок ипотеки в годах в группировке
        amount:
          type: integer
          description: Мин. сумма кредита в группировке
        initial_payment_percent:
          type: number
          description: Минимальный первоначальный взнос %
        initial_payment:
          type: number
          description: Минимальный первоначальный взнос в руб
        offers:
          type: array
          items:
            $ref: "#/components/schemas/MortgageCalcResultOfferListDto"

    MortgageCalcResultOfferListDto:
      description: Банковское предложение ипотечного калькулятора
      required:
        - payment
        - rate
        - subsidized_flag
        - bank
        - subsidized_payment
        - subsidized_rate
        - subsidized_months
        - economy
        - description
        - period_max
        - period_min
        - psk_min
        - psk_max
      type: object
      properties:
        rate:
          $ref: "#/components/schemas/AttrMortgageRate"
        payment:
          $ref: "#/components/schemas/AttrMortgageMonthlyPayment"
        subsidized_flag:
          type: boolean
          description: Флаг наличия субсидии от застройщика
        subsidized_payment:
          type: number
          description: Ежемесячный платёж по субсидии
          nullable: true
        subsidized_rate:
          type: number
          description: Ставка по субсидии
          nullable: true
        subsidized_months:
          type: integer
          description: Длительность субсидированного периода
          nullable: true
        economy:
          type: number
          description: Экономия по субсидированной ставке
          nullable: true
        description:
          type: number
          description: Описание экономии по субсидированной ставке
          nullable: true
        bank:
          $ref: "#/components/schemas/MortgageCalcBankDto"
        period_max:
          type: integer
          description: Максимальный период ипотечного предложения в годах
          nullable: true
        period_min:
          type: integer
          description: Минимальный период ипотечного предложения в годах
          nullable: true
        psk_min:
          type: number
          description: Нижняя граница Полной стоимости кредита, %
          nullable: true
        psk_max:
          type: number
          description: Верхняя граница Полной стоимости кредита, %
          nullable: true

    MortgageCalcProjectListDto:
      description: Список проектов для калькулятора
      required: [projects]
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: "#/components/schemas/MortgageCalcProjectDto"

    MortgageCalcProjectDto:
      description: Проект для ипотечного калькулятора
      required:
        - id
        - code
        - name
        - min_price
        - image
        - metro
        - metro_distance
      type: object
      properties:
        id:
          type: integer
          description: ID проекта
        code:
          $ref: "#/components/schemas/AttrProjectCode"
        name:
          $ref: "#/components/schemas/AttrProjectName"
        min_price:
          $ref: "#/components/schemas/AttrMinPrice"
        image:
          $ref: "#/components/schemas/AttrProjectImage"
        metro:
          $ref: "#/components/schemas/MetroDto"
        metro_distance:
          $ref: "#/components/schemas/AttrMetroDistance"

    TradeinOffersListDto:
      required:
        - offers
      description: Информация для отображения контентной страницы по trade in
      type: object
      properties:
        offers:
          type: array
          items:
            $ref: "#/components/schemas/TradeinOfferDto"

    TradeinOfferDto:
      required:
        - title
        - note
        - description
        - font_color
        - background_color
        - image
      description: Список офферов по trade in
      type: object
      properties:
        title:
          type: string
          description: Название предложения
          minLength: 1
        description:
          type: string
          description: Описание предложения (с поддержкой HTML-форматирования)
        note:
          type: string
          description: Примечание (с поддержкой HTML-форматирования)
        background_color:
          type: string
          description: Цвет заднего фона в формате hex
        font_color:
          type: string
          description: Цвет шрифта в формате hex
        image:
          type: string
          nullable: true
          description: URL изображения

    TradeinFormRequestDto:
      description: Информация для отправки анкеты на оценку недвижимости для trade in
      type: object
      required:
        - phone
        - name
        - project_code
      properties:
        phone:
          type: string
          description: Номер телефона
          minLength: 1
        name:
          type: string
          description: Имя
          example: "Иван"
          minLength: 1
        project_code:
          type: string
          nullable: true
          description: Код интересующего проекта
        comment:
          type: string
          nullable: true
          description: Комментарий клиента по заявке на trade in
        realty:
          $ref: "#/components/schemas/TradeinRealtyDetailsDto"

    TradeinRealtyDetailsDto:
      description: Информация об объекте недвижимости клиента для trade in
      type: object
      nullable: true
      properties:
        address:
          type: string
          nullable: true
          description: Адрес
        floor:
          $ref: "#/components/schemas/AttrProductFloor"
        area:
          $ref: "#/components/schemas/AttrProductArea"
        rooms_number:
          $ref: "#/components/schemas/AttrProductRoomsNumber"
        price:
          $ref: "#/components/schemas/AttrProductTotalPrice"

    NewSubscriptionMarketingDto:
      description: |
        Объект для передачи данных о новой подписке на маркетинговую рассылку пользователя.
      required:
        - email
        - form
      type: object
      properties:
        email:
          $ref: "#/components/schemas/AttrEmail"
        form:
          $ref: "#/components/schemas/FormConfigId"

    NewSubscriptionProductStatusDto:
      description: Объект для передачи данных о новой подписке на статус ОН
      required:
        - email
      type: object
      properties:
        email:
          $ref: "#/components/schemas/AttrEmail"
        product_code:
          type: string
          description: Код ОН

    NewSubscriptionResultDto:
      description: Объект для результатов оформления новой подписки
      required:
        - success
        - message
      type: object
      properties:
        success:
          type: boolean
          description: Результат запроса на оформление подписки
        message:
          type: string
          description: Текстовый комментарий к результату запроса на оформление подписки
          example: "Подписка оформлена"

    HotlineFormRequestDto:
      description: Информация для отправки обращения на линию доверия
      type: object
      required:
        - phone
        - name
        - email
        - comment
      properties:
        phone:
          type: string
          description: Номер телефона
          minLength: 1
        name:
          type: string
          description: Имя
          example: "Иван"
          minLength: 1
        email:
          $ref: "#/components/schemas/AttrEmail"
        comment:
          type: string
          description: Комментарий обращения
          minLength: 1

    UserDetailsDto:
      description: Объект основных данных пользователя
      required:
        - id
        - client_id
        - phone
        - name
        - lastName
        - email
        - booking_count
        - favourite_count
        - purchase_count
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор пользователя
        client_id:
          type: string
          description: Идентификатор клиента (идентификатор клиента в CRM)
          minLength: 1
          nullable: true
        phone:
          type: string
          description: Номер телефона пользователя
        name:
          type: string
          description: Имя пользователя
        lastName:
          type: string
          description: Фамилия пользователя
        email:
          $ref: "#/components/schemas/AttrEmail"
        booking_count:
          $ref: "#/components/schemas/AttrCount"
        loyalty_card:
          $ref: "#/components/schemas/AttrMrclubCardNumber"
        favourite_count:
          $ref: "#/components/schemas/AttrCount"
        purchase_count:
          $ref: "#/components/schemas/AttrCount"
        mortgage_count:
          $ref: "#/components/schemas/AttrCount"

    UserBookingListDto:
      description: Список бесплатных бронирований пользователя
      required: [id, bookings_qty, bookings_history_qty]
      properties:
        id:
          type: integer
          description: Идентификатор пользователя
        bookings_qty:
          type: integer
          description: Количество бесплатных бронирований пользователя
        bookings_history_qty:
          type: integer
          description: Количество бесплатных бронирований пользователя в истории
        bookings:
          type: array
          items:
            $ref: "#/components/schemas/UserBookingDto"
        bookings_hist:
          type: array
          items:
            $ref: "#/components/schemas/UserBookingDto"

    UserBookingDto:
      description: Информация о бесплатном бронировании
      required: [id, product_code, finish_dt, product]
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор бронирования
        product_code:
          type: string
          description: Код забронированного ОН
        finish_dt:
          $ref: "#/components/schemas/AttrDatetime"
        purchase_type:
          $ref: "#/components/schemas/PurchaseTypeDto"
        product:
          $ref: "#/components/schemas/ProductDto"

    UserActiveBookingListDto:
      description: Список ОН активных бронирований пользователя
      required: [product_ids, count]
      properties:
        product_ids:
          type: array
          items:
            $ref: "#/components/schemas/AttrProductId"
        count:
          $ref: "#/components/schemas/AttrCount"

    UserDevicesListDto:
      description: Список устройств пользователя
      required:
        - items
        - count
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/UserDeviceDto"
        count:
          $ref: "#/components/schemas/AttrCount"

    UserDeviceDto:
      type: object
      description: Устройство пользователя
      required:
        - id
        - device
        - application
        - ip
        - country
        - city
        - last_activity
        - icon_app
        - icon_web
      properties:
        id:
          type: integer
          description: Идентификатор устройства
        device:
          type: string
          description: Название устройства
          example: "Google Pixel 4 XL"
          minLength: 1
          nullable: true
        application:
          type: string
          description: Приложение
          example: "Android 10"
          minLength: 1
          nullable: true
        ip:
          type: string
          description: IP адрес
          minLength: 1
          example: "109.252.108.91"
        country:
          type: string
          description: Страна
          example: "Россия"
          minLength: 1
          nullable: true
        city:
          type: string
          description: Город
          example: "Москва"
          minLength: 1
          nullable: true
        last_activity:
          type: string
          format: datetime
          description: Последняя активность
          example: "2023-04-17T15:57:40+03:00"
        icon_app:
          type: string
          description: Пиктограмма устройства для приложения
          example: "/upload/uf/80e/gacge20aisrrbbzizicoxk0tgecgfl9p.png"
          minLength: 1
        icon_web:
          type: string
          description: Пиктограмма устройства для сайта
          example: "/upload/uf/80e/gacge20aisrrbbzizicoxk0tgecgfl9p.png"
          minLength: 1

    UserFavouritesListDto:
      description: Список избранного пользователя
      required:
        - categories
        - count
      properties:
        categories:
          type: array
          items:
            $ref: "#/components/schemas/FavoriteCategoryDto"
        count:
          type: integer
          description: Общее количество избранного

    FavoriteCategoryDto:
      type: object
      required:
        - category
        - product_ids
      properties:
        category:
          $ref: "#/components/schemas/ProductCategoryDto"
        product_ids:
          type: array
          description: Идентификаторы избранных ОН
          items:
            type: integer

    UserConsultationRequestDto:
      type: object
      description: Запрос консультации
      required:
        - screen
        - form
      properties:
        phone:
          type: string
          description: Номер телефона (для неавторизованного пользователя)
        name:
          type: string
          description: Имя (для неавторизованного пользователя)
          example: "Иван"
        screen:
          type: string
          description: Неформализованное описание экрана/формы/элемента, с которого запрашивается консультация
        form:
          $ref: "#/components/schemas/FormConfigId"
        description:
          type: string
          description: Комментарий, который может заполняться при запросе консультации
        project_code:
          $ref: "#/components/schemas/AttrProjectCode"
        product_code:
          $ref: "#/components/schemas/AttrProductCode"

    UserCallbackRequestDto:
      type: object
      description: Запрос обратного звонка
      required:
        - screen
      properties:
        phone:
          type: string
          description: Номер телефона (для неавторизованного пользователя)
        screen_code:
          type: string
          description: Машиночитаемый код экрана/формы/элемента, с которого запрашивается обратный звонок
        project_code:
          $ref: "#/components/schemas/AttrProjectCode"
        product_code:
          $ref: "#/components/schemas/AttrProductCode"

    UserPasswordChangeRequestDto:
      type: object
      description: Запрос смены пароля
      required:
        - new_password
      properties:
        new_password:
          type: string
          description: Новый пароль
          minLength: 1

    PurchaseTypeDto:
      description: Способ покупки
      required: [code, title]
      type: object
      properties:
        code:
          $ref: "#/components/schemas/PurchaseTypeCode"
        title:
          type: string
          description: Название способа покупки
          enum: ["100% оплата", "Ипотека", "Рассрочка"]

    PurchasesListDto:
      type: object
      description: Список сделок
      required:
        [
          items,
          active_purchases_qty,
          canceled_purchases_qty,
          completed_purchases_qty,
        ]
      properties:
        active_purchases_qty:
          type: integer
          description: Количество активных сделок в массиве
        canceled_purchases_qty:
          type: integer
          description: Количество отмененных сделок в массиве
        completed_purchases_qty:
          type: integer
          description: Количество отмененных сделок в массиве
        items:
          type: array
          items:
            $ref: "#/components/schemas/PurchaseDto"

    PurchaseDto:
      type: object
      description: Данные сделки
      required:
        [
          id,
          phase,
          status,
          products,
          expiration_dt,
          free_booking_dt,
          cancel_dt,
          complete_dt,
        ]
      properties:
        id:
          type: number
          description: ID сделки
        lead_id:
          type: string
          description: Идентификатор клиентского интереса (идентификатор лида в CRM)
          minLength: 1
          nullable: true
        phase:
          $ref: "#/components/schemas/PhaseDto"
        status:
          $ref: "#/components/schemas/PurchaseStatusDto"
        products:
          type: array
          items:
            $ref: "#/components/schemas/PurchaseProductDto"
        expiration_dt:
          type: string
          format: date
          description: Срок бронирования
          nullable: true
          example: "2022-03-15"
        free_booking_dt:
          type: string
          format: datetime
          description: Срок бесплатного бронирования
          nullable: true
          example: "2023-04-17T15:57:40+03:00"
        cancel_dt:
          type: string
          format: date
          nullable: true
          description: Дата отмены
          example: "2022-03-15"
        complete_dt:
          type: string
          format: date
          nullable: true
          description: Дата завершения
          example: "2022-03-15"

    PurchaseProductDto:
      type: object
      description: Объект недвижимости в сделке
      required:
        - id
        - code
        - name
        - category
        - technical_layout
        - area
        - floor
        - number
        - building
        - project
        - contract
        - price
        - rooms_number
      properties:
        id:
          $ref: "#/components/schemas/AttrProductId"
        code:
          $ref: "#/components/schemas/AttrProductCode"
        name:
          $ref: "#/components/schemas/AttrProductName"
        category:
          $ref: "#/components/schemas/ProductCategoryDto"
        technical_layout:
          type: string
          description: План ОН (техническая планировка)
          nullable: true
          example: "/upload/iblock/c13/9zarozg1dm2s58i7j30by3gn42r97puj.webp"
        area:
          $ref: "#/components/schemas/AttrProductArea"
        rooms_number:
          $ref: "#/components/schemas/AttrProductRoomsNumber"
        floor:
          $ref: "#/components/schemas/AttrProductFloor"
        number:
          $ref: "#/components/schemas/AttrProductNumber"
        project:
          $ref: "#/components/schemas/ProductProjectDto"
        building:
          $ref: "#/components/schemas/BuildingDto"
        contract_price:
          type: number
          description: Стоимость ОН по договору
          example: 9042000

    PurchaseDetailDto:
      type: object
      description: Детальные данные по сделке
      required:
        - lead_id
        - phase
        - phase_title
        - step
        - status
        - title
        - description
        - explanation
        - notification
        - contract_price
        - expiration_dt
        - free_booking_dt
        - purchase_type
        - booking_payment
        - products
        - phase_document
        - mortgage
        - contact
        - digital_signature
        - escrow
        - letter_of_credit
        - bills_qty
        - documents_qty
        - letter_of_credit_dt
        - escrow_dt
        - payment_schedule
        - inspection
        - unilateral_act_dt
      properties:
        lead_id:
          type: string
          description: Идентификатор клиентского интереса (идентификатор лида в CRM)
          minLength: 1
          nullable: true
        phase:
          $ref: "#/components/schemas/PhaseDto"
        phase_title:
          type: string
          description: Заголовок страницы для сайта
          minLength: 1
          example: "Договор № СТН(К)-1/22/159-ДДУ/158893/23"
        step:
          $ref: "#/components/schemas/AttrPurchaseStep"
        status:
          $ref: "#/components/schemas/PurchaseStatusDto"
        title:
          type: string
          description: Заголовок шага сделки
          example: "Оплатите счета"
          minLength: 1
        description:
          type: string
          nullable: true
          description: Описание шага сделки (с поддержкой HTML-форматирования)
          example: "<p>Формируем проект договора на приобретение объекта недвижимости.</p><p>Как только он будет сформирован, вы перейдете на следующий этап</p>"
        explanation:
          type: string
          nullable: true
          description: Пояснение к шагу сделки (с поддержкой HTML-форматирования)
          example: "Цена в договоре не является конечной и зависит от способа покупки"
        notification:
          type: string
          nullable: true
          description: Предупреждение к шагу сделки (с поддержкой HTML-форматирования)
          example: "Пополнять эскроу-счет лично вам не требуется, это делается банком самостоятельно!"
        expiration_dt:
          type: string
          format: date
          nullable: true
          description: Срок бронирования
          example: "2022-03-15"
        free_booking_dt:
          type: string
          format: datetime
          description: Срок бесплатного бронирования
          nullable: true
          example: "2023-04-17T15:57:40+03:00"
        purchase_type:
          $ref: "#/components/schemas/PurchaseTypeDto"
        booking_payment:
          type: object
          nullable: true
          description: Данные по оплате бронирования
          required: [amount, debt, unpaid_bills_count, unpaid_bills]
          properties:
            amount:
              type: number
              description: Сумма к оплате по договору бронирования
              example: 92000
            debt:
              type: number
              description: Сумма задолженности по договору бронирования
              example: 92000
            unpaid_bills_count:
              $ref: "#/components/schemas/AttrCount"
            unpaid_bills:
              type: array
              items:
                $ref: "#/components/schemas/BillUnpaidDto"
        products:
          type: array
          items:
            $ref: "#/components/schemas/PurchaseProductDto"
        phase_document:
          type: object
          nullable: true
          description: Документ, в рамках которого осуществляется этап
          required:
            [
              id,
              type,
              name,
              status,
              explanation,
              attributes,
              contract_type,
              file_id,
            ]
          properties:
            id:
              type: number
              description: ID документа
            type:
              type: string
              description: Код типа документа
              enum:
                [
                  "reservation_contract",
                  "purchase_contract",
                  "letter_of_credit",
                  "escrow",
                  "transfer_acceptance_act",
                  "unilateral_act",
                  "mortgage_approval",
                ]
            name:
              type: string
              description: Название документа
              example: "Договор бронирования"
              minLength: 1
            status:
              $ref: "#/components/schemas/PurchaseDocumentStatusDto"
            explanation:
              type: string
              nullable: true
              description: Пояснение к документу
              example: "Цена в договоре не является конечной и зависит от способа покупки"
            attributes:
              type: array
              items:
                $ref: "#/components/schemas/PurchaseDocumentAttributeDto"
            contract_type:
              $ref: "#/components/schemas/ContractTypeDto"
            file_id:
              type: string
              description: ID приватного файла, связанного с документом
              example: 335123
              nullable: true
        mortgage:
          type: object
          nullable: true
          description: Данные ипотечной заявки в рамках сделки (только для способа покупки Ипотека)
          required: [approved_offers_qty, mortgage_application, manager]
          properties:
            approved_offers_qty:
              type: integer
              description: Количество одобренных банковских предложений
              example: 9
            mortgage_application:
              $ref: "#/components/schemas/MortgageApplicationDetailDto"
            manager:
              type: object
              nullable: true
              description: Ипотечный менеджер
              required: [name, email, phone]
              properties:
                name:
                  type: string
                  description: ФИО менеджера
                  example: "Фролов Андрей Викторович"
                  nullable: true
                  minLength: 1
                email:
                  type: string
                  description: email менеджера
                  example: "user@domain.com"
                  nullable: true
                  minLength: 1
                phone:
                  type: string
                  description: телефон менеджера
                  example: "+79996665555"
                  nullable: true
                  minLength: 1
        contact:
          type: object
          description: Способы связи
          required: [type, manager, support]
          properties:
            type:
              type: string
              description: Тип способа связи для данного шага сделки
              enum: ["manager", "support", "оccupancy"]
            manager:
              type: object
              nullable: true
              description: Контакты менеджера
              required: [name, phone]
              properties:
                name:
                  type: string
                  description: ФИО менеджера
                  example: "Иванов Иван Иванович"
                  nullable: true
                  minLength: 1
                phone:
                  type: string
                  description: Контактный номер телефона менеджера
                  example: "+71234567890"
                  nullable: true
                  minLength: 1
            occupancy:
              $ref: "#/components/schemas/ContentOfficesProjectContactDto"
            support:
              type: object
              description: Контакты ЦКП
              required: [phone, email]
              properties:
                email:
                  type: string
                  description: Электронная почта поддержки
                  example: "otvet@mr-group.ru"
                phone:
                  type: string
                  description: Контактный номер телефона
                  example: "+71234567890"
        digital_signature:
          type: object
          nullable: true
          description: Данные ЭЦП (только для типа подписания = элетронное)
          required: [title, description, extra_title, explanation]
          properties:
            title:
              type: string
              description: Заголовок для баннера
              example: "Оформите ЭЦП"
              minLength: 1
            description:
              type: string
              description: Описание для баннера
              minLength: 1
              example: "Для подписания договора нужно оформить электронную подпись"
            extra_title:
              type: string
              description: Заголовок для шторки
              example: "Как оформить ЭЦП"
              minLength: 1
            explanation:
              type: string
              description: Пояснение к способу оформления ЭЦП (с поддержкой HTML-форматирования)
              example: "<p>Есть несколько сервисов, позволяющих быстро и удобно оформить ЭЦП:</p><ul><li>SignMe</li><li>Госключ</li></ul><p>Свяжитесь с вашим менеджером для отправки заявки на оформление ЭЦП или если она уже у вас есть</p>"
              minLength: 1
        escrow:
          type: object
          nullable: true
          description: Данные по заявке на открытие счета эскроу
          required: [status, sending_dt, approval_dt, logo]
          properties:
            status:
              $ref: "#/components/schemas/EscrowStatusDto"
            sending_dt:
              type: string
              format: datetime
              description: Дата отправки на согласование
              nullable: true
              example: "2023-04-17T15:57:40+03:00"
            approval_dt:
              type: string
              format: datetime
              description: Дата согласования заявки
              nullable: true
              example: "2023-04-17T15:57:40+03:00"
            logo:
              type: string
              format: url
              minLength: 1
              description: Ссылка на логотип банка
              example: "/upload/uf/89a/zvu3bs8hzu5t6idbgxtmdyoiw756wx2g.svg"
        letter_of_credit:
          type: object
          nullable: true
          description: Данные по аккредитиву
          required: [description, amount, explanation]
          properties:
            description:
              type: string
              description: Описание к сумме, которую нужно внести на аккредитив
              example: "Подготовьте платеж по рассрочке"
              minLength: 1
            amount:
              type: number
              description: Сумма, которую необходимо внести на аккредитив
              example: 92000
            explanation:
              type: string
              description: Пояснение к взносу на аккредитив
              nullable: true
              example: "Остальную часть внесет банк согласно условиям ипотечного договора"
        letter_of_credit_dt:
          type: string
          format: date
          nullable: true
          description: Дата открытия аккредитива
          example: "2022-03-15"
        escrow_dt:
          type: string
          format: date
          nullable: true
          description: Дата открытия эскроу счета
          example: "2022-03-15"
        bills_qty:
          type: integer
          description: Общее количество счетов в сделке
          example: 16
        documents_qty:
          type: integer
          description: Общее количество документов в сделке
          example: 16
        payment_schedule:
          type: object
          nullable: true
          description: Данные для отображения графика платежей
          required: [amount, paid_amount, payments]
          properties:
            amount:
              type: number
              description: Сумма договора
            paid_amount:
              type: number
              description: Сумма договора
            payments:
              type: array
              items:
                $ref: "#/components/schemas/PurchasePaymentDto"
        inspection:
          type: object
          nullable: true
          description: Данные приемки
          required:
            - registration_state
            - registration
          properties:
            registration_state:
              type: string
              description: |
                Состояние функциональности записи на осмотр для ОН сделки.

                - `available` — доступна
                - `unavailable` — недоступна
              enum: ["available", "unavailable"]
            registration:
              type: object
              nullable: true
              description: Данные записи на осмотр
              required: [id, visit_dt, status]
              properties:
                id:
                  type: string
                  minLength: 1
                  description: Идентификатор осмотра
                status:
                  $ref: "#/components/schemas/InspectionStatusDto"
                visit_dt:
                  type: string
                  format: datetime
                  description: Дата начала осмотра
                  example: "2023-04-17T15:57:40+03:00"
        unilateral_act_dt:
          type: string
          format: date
          nullable: true
          description: Дата отправки одностороннего акта
          example: "2022-03-15"

    PurchaseStatusDto:
      type: object
      description: Статус сделки
      required: [code, name]
      properties:
        code:
          type: string
          description: Код статуса
          enum: ["active", "completed", "canceled"]
        name:
          type: string
          description: Название статуса
          minLength: 1
          enum: ["Активная", "Завершена", "Отменена"]

    EscrowStatusDto:
      type: object
      description: Статус заявки на открытие эскроу
      required: [code, name]
      properties:
        code:
          type: string
          description: Код статуса
          enum: ["unsent", "sent", "approved"]
        name:
          type: string
          description: Название статуса
          minLength: 1
          enum: ["Не отправлена", "Отправлена", "Согласована"]

    PhaseDto:
      type: object
      description: Этап сделки
      required: [code, name, number, phases_qty]
      properties:
        code:
          type: string
          description: Код этапа
          enum: ["booking", "contracting", "project_waiting", "inspection"]
        name:
          type: string
          description: Название текущего этапа
          example: "Оплата бронирования"
          minLength: 1
        number:
          type: number
          description: Номер текущего этапа
          example: 1
        phases_qty:
          type: number
          description: Количество этапов
          example: 4

    BillsListDto:
      type: object
      description: Список счетов
      required: [items]
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/BillDto"

    BillUnpaidDto:
      type: object
      description: Реквизиты счета (параметры сущности Счет)
      required: [description, amount, payment_link, expiration_dt, status]
      properties:
        description:
          type: string
          description: Описание
          example: "Бронирование объекта недвижимости"
          minLength: 1
        amount:
          type: number
          description: Сумма к оплате
          example: 92000
        payment_link:
          $ref: "#/components/schemas/AttrPaymentLink"
        expiration_dt:
          type: string
          format: datetime
          description: Срок оплаты
          example: "2023-04-17T15:57:40+03:00"
        status:
          $ref: "#/components/schemas/BillStatusDto"

    BillDto:
      type: object
      description: Реквизиты счета (параметры сущности Счет)
      required: [description, amount, payment_link, expiration_dt, status]
      properties:
        description:
          type: string
          description: Описание
          example: "Бронирование объекта недвижимости"
        amount:
          type: number
          description: Сумма к оплате
          example: 92000
        payment_link:
          allOf:
            - $ref: "#/components/schemas/AttrPaymentLink"
            - nullable: true
        expiration_dt:
          type: string
          format: datetime
          nullable: true
          description: Срок оплаты (для неоплаченных счетов)
          example: "2023-04-17T15:57:40+03:00"
        status:
          $ref: "#/components/schemas/BillStatusDto"

    BillStatusDto:
      type: object
      description: Статус счета (параметры из справочника Статусы счетов)
      required: [code, name]
      properties:
        code:
          type: string
          description: Код статуса счета
          enum: ["new", "waiting", "canceled", "paid"]
        name:
          type: string
          description: Название статуса счета
          minLength: 1
          enum: ["Не оплачен", "Ожидание", "Отменен", "Оплачен"]

    PurchaseDocumentAttributeDto:
      type: object
      description: Атрибут документа
      required: [code, name, value, formatted_value, extra_value]
      properties:
        code:
          type: string
          description: Код атрибута
        name:
          type: string
          description: Название атрибута
          minLength: 1
        value:
          anyOf:
            - type: string
            - type: number
            - type: integer
          description: Основное значение
          example: "11 000 000"
        formatted_value:
          type: string
          description: Основное значение форматированное
          example: "11 000 000 ₽"
          minLength: 1
        extra_value:
          type: string
          nullable: true
          description: Дополнительное значение
          example: "200 000 ₽ за кв. м"

    ContractTypeDto:
      type: object
      nullable: true
      description: Тип договора на приобретение
      required: [code, name, abbreviation]
      properties:
        code:
          type: string
          description: Код типа договора
          enum: ["ddu", "dkp", "uddu", "pddu", "pdkp"]
        name:
          type: string
          description: Название типа договора
          minLength: 1
          enum:
            [
              "Договор долевого участия",
              "Договор купли-продажи",
              "Уступка прав по договору долевого участия",
              "Предварительный договор долевого участия",
              "Предварительный договор купли-продажи",
            ]
        abbreviation:
          type: string
          nullable: true
          description: Аббревиатура типа договора
          enum: ["ДДУ", "ДКП", "УДДУ", "ПДДУ", "ПДКП"]

    PurchaseDocumentsListDto:
      type: object
      description: Список документов сделки
      required: [items]
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/PurchaseDocumentDto"

    PurchaseDocumentDto:
      type: object
      description: Документ сделки
      required: [id, type, name, status, number, file_id]
      properties:
        id:
          type: number
          description: ID документа
        type:
          type: string
          description: Код типа документа
          minLength: 1
          enum:
            [
              "reservation_contract",
              "purchase_contract",
              "letter_of_credit",
              "escrow",
              "transfer_acceptance_act",
              "unilateral_act",
              "mortgage_approval",
            ]
        name:
          type: string
          description: Название документа
          minLength: 1
          example: "Договор бронирования"
        status:
          $ref: "#/components/schemas/PurchaseDocumentStatusDto"
        number:
          type: string
          description: Номер документа (при наличии)
          nullable: true
          example: "СТН(К)-1/22/159-ДДУ/158893/23"
        file_id:
          type: integer
          description: ID приватного файла, связанного с документов
          example: 3315110
          nullable: true

    PurchaseDocumentStatusDto:
      type: object
      nullable: true
      description: |
        Статус документа сделки (параметры справочника Статусы документов)

        Передается только для следующих типов документов:
          - purchase_contract (договор приобретения)
          - reservation_contract (договор бронирования)
          - transfer_acceptance_act (акт приема-передачи)
          - unilateral_act (односторонний акт приема-передачи)

        Возможные статусы:
          - `signing` - Подписание
          - `active` - Действующий
          - `expired` - Истек
          - `terminated` - Расторгнут

      required: [code, name]
      properties:
        code:
          type: string
          description: Код
          minLength: 1
          enum: ["signing", "active", "expired", "terminated"]
        name:
          type: string
          description: Название
          enum: ["Подписание", "Действующий", "Истек", "Расторгнут"]
          minLength: 1

    PurchaseDocumentDetailDto:
      type: object
      description: Документ сделки
      required: [document, attributes]
      properties:
        document:
          $ref: "#/components/schemas/PurchaseDocumentDto"
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/PurchaseDocumentAttributeDto"

    PurchasePaymentDto:
      type: object
      description: Платеж по сделке
      required:
        [
          number,
          expiration_dt,
          payment,
          amount_percentage,
          debt,
          debt_percentage,
          paid_percentage,
        ]
      properties:
        number:
          type: integer
          description: Номер платежа
          example: 3
        expiration_dt:
          type: string
          format: datetime
          description: Срок оплаты
          example: "2023-04-17T15:57:40+03:00"
        payment:
          type: number
          description: Сумма к оплате
        amount_percentage:
          type: number
          description: Процент суммы платежа от суммы договора
        debt:
          type: number
          description: Сумма задолженности
        debt_percentage:
          type: number
          description: Процент задолженности от суммы платежа
        paid_percentage:
          type: number
          description: Процент оплаченной суммы от суммы договора

    PurchaseMrclubOffersListDto:
      required:
        - items
      description: Список предложений программы лояльности MR Club для сделки
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/PurchaseMrclubOfferDto"

    PurchaseMrclubOfferDto:
      description: Краткая информация о предложении программы лояльности для сделки
      required:
        - categories
        - code
        - image
        - labels
        - logo
        - name
        - teaser
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: "#/components/schemas/MrclubCategoryDto"
        code:
          type: string
          description: Системное имя предложения
          minLength: 1
        image:
          type: string
          description: Изображение предложения
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"
          minLength: 1
        name:
          type: string
          description: Название предложения
          example: "Обойкин — сеть обойных центров"
          minLength: 1
        teaser:
          type: string
          nullable: true
          description: Краткое описание предложения
          example: "Скидка в магазин с огромным выбором обоев"
        labels:
          type: array
          items:
            $ref: "#/components/schemas/MrclubOfferLabelDto"
        logo:
          type: string
          description: Логотип партнера
          nullable: true
          example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"

    InspectionStatusDto:
      type: object
      description: |
        Статус записи на осмотр

        - `pre_confirmed` — подтверждение записи
        - `confirmed` — открыт
        - `pre_canceled` — подтверждение отмены
        - `canceled` — отменен
        - `pre_completed` — подтверждение завершения
        - `completed` — завершен
      required: [code, name]
      properties:
        code:
          type: string
          description: Код
          minLength: 1
          enum:
            - "pre_confirmed"
            - "confirmed"
            - "pre_canceled"
            - "canceled"
            - "pre_completed"
            - "completed"
        name:
          type: string
          description: Название
          minLength: 1
          enum:
            - "Подтверждение записи"
            - "Открыт"
            - "Подтверждение отмены"
            - "Отменен"
            - "Подтверждение завершения"
            - "Завершен"

    ScheduleDto:
      type: object
      description: |
        Список доступных слотов
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/TimeSlotDto"

    TimeSlotDto:
      type: object
      description: |
        Данные слота для записи
      required:
        - id
        - date
      properties:
        id:
          type: string
          format: uuid
          minLength: 1
          description: Внешний идентификатор слота
        date:
          $ref: "#/components/schemas/AttrDatetime"

    InspectionRegistrationRequestDto:
      type: object
      description: |
        Данные слота для записи
      required:
        - slot
      properties:
        slot:
          type: string
          format: uuid
          description: Идентификатор слота
          minLength: 1
        vehicle:
          type: object
          description: |
            Данные ТС для бронирования парковочного места
          required:
            - number
            - brand
          properties:
            number:
              type: string
              description: Номер ТС
              minLength: 1
            brand:
              type: string
              description: Марка ТС
              minLength: 1

    ButtonDto:
      description: Объект для кнопки
      required: [text, link]
      type: object
      properties:
        text:
          type: string
          description: Текст кнопки
        link:
          type: string
          description: Ссылка кнопки

    MetroDto:
      description: Метро
      nullable: true
      required:
        - color
        - name
      type: object
      properties:
        color:
          $ref: "#/components/schemas/AttrMetroColor"
        name:
          $ref: "#/components/schemas/AttrMetroName"

    MetroMovementWayDto:
      description: Метро
      nullable: true
      required:
        - icon
        - name
      type: object
      properties:
        icon:
          type: string
          description: Иконка способа перемещения до метро
          example: "/upload/uf/80e/gacge20aisrrbbzizicoxk0tgecgfl9p.png"
        name:
          type: string
          description: Название способа перемещения до метро
          example: "Пешком"

    ImageDto:
      required:
        - src
      type: object
      properties:
        src:
          type: string
          description: Ссылка на изображение
        description:
          type: string
          description: Описание для изображения

    FileDto:
      required:
        - src
      type: object
      properties:
        src:
          type: string
          description: Ссылка на файл
        description:
          type: string
          description: Описание для файла

    SendCodeRequest:
      required:
        - type
        - phoneNumber
        - mail
      type: object
      properties:
        type:
          type: string
          description: Тип отпавки сообщения sms или mail
          example: "sms"
        phoneNumber:
          type: string
          description: Номер телефона должен содержать код страны +7 и 10 цифр номера телефона
          example: "+71234567890"
        mail:
          type: string
          description: Электронная почта
          nullable: true
          example: "mail@example.com"

    SendCodeResponse:
      required:
        - refresh
      type: object
      properties:
        refresh:
          type: string
          format: datetime
          description: Cрок деактивации повторной отправки кода
          example: "2023-04-17T15:57:40+03:00"

    SendCodeResponse2:
      required:
        - refresh
        - message
      type: object
      properties:
        refresh:
          type: string
          format: datetime
          description: Cрок деактивации повторной отправки кода
          example: "2023-04-17T15:57:40+03:00"
          nullable: true
        message:
          type: string
          description: Сообщение об ошибке (Превышен лимит ввода кода/Истек срок действия кода/Неправильный код/Превышен лимит повторных запросов/Превышен лимит ввода кода и повторных запросов/Истек срок действия кода и превышен лимит повторных запросов/Отправленный код еще действителен)
          example: "Отправленный код еще действителен"
          nullable: true

    SendCodeResponse3:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          description: Сообщение об ошибке (Превышен лимит ввода кода/Истек срок действия кода/Неправильный код/Превышен лимит повторных запросов/Превышен лимит ввода кода и повторных запросов/Истек срок действия кода и превышен лимит повторных запросов)
          example: "Истек срок действия кода"
          nullable: true

    CheckCodeRequest:
      required:
        - type
        - code
        - phoneNumber
        - mail
      type: object
      properties:
        type:
          type: string
          description: Тип отправки сообщения sms или mail
          example: "sms"
        code:
          type: integer
          description: Код подтверждения
          example: "1234"
        phoneNumber:
          type: string
          description: Номер телефона. Должен содержать код страны +7 и 10 цифр номера
          example: "+71234567890"
        mail:
          type: string
          description: Электронная почта
          example: "mail@example.com"

    PromoSnippetDto:
      description: Контент акции (для скиппета акции в списке)
      required:
        - code
        - title
        - subtitle
        - promo_expires
        - promo_image
        - background_color
        - white_text
        - gradient
      type: object
      properties:
        code:
          type: string
          description: Символьный код акции
          example: "iampromo"
          nullable: true
        title:
          type: string
          description: Заголовок акции
          example: "Рассрочка 0% в ЖК Mod"
        subtitle:
          type: string
          description: Подзаголовок акции
          example: "Успейте приобрести квартиру на выгодных условиях"
          nullable: true
        promo_expires:
          type: string
          format: datetime
          description: Дата окончания акции
          example: "2012-04-23T18:25:43.511Z"
          nullable: true
        promo_image:
          type: string
          format: url
          description: URL изображения для сниппета акции
          example: "/static/promo/1.jpg"
          nullable: true
        background_color:
          type: string
          format: hex
          description: HEX цвета заливки сниппета
          nullable: true
        white_text:
          type: boolean
          description: Флаг отображения светлого текста на стороне frontend
        gradient:
          type: boolean
          description: Флаг использования градиентной подложки для шрифта

    PromoListDto:
      description: Список акций
      required:
        - items
      type: object
      properties:
        items:
          type: array
          description: Список акций
          items:
            $ref: "#/components/schemas/PromoSnippetDto"

    PromoContentDto:
      description: Контент по акции (для карточки акции)
      type: object
      required:
        - title
        - subtitle
        - promo_image_detail
        - content
        - project
        - promo_expires
        - button_text
        - button_web_link
        - button_app_link
        - ad_label
      properties:
        title:
          type: string
          description: Заголовок акции
          example: "Рассрочка 0% в ЖК Mod"
        subtitle:
          type: string
          description: Подзаголовок акции
          example: "Успейте приобрести квартиру на выгодных условиях"
        promo_image_detail:
          type: string
          format: url
          description: URL изображения для детальной страницы акции
          example: "/static/promo/2.jpg"
          nullable: true
        content:
          type: string
          format: html
          description: Форматированный в HTML контент страницы
          example: "<h3>Это заголовок</h3> И тут вот текст"
        project:
          type: object
          description: Объект связанного проекта
          nullable: true
          properties:
            id:
              $ref: "#/components/schemas/AttrProjectId"
            code:
              $ref: "#/components/schemas/AttrProjectCode"
        promo_expires:
          type: string
          format: datetime
          description: Дата окончания акции
          example: "2012-04-23T18:25:43.511Z"
          nullable: true
        button_text:
          type: string
          description: Текст для кнопки на странице акции
          example: "Смотреть предложения"
          nullable: true
        button_web_link:
          type: string
          description: Ссылка для кнопки на странице акции (Сайт))
          example: "/flats?project[]=1"
          nullable: true
        button_app_link:
          type: string
          description: Ссылка для кнопки на экране акции (МП)
          nullable: true
        ad_label:
          $ref: "#/components/schemas/AttrAdvertisementLabel"

    InteractivePlanDto:
      required:
        - background_image
        - svg_markup
        - level_plan
        - floor
        - object_types
        - compass_angle
      type: object
      nullable: true
      properties:
        background_image:
          type: string
          format: url
          example: "/static/plan/hide_main.png"
          description: Ссылка на изображение плана (тут может быть изображение и SVG)
          minLength: 1
        svg_markup:
          type: string
          format: url
          example: "/static/plan/hide_main_markup.svg"
          description: Ссылка на SVG разметку
          minLength: 1
        level_plan:
          type: string
          example: "project"
          description: Уровень плана
          enum: [project, building, section, floor]
        floor:
          type: number
          example: 3
          description: Этаж, который необходимо передать для получения объектов к плану
          nullable: true
        object_types:
          type: array
          example: ["flats"]
          description: Типы ОН, доступные на схеме
          items:
            type: string
            minLength: 1
        compass_angle:
          $ref: "#/components/schemas/AttrCompassAngle"

    ShortInteractivePlanDto:
      required:
        - background_image
        - svg_markup
      type: object
      nullable: true
      properties:
        background_image:
          type: string
          format: url
          example: "/static/plan/hide_main.png"
          description: Ссылка на изображение плана
          minLength: 1
        svg_markup:
          type: string
          format: url
          example: "/static/plan/hide_main_markup.svg"
          description: Ссылка на SVG разметку
          minLength: 1

    TypicalObjectsListDto:
      type: object
      description: Список планировок
      properties:
        limit:
          $ref: "#/components/schemas/AttrPaginationLimit"
        page:
          $ref: "#/components/schemas/AttrPaginationPage"
        page_count:
          $ref: "#/components/schemas/AttrPaginationPageCount"
        sort:
          type: object
          description: Объект примененной сортировки
          properties:
            code:
              type: string
              description: Код сортировки
            name:
              type: string
              description: Название сортировки
        items:
          type: array
          description: Список планировок
          items:
            $ref: "#/components/schemas/TypicalObjectDto"

    TypicalObjectDto:
      type: object
      required:
        - typicalObjectId
        - project
        - building
        - apartments_count
        - rooms_number
        - technical_layout
        - min_area
        - max_area
        - min_price
        - min_payment
        - min_deadline
        - min_floor
        - max_floor
      description: Объект планировки для списка
      properties:
        typicalObjectId:
          type: string
          format: uuid
          description: ID планировки
        project:
          type: object
          required: [id, code, name]
          properties:
            id:
              $ref: "#/components/schemas/AttrProjectId"
            code:
              $ref: "#/components/schemas/AttrProjectCode"
            name:
              $ref: "#/components/schemas/AttrProjectName"
        building:
          type: object
          required: [id, code, name, deadline]
          properties:
            id:
              $ref: "#/components/schemas/AttrBuildingId"
            code:
              $ref: "#/components/schemas/AttrBuildingCode"
            name:
              $ref: "#/components/schemas/AttrBuildingName"
            deadline:
              $ref: "#/components/schemas/AttrBuildingDeadline"
        apartments_count:
          type: integer
          description: Количество объектов в планировке
          example: 30
        rooms_number:
          type: integer
          description: |
            Количество комнат в планировке
          enum: [0, 1, 2, 3, 4]
        technical_layout:
          type: string
          format: url
          description: Ссылка на изображение планировки
        3d_layout:
          type: string
          format: url
          description: Ссылка на 3D планировку
        min_area:
          type: number
          description: Максимальная площадь ОН в планировке
        max_area:
          type: number
          description: Максимальная площадь ОН в планировке
        min_price:
          $ref: "#/components/schemas/AttrMinPrice"
        min_payment:
          type: number
          nullable: true
          description: Минимальный платеж по ипотеке в планировке
        min_floor:
          type: integer
          description: Минимальный этаж в планировке
        max_floor:
          type: integer
          description: Максимальный этаж в планировке

    TypicalObjectDetailDto:
      type: object
      properties:
        typicalObject:
          $ref: "#/components/schemas/TypicalObjectDto"
        sort:
          type: object
          description: Объект примененной сортировки
          properties:
            code:
              type: string
              description: Код сортировки
            name:
              type: string
              description: Название сортировки
        items:
          type: array
          description: Список ОН
          items:
            $ref: "#/components/schemas/TypicalObjectProductDto"

    TypicalObjectProductDto:
      type: object
      required:
        - id
        - code
        - name
        - price
        - discount
        - purchase_type
        - monthly_payment
        - floor
        - area
        - building
        - status
        - technical_layout
        - purchase_types
        - booking_type
      properties:
        id:
          $ref: "#/components/schemas/AttrProductId"
        code:
          $ref: "#/components/schemas/AttrProductCode"
        name:
          $ref: "#/components/schemas/AttrProductName"
        number:
          $ref: "#/components/schemas/AttrProductNumber"
        price:
          $ref: "#/components/schemas/AttrProductTotalPrice"
        discount:
          $ref: "#/components/schemas/DiscountDto"
        purchase_type:
          type: string
          description: Основной способ покупки
          example: "mortgage"
        monthly_payment:
          $ref: "#/components/schemas/AttrProductMonthlyPayment"
        technical_layout:
          type: string
          description: План ОН (техническая планировка)
          example: "/upload/iblock/c13/9zarozg1dm2s58i7j30by3gn42r97puj.webp"
        area:
          $ref: "#/components/schemas/AttrProductArea"
        floor:
          $ref: "#/components/schemas/AttrProductFloor"
        building:
          required: [floors_number]
          type: object
          description: Информация о корпусе
          properties:
            floors_number:
              type: integer
              description: Количество этажей в корпусе
        status:
          $ref: "#/components/schemas/ProductStatusDto"
        booking_type:
          $ref: "#/components/schemas/AttrProductBookingType"
        purchase_types:
          type: array
          description: Доступные способы покупки.
          items:
            $ref: "#/components/schemas/ProductPurchaseTypeDto"

    FilterResponseDto:
      type: object
      required:
        - categories
        - filters
        - count
        - projects_count
        - typical_objects_count
        - sorts
      properties:
        categories:
          type: array
          description: |
            Список доступных категорий.
            В объекте возвращается список всех доступных категорий.
          items:
            type: object
            required:
              - available
              - name
              - value
              - checked
              - additional_info
            properties:
              available:
                type: boolean
                description: Признак доступности значения для выбора
              name:
                type: string
                description: Отображаемое название категории
                example: "Квартиры"
              value:
                type: string
                description: Код категории
                enum: [flats, parkings, boxrooms, commertials, offices]
              checked:
                type: boolean
                description: Признак активированной категории
              additional_info:
                nullable: true
                description: Объект не используется. Объект был почему-то реализован, но в аналитике нет никакой информации, что тут должно было передаваться.
        filters:
          type: array
          description: Список доступных фильтров
          items:
            anyOf:
              - $ref: "#/components/schemas/RangeFilterResponseDto"
              - $ref: "#/components/schemas/BooleanFilterResponseDto"
              - $ref: "#/components/schemas/SelectFilterResponseDto"
        count:
          $ref: "#/components/schemas/AttrCount"
        projects_count:
          type: integer
          description: Количетство проектов, соответствующие фильтрам
        typical_objects_count:
          type: integer
          description: Количество планировок, соответствующие фильтрам
        sorts:
          type: array
          description: Доступные сортировки
          items:
            $ref: "#/components/schemas/SortDto"

    SortDto:
      type: object
      required:
        - code
        - name
      description: Объект сортировки
      properties:
        code:
          type: string
          description: Код сортировки
          example: "default"
        name:
          type: string
          description: Название сортировки
          example: "По умолчанию"

    RangeFilterResponseDto:
      type: object
      required:
        - code
        - type
        - range
        - global_range
      description: Фильтр типа range
      properties:
        code:
          type: string
          description: Код фильтра
          example: "floor"
        type:
          type: string
          description: Тип фильтра
          enum: ["range"]
        range:
          type: object
          required: [min, max]
          description: Границы фильтра
          properties:
            min:
              type: integer
              description: Минимальная граница
              example: 5
            max:
              type: integer
              description: Максимальная граница
              example: 20
        global_range:
          type: object
          required: [min, max]
          description: Глоабльные границы фильтра
          properties:
            min:
              type: integer
              description: Минимальная глобальная граница
              example: 5
            max:
              type: integer
              description: Максимальная глобальная граница
              example: 20

    SelectFilterResponseDto:
      type: object
      required:
        - name
        - code
        - type
        - values
      description: Фильтр типа select
      properties:
        name:
          type: string
          description: Отображаемое название
          example: "Проект"
        code:
          type: string
          description: Код фильтра
          example: "project"
        type:
          type: string
          description: Тип фильтра
          enum: ["select"]
        values:
          type: array
          description: Доступные значения
          items:
            type: object
            required:
              - name
              - value
              - checked
              - available
              - additional_info
            properties:
              name:
                type: string
                description: Отображаемое название
                example: "HIDE"
              value:
                type: string
                description: Код значения
                example: "hide"
              checked:
                type: boolean
                description: Признак активированного фильтра
              available:
                type: boolean
                description: Признак недоступности для выбора
              additional_info:
                nullable: true
                anyOf:
                  - $ref: "#/components/schemas/FilterAdditionalInfoProjectDto"
                  - $ref: "#/components/schemas/FilterAdditionalInfoBuildingDto"
                  - $ref: "#/components/schemas/FilterAdditionalInfoPlaceDto"

    BooleanFilterResponseDto:
      required:
        - name
        - code
        - type
        - checked
        - available
      type: object
      description: Фильтра типа boolean
      properties:
        name:
          type: string
          description: Отображаемое название
          example: "Семейное"
        code:
          type: string
          description: Код фильтра
          example: "family"
        type:
          type: string
          description: Тип фильтра
          enum: ["boolean"]
        checked:
          type: boolean
          description: Признак активированного фильтра
        available:
          type: boolean
          description: Признак недоступности для выбора

    FilterAdditionalInfoPlaceDto:
      type: object
      required:
        - area_id
        - area_name
        - metro_color
        - metro_line
        - movement_way
        - metro_distance
      properties:
        area_id:
          type: integer
          description: ID округа
          example: 1
        area_name:
          type: string
          description: Название округа
          example: "СВАО"
        metro_color:
          $ref: "#/components/schemas/AttrMetroColor"
        metro_line:
          $ref: "#/components/schemas/AttrMetroLine"
        movement_way:
          type: string
          format: url
          nullable: true
          description: Ссылка на иконку способа передвижения
          example: "/upload/uf/89a/zvu3bs8hzu5t6idbgxtmdyoiw756wx2g.ico"
        metro_distance:
          $ref: "#/components/schemas/AttrMetroDistance"

    FilterAdditionalInfoProjectDto:
      type: object
      required:
        - min_price
        - metro_color
        - metro_line
        - movement_way
        - metro_distance
        - image
      properties:
        min_price:
          $ref: "#/components/schemas/AttrMinPrice"
        metro_color:
          $ref: "#/components/schemas/AttrMetroColor"
        metro_line:
          $ref: "#/components/schemas/AttrMetroLine"
        movement_way:
          type: string
          format: url
          nullable: true
          description: Ссылка на иконку способа передвижения
          example: "/upload/uf/89a/zvu3bs8hzu5t6idbgxtmdyoiw756wx2g.ico"
        metro_distance:
          $ref: "#/components/schemas/AttrMetroDistance"
        image:
          type: string
          format: url
          nullable: true
          description: Ссылка на изображение проекта
          example: "/upload/uf/89a/zvu3bs8hzu5t6idbgxtmdyoiw756wx2g.png"

    FilterAdditionalInfoBuildingDto:
      type: object
      required:
        - project_id
        - project_name
        - released
        - quater
        - year
      properties:
        project_id:
          $ref: "#/components/schemas/AttrProjectId"
        project_name:
          $ref: "#/components/schemas/AttrProjectName"
        released:
          type: boolean
          description: Признак, что проект сдан
        quater:
          type: integer
          nullable: true
          description: Квартал сдачи проекта
          example: 3
        year:
          type: string
          nullable: true
          description: Год сдачи проекта
          example: "2023"

    PriceTableDto:
      type: array
      description: Таблица цен и площадей
      items:
        $ref: "#/components/schemas/PriceRowDto"

    PriceRowDto:
      type: object
      required:
        - name
        - filter
        - min_price
        - min_area
      description: Строка таблицы цен и площадей
      properties:
        filter:
          type: integer
          description: Значение для фильтра по комнатности
        min_price:
          $ref: "#/components/schemas/AttrMinPrice"
        min_area:
          type: number
          description: Минимальная площадь
        name:
          type: string
          description: Имя строки

    PlanBuildingsListDto:
      type: object
      required: [items]
      properties:
        items:
          type: array
          description: Массив корпусов
          items:
            $ref: "#/components/schemas/PlanBuildingDto"

    PlanBuildingDto:
      type: object
      required:
        - id
        - crm_id
        - code
        - name
        - apartments_count
        - min_price
        - max_discount
        - min_payment
        - plan
        - price_table
      properties:
        id:
          $ref: "#/components/schemas/AttrBuildingId"
        crm_id:
          type: string
          description: ID CRM
          example: "e8f38465-2417-47db-8a22-4082633d752a"
        code:
          $ref: "#/components/schemas/AttrBuildingCode"
        name:
          $ref: "#/components/schemas/AttrBuildingName"
        deadline:
          $ref: "#/components/schemas/AttrBuildingDeadline"
        readiness:
          type: integer
          description: Процент готовности корпуса
          example: 25
        floors_number:
          type: integer
          description: Этажность корпуса
          example: 52
        apartments_count:
          type: integer
          description: Количество квартир в корпусе
          example: 200
        min_area:
          type: number
          description: Минимальная площадь в корпусе
          example: 34.9
        min_price:
          $ref: "#/components/schemas/AttrMinPrice"
        max_discount:
          $ref: "#/components/schemas/AttrMaxDiscount"
        min_payment:
          type: number
          description: Минимальный платеж по ипотеке в корпусе
          nullable: true
          example: 24654
        plan:
          $ref: "#/components/schemas/InteractivePlanDto"
        environment:
          $ref: "#/components/schemas/ProductEnvironmentDto"
        price_table:
          $ref: "#/components/schemas/PriceTableDto"

    PlanSectionsListDto:
      type: object
      required: [items]
      properties:
        items:
          type: array
          description: Массив корпусов
          items:
            $ref: "#/components/schemas/PlanSectionDto"

    PlanSectionDto:
      type: object
      required:
        - id
        - crm_id
        - code
        - name
        - apartments_count
        - max_discount
        - plan
        - price_table
      properties:
        id:
          type: integer
          description: ID секции
          example: 1
        crm_id:
          type: string
          description: ID CRM
          example: "e8f38465-2417-47db-8a22-4082633d752a"
        name:
          type: string
          description: Название секции
          example: "Vienna-1"
        deadline:
          $ref: "#/components/schemas/AttrBuildingDeadline"
        readiness:
          type: integer
          description: Процент готовности корпуса
          example: 25
        floors_number:
          type: integer
          description: Этажность секции
          example: 52
        apartments_count:
          type: integer
          description: Количество квартир в секции
          example: 200
        max_discount:
          $ref: "#/components/schemas/AttrMaxDiscount"
        plan:
          $ref: "#/components/schemas/InteractivePlanDto"
        price_table:
          $ref: "#/components/schemas/PriceTableDto"

    PlanFloorsListDto:
      type: object
      required: [items]
      properties:
        items:
          type: array
          description: Массив этажей
          items:
            $ref: "#/components/schemas/PlanFloorDto"

    PlanFloorDto:
      type: object
      required:
        - floor_number
        - apartments_count
        - min_price
        - max_discount
        - min_payment
        - price_table
      properties:
        floor_number:
          type: integer
          description: Номер этажа
          example: 25
        apartments_count:
          type: integer
          description: Количество квартир на этаже
          example: 200
        min_area:
          type: number
          description: Минимальная площадь на этаже
          example: 34.9
        min_price:
          $ref: "#/components/schemas/AttrMinPrice"
        max_discount:
          $ref: "#/components/schemas/AttrMaxDiscount"
        min_payment:
          type: number
          description: Минимальный платеж по ипотеке на этаже
          example: 24654
        plan:
          $ref: "#/components/schemas/InteractivePlanDto"
        price_table:
          $ref: "#/components/schemas/PriceTableDto"

    ProductSubTypeDto:
      type: object
      required:
        - code
        - name
        - description
        - icon
      properties:
        code:
          type: string
          description: Код подтипа
          minLength: 1
        name:
          type: string
          description: Название подтипа
          minLength: 1
        description:
          type: string
          description: Описание подтипа
          minLength: 1
        icon:
          type: string
          format: url
          nullable: true
          description: Иконка подтипа

    SubTypeListDto:
      type: array
      items:
        $ref: "#/components/schemas/SubTypeWithObjectsDto"

    SubTypeWithObjectsDto:
      type: object
      allOf:
        - $ref: "#/components/schemas/ProductSubTypeDto"
        - type: object
          required:
            - objects
          properties:
            objects:
              type: array
              description: Массив ID CRM
              items:
                type: string

    ContentTemplateDto:
      type: object
      required: [main_title]
      properties:
        main_title:
          type: string
          description: Заголовок 1-го уровня
        main_description:
          type: string
          description: Описание 1-го уровня
        second_title:
          type: string
          description: Заголовок 2-го уровня
        second_description:
          type: string
          description: Описание 2-го уровня
        main_image_desk:
          type: string
          description: Изображение для шапки десктопной версии
        main_image_mob:
          type: string
          description: Изображение для шапки моб. версии
        main_button:
          type: object
          properties:
            text:
              type: string
              description: Текст для основной кнопки
            link_web:
              type: string
              description: Ссылка для кнопки на сайте
            link_app:
              type: string
              description: Ссылка для кнопки в МП
        faq_linked_section:
          type: array
          description: Список кодов разделов FAQ
          items:
            type: string
        steps_block_code:
          type: string
          description: Код группы шагов

    FeaturesListDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/FeatureItemDto"

    FeatureItemDto:
      type: object
      required: [title, id, description, image]
      properties:
        id:
          type: string
          description: id особенности
          example: 1
        title:
          type: string
          description: Описание особенности
          example: "Архитектура"
        description:
          type: string
          description: Описание особенности [Устарело]
          example: "Современная архитектура района"
        image:
          type: string
          format: url
          description: Ссылка на изображение особенности

    FeatureContentDto:
      type: object
      required: [title, content, video]
      properties:
        title:
          type: string
          description: Описание особенности
          example: "Архитектура"
          minLength: 1
        content:
          type: string
          nullable: true
          description: HTML контент особенности
          example: "<h2>Это заголовок</h2><p>А это просто текст</p>"
        video:
          type: string
          nullable: true
          description: Ссылка на видео
          example: "https://www.youtube.com/embed/cx6djvSyZeQ"

    ProjectGalleryListDto:
      type: object
      required: [id, name, items]
      properties:
        id:
          type: integer
          description: ID категории
        name:
          type: string
          description: Название категории
          example: "Виртуальный тур"
          minLength: 1
        items:
          type: array
          description: Массив элементов галереи, входящих в категорию
          items:
            $ref: "#/components/schemas/ProjectGalleryItemDto"

    ProjectGalleryItemDto:
      type: object
      description: Элемент галереи
      required:
        - description
        - hide_description
        - id
        - image
        - link_3d
        - type
        - video_link
        - pins
      properties:
        id:
          type: integer
          description: ID элемента
          example: 1
        type:
          type: string
          description: |
            Тип элемента:

            - `image` — если Ссылка на видео и Ссылка на 3D пустые;
            - `video` — если Ссылка на видео не пустой, Ссылка на 3D — пустой;
            - `3D` — если Ссылка на 3D - не пустой.
          minLength: 1
          enum:
            - "3D"
            - "image"
            - "video"
        image:
          $ref: "#/components/schemas/AttrImageLink"
        video_link:
          description: |
            Ссылка на видео элемента.
          type: string
          nullable: true
        link_3d:
          description: |
            Ссылка на 3D-тур.
          type: string
          nullable: true
        description:
          description: |
            Публичное описание к элементу галереи.
          type: string
          nullable: true
          example: "Современная архитектура района"
        hide_description:
          type: boolean
          description: Флаг "Скрыть описание"
        pins:
          type: array
          items:
            $ref: "#/components/schemas/ProjectGalleryItemPinDto"

    ProjectGalleryItemPinDto:
      type: object
      description: Точки (пины) для изображения в галерее
      required:
        - description
        - id
        - x
        - y
      properties:
        id:
          type: integer
          description: ID элемента
          example: 1
        x:
          $ref: "#/components/schemas/AttrPointCoordinate"
        y:
          $ref: "#/components/schemas/AttrPointCoordinate"
        description:
          type: string
          description: |
            Описание особенности.
          nullable: true
          example: "Панорамные окна подъезда"

    InfrastructureResponseDto:
      type: object
      required: [items, project, categories]
      properties:
        project:
          type: object
          description: Информация о проекте
          required: [image, latitude, longitude, name]
          properties:
            name:
              $ref: "#/components/schemas/AttrProjectName"
            image:
              type: string
              description: Первое маркетинговое изображение проекта
            latitude:
              $ref: "#/components/schemas/AttrMapCoordinate"
            longitude:
              $ref: "#/components/schemas/AttrMapCoordinate"
        items:
          type: array
          description: Массив объектов инфраструктуры
          items:
            $ref: "#/components/schemas/InfrastructureObjectDto"
        categories:
          type: array
          description: Массив категорий инфраструктуры
          items:
            $ref: "#/components/schemas/InfrastructureCategoryDto"

    InfrastructureObjectDto:
      type: object
      required:
        [
          id,
          code,
          category_id,
          name,
          address,
          availabilities,
          longitude,
          latitude,
        ]
      properties:
        id:
          type: integer
          description: Внутренний идентификатор объекта
          example: 1
        code:
          type: string
          description: Код объекта
          example: "object_1"
        category_id:
          type: integer
          description: ID категории инфраструктуры
        name:
          type: string
          description: Название организации
          example: "Аптека №1"
        address:
          type: string
          description: Адрес объекта
          example: "ул. Примеров API, д. 3"
        availabilities:
          type: string
          nullable: true
          description: Дни и часы работы объекта
          example: "пн-пт 09:00-20:00, сб-вс 09:00-18:00"
        longitude:
          $ref: "#/components/schemas/AttrMapCoordinate"
        latitude:
          $ref: "#/components/schemas/AttrMapCoordinate"

    InfrastructureCategoryDto:
      type: object
      required: [id, code, name, icon_web, icon_app]
      description: Категория объекта инфраструктуры
      properties:
        id:
          type: integer
          description: ID категории
          example: 2
        name:
          type: string
          description: Название категории
          example: "Медицина"
        icon_web:
          type: string
          description: Ссылка на иконку категории для сайта
          example: "https://mrsuperapp.adv.ru/pictures/medicine_icon_web.svg"
        icon_app:
          type: string
          description: Ссылка на иконку категории для МП
          example: "https://mrsuperapp.adv.ru/pictures/medicine_icon_app.svg"

    ConstructionProgressDto:
      type: object
      description: Объект хода строительства по проекту
      required:
        - project
        - construction_dynamics
        - timeline
        - last_month
        - streams
      properties:
        project:
          type: object
          required:
            - id
            - code
            - name
          properties:
            id:
              $ref: "#/components/schemas/AttrProjectId"
            code:
              $ref: "#/components/schemas/AttrProjectCode"
            name:
              $ref: "#/components/schemas/AttrProjectName"
        construction_dynamics:
          $ref: "#/components/schemas/ConstructionDynamicsDto"
        timeline:
          type: array
          description: Периоды хода строительства
          items:
            $ref: "#/components/schemas/ConstructionProgressTimelineDto"
        last_month:
          $ref: "#/components/schemas/ConstructionProgressPhotoDto"
        streams:
          type: array
          description: Группы live-камер по корпусам
          items:
            $ref: "#/components/schemas/ConstructionProgressStreamGroupDto"

    ConstructionProgressPhotoDto:
      type: object
      required: [photo, month, year]
      nullable: true
      properties:
        photo:
          type: array
          description: Массив ссылок на фотографии хода строительства
          items:
            type: string
        month:
          type: integer
          description: Месяц периода
        year:
          type: integer
          description: Год периода

    ConstructionDynamicsDto:
      type: object
      nullable: true
      required: [video_link, video_preview, month_update, year_update]
      properties:
        video_link:
          type: string
          description: Ссылка на видео динамики строительства
          minLength: 1
        video_preview:
          type: string
          description: Ссылка на превью динамики строительства
          minLength: 1
        month_update:
          type: integer
          description: Месяц последнего обновления
        year_update:
          type: integer
          description: Год последнего обновления

    ConstructionProgressTimelineDto:
      type: object
      required: [count, month, year]
      properties:
        count:
          $ref: "#/components/schemas/AttrCount"
        month:
          type: integer
          description: Месяц периода
        year:
          type: integer
          description: Год периода

    ConstructionProgressStreamGroupDto:
      type: object
      required: [building, cameras_count, cameras]
      properties:
        building:
          type: object
          required: [id, name]
          description: Связанный корпус
          properties:
            id:
              $ref: "#/components/schemas/AttrBuildingId"
            name:
              $ref: "#/components/schemas/AttrBuildingName"
        cameras_count:
          type: integer
          description: Количество камер
        cameras:
          type: array
          description: Массив камер
          items:
            $ref: "#/components/schemas/ConstructionProgressCameraDto"

    ConstructionProgressCameraDto:
      type: object
      required: [link, preview, description]
      properties:
        description:
          type: string
          nullable: true
          description: Описание камеры
        link:
          type: string
          description: Ссылка на трансляцию камеры
          minLength: 1
        preview:
          type: string
          description: Ссылка на превью изображение
          minLength: 1

    MrclubCategoryListDto:
      required:
        - categories
        - count
      description: Список категорий программы лояльности MR Club
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: "#/components/schemas/MrclubCategoryDto"
        count:
          $ref: "#/components/schemas/AttrCount"

    MrclubCategoryDto:
      description: Категория предолжения программы лояльности
      required:
        - code
        - name
      type: object
      properties:
        name:
          type: string
          description: Название категории для отображения в UI
          minLength: 1
        code:
          type: string
          description: Системное имя категории
          minLength: 1

    MrclubOffersListDto:
      required:
        - items
        - count
        - limit
        - page
        - page_count
      description: Список предложений программы лояльности MR Club
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/MrclubOfferDto"
        count:
          $ref: "#/components/schemas/AttrCount"
        limit:
          $ref: "#/components/schemas/AttrPaginationLimit"
        page:
          $ref: "#/components/schemas/AttrPaginationPage"
        page_count:
          $ref: "#/components/schemas/AttrPaginationPageCount"

    MrclubOfferDto:
      description: Краткая информация о предложении программы лояльности
      required:
        - code
        - image
        - title
      type: object
      properties:
        code:
          type: string
          description: Системное имя предложения
        image:
          $ref: "#/components/schemas/AttrImageLink"
        name:
          type: string
          description: Название предложения
          example: "Обойкин — сеть обойных центров"
        teaser:
          type: string
          description: Краткое описание предложения
          example: "Скидка в магазин с огромным выбором обоев"
        labels:
          type: array
          items:
            $ref: "#/components/schemas/MrclubOfferLabelDto"

    MrclubOfferLabelDto:
      type: object
      description: Список лейблов
      required:
        - text
      properties:
        text:
          type: string
          description: Текст лейбла
          example: "-13%"

    MrclubOfferContentDto:
      description: Детальная информация о предложении программы лояльности
      required:
        - code
        - image
        - title
        - date
        - teaser
        - ad_label
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: "#/components/schemas/MrclubCategoryDto"
        code:
          type: string
          description: Системное имя предложения ПЛ
        image:
          $ref: "#/components/schemas/AttrImageLink"
        name:
          type: string
          description: Название предложения
          example: "Обойкин — сеть обойных центров"
        teaser:
          type: string
          description: Краткое описание предложения
          example: "Скидка в магазин с огромным выбором обоев"
        description:
          type: string
          description: Краткое описание предложения
          example: "Огромный ассортимент под любой бюджет, более 1 500 артикулов обоев в наличии и эксклюзивные варианты по каталогам."
        labels:
          type: array
          items:
            $ref: "#/components/schemas/MrclubOfferLabelDto"
        conditions:
          type: string
          description: Условия использования предложения (HTML-текст)
        partner:
          type: object
          description: Информация о партнёре по предложению ПЛ
          properties:
            code:
              type: string
              description: Системное имя партнёра
              example: "oboykin"
            name:
              type: string
              description: Название партнёра
              example: "Обойкин"
            logo:
              $ref: "#/components/schemas/AttrImageLink"
            description:
              type: string
              description: Краткое описание партнёра
              example: "Обойкин успешно работает на рынке интерьерных решений с 2014 года"
            text:
              type: string
              description: Детальное описание партнёра (HTML-текст)
        steps:
          type: array
          description: Список шагов для использования предложения программы лояльности
          items:
            $ref: "#/components/schemas/MrclubOfferStepDto"
        ad_label:
          $ref: "#/components/schemas/AttrAdvertisementLabel"

    MrclubOfferStepDto:
      type: object
      description: Шаг для использования предложения программы лояльности
      required:
        - name
        - description
      properties:
        name:
          type: string
          description: Название шага
          example: "Зайдите на сайт партнера"
          minLength: 1
        description:
          type: string
          nullable: true
          description: Дополнительное описание для шага (HTML-текст)

    PartnerDvizhCallbackResponseDto:
      type: object
      description: Результат запроса бесплатного бронирования
      required: [code]
      properties:
        code:
          type: string
          enum: [success]
          description: Код результата работы метода

    AppVersionDto:
      type: object
      description: Результат запроса минимальных версий приложений
      required: [ios, android]
      properties:
        ios:
          type: string
          description: Минимальная версия ios
        android:
          type: string
          description: Минимальная версия android

    DeviceDto:
      type: object
      description: Информация об устройстве
      required: [device_id, install_id, device_type, token, active]
      properties:
        device_id:
          type: string
          description: ID устройства
        install_id:
          type: string
          description: ID установки
        device_type:
          type: string
          description: Тип устройства
          enum: [ios, android_google, android_huawei]
        token:
          type: string
          description: Токен регистрации (FCM, Heuawei)
        active:
          type: boolean
          description: Признак доступности устройства для отправки уведомлений

    BookletsResponseDto:
      type: object
      description: Список материалов по проекту
      required: [items]
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/BookletDto"

    BookletDto:
      type: object
      description: Материал по проекту
      required: [title, image, file]
      properties:
        title:
          type: string
          description: Заголовок к материалу
        image:
          type: string
          description: Ссылка на превью изображение
        file:
          type: string
          description: Файл для скачивания

    ProductKitchenDto:
      type: object
      nullable: true
      required:
        - layout_type_id
      properties:
        layout_type_id:
          type: string
          description: Идентификатор типа планировки кухни

    KitchenOptionsListDto:
      type: object
      description: Список вариантов кухонь
      required:
        - count
        - description
        - items
      properties:
        count:
          $ref: "#/components/schemas/AttrCount"
        description:
          type: string
          description: Описание типа планировки кухни (без поддержки HTML-форматирования)
          minLength: 1
          nullable: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/KitchenTypeDto"

    KitchenTypeDto:
      type: object
      required:
        - name
        - colors
      properties:
        name:
          type: string
          description: Название типа кухни
          example: "Premium"
          minLength: 1
        colors:
          type: array
          items:
            $ref: "#/components/schemas/KitchenColorDto"

    KitchenColorDto:
      type: object
      required:
        - id
        - name
        - kitchen_color
        - description
        - file
        - 3d_layout
        - image
        - elements
      properties:
        name:
          type: string
          description: Название цвета кухни
          example: "Светлая"
          minLength: 1
        file:
          type: string
          format: url
          description: Ссылка на скачивание файла - буклета
          minLength: 1
          nullable: true
        3d_layout:
          type: string
          format: url
          description: Ссылка на 3D планировку
          minLength: 1
          nullable: true
        image:
          $ref: "#/components/schemas/KitchenOptionImageDto"
        elements:
          type: array
          description: Список элементов комплектации, связанных с данным вариантом отделки
          items:
            $ref: "#/components/schemas/KitchenOptionElementDto"

    KitchenOptionElementDto:
      type: object
      required:
        - name
        - label
        - image
        - description
      properties:
        name:
          type: string
          description: Название элемента комплектации
          example: "Материал фасадов — ЛДСП Egger"
          minLength: 1
        label:
          type: string
          description: Однострочный текст, короткий заголовок, отображаемый как подробная информация об элементе комплектации
          example: "Столешница — влагостойкий ДСП с защитным покрытием из пластика"
          minLength: 1
          nullable: true
        image:
          type: string
          format: url
          description: Ссылка на изображение для отображения в блоке с подробной информацией
          minLength: 1
          nullable: true
        description:
          type: string
          description: Подробное текстовое описание для пина
          example: "Наши столешницы влагостойкие и ударопрочные, устойчивы к образованию загрязнений и к UV-излучению."
          minLength: 1
          nullable: true

    KitchenOptionImageDto:
      type: object
      required:
        - image
        - details_placement
        - pins
      properties:
        image:
          type: string
          format: url
          description: Ссылка на изображение для слайдера
          minLength: 1
        details_placement:
          type: string
          enum: [upper_left, lower_left, upper_right, lower_right]
          description: Значение (по умолчанию) для отображения popup с детальной информацией о кухонном элементе
        pins:
          type: array
          items:
            $ref: "#/components/schemas/KitchenOptionImagePinDto"

    KitchenOptionImagePinDto:
      type: object
      description: Вариант отделки
      required:
        - x
        - y
        - label
        - details_description
        - details_image
        - details_placement
        - replacement_image
      properties:
        x:
          $ref: "#/components/schemas/AttrPointCoordinate"
        y:
          $ref: "#/components/schemas/AttrPointCoordinate"
        label:
          type: string
          description: Заголовок для пина
          example: "Холодильник с функцией Frost Free"
          minLength: 1
        details_description:
          type: string
          description: Подробное текстовое описание для пина
          example: "В морозильной камере используется функция No Frost. Размораживание морозильной камере происходит автоматически, а охлаждение продуктов происходит быстрее и более равномерно"
          minLength: 1
          nullable: true
        details_image:
          type: string
          format: url
          description: Ссылка на изображение для отображения в блоке с подробной информацией
          minLength: 1
          nullable: true
        details_placement:
          type: string
          enum: [upper_left, lower_left, upper_right, lower_right]
          description: Значение для отображения блока с детальной информацией о кухонном элементе (только для desktop)
          nullable: true
        replacement_image:
          type: string
          format: url
          description: Ссылка на изображение, замещающее основное изображение кухни при активации пина
          minLength: 1
          nullable: true

    # ################################
    # Одиночные атрибуты
    # ################################

    AttrAdvertisementLabel:
      type: string
      nullable: true
      description: Текст рекламной метки
      example: 'Реклама. АО "МР ГРУПП". erid: b3XmBtzt1r8P'
      minLength: 1

    AttrQueues:
      type: object
      nullable: true
      description: Перечень очередей и сроков сдачи в ней
      additionalProperties:
        description: В качестве ключа указывается номер очереди, например "1"
        type: array
        items:
          $ref: "#/components/schemas/AttrDate"

    AttrBuildingDeadline:
      type: string
      format: datetime
      description: Срок сдачи корпуса
      example: "2012-04-23T18:25:43.511Z"
      nullable: true

    AttrBuildingId:
      type: integer
      description: Идентификатор корпуса
      example: 9214

    AttrBuildingCode:
      type: string
      description: Символьный код корпуса
      example: "mann"
      minLength: 1

    AttrBuildingName:
      type: string
      description: Маркетинговое название корпуса
      example: "Ocean 3"
      minLength: 1

    AttrCategoryCode:
      description: Категория ОН (Тип ОН)
      type: string
      enum: [flats, parkings, boxrooms, offices, commercials]
      minLength: 1

    AttrCategoryName:
      type: string
      description: Название типа ОН
      example: "Квартиры"
      minLength: 1

    AttrMapCoordinate:
      description: |
        Параметр координаты точки для отображения на карте, используется для:

        - `latitude` — широта
        - `longitude` — долгота
      type: number
      example: 37.089521

    AttrCompassAngle:
      description: |
        Угол поворота компаса в градусах, указывающий на стороны света.
      type: number
      minimum: -359
      maximum: 359
      example: 56
      nullable: true

    AttrDate:
      description: Дата
      type: string
      format: date
      example: "2022-03-15"

    AttrDatetime:
      description: Дата и время
      type: string
      format: datetime
      example: "2012-04-23T18:25:43.511Z"

    AttrEmail:
      type: string
      description: Email
      example: "aaa@bbb.ccc"

    AttrExternalLink:
      type: string
      description: Ссылка на внешний ресурс
      example: "https://www.youtube.com/embed/tLKSmtSAvaQ"
      minLength: 1

    AttrImageLink:
      type: string
      description: Изображение для элемента
      example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"
      minLength: 1

    AttrMaxDiscount:
      type: number
      description: Максимальная скидка в процентах
      example: 25
      nullable: true

    AttrMetroDistance:
      type: integer
      nullable: true
      description: Расстояние до метро
      example: 14

    AttrMetroColor:
      type: string
      nullable: true
      description: Цвет станции метро
      example: "#356547"

    AttrMetroLine:
      type: string
      nullable: true
      description: Номер линии метро
      example: "8A"

    AttrMetroName:
      type: string
      description: Название станции метро
      example: "Имя станции"

    AttrMinPrice:
      type: number
      description: Минимальная цена в рублях
      example: 10052807

    AttrMinPriceNullable:
      type: number
      description: Минимальная цена в рублях
      example: 10052807
      nullable: true

    AttrMortgageInitialPayment:
      type: number
      description: Сумма первоначального взноса в рублях
      example: 2000000
      nullable: true

    AttrMortgageRate:
      type: number
      description: Процентная ставка по ипотеке
      example: 5.2
      nullable: true

    AttrMortgageMonthlyPayment:
      type: number
      description: Ежемесячный платёж по ипотеке в рублях
      example: 58121

    AttrMrclubCardNumber:
      description: Номер карты программы лояльности MR Club
      type: string
      example: "4444568915658964"

    AttrPaymentLink:
      type: string
      format: url
      description: Ссылка на оплату
      example: "https://securepayments.sberbank.ru/payment/docsite/payform-1.html?token=f5eb7yao31iyf1p2of12ues531"

    AttrPointCoordinate:
      description: |
        Параметр координаты точки (пина) для отображения на картинке.
        Точка используется для двух координат — x и y. Сообщает сдвиг по оси в %
      type: number
      example: 14.5

    AttrProductArea:
      type: number
      description: Общая площадь ОН в квадратных метрах
      nullable: true
      example: 65.8

    AttrProductArticle:
      type: string
      description: Артикул ОН
      example: "Метрополия-Amsterdam-1-19-1-1"
      nullable: true

    AttrProductBookingType:
      type: string
      description: |
        Тип бронирования ОН.

        - `free` — устное бронирование
        - `not_available` — бронирование недоступно
        - `paid` — платное бронирование
      nullable: true
      enum:
        - "free"
        - "not_available"
        - "paid"

    AttrProductCellingHeught:
      type: number
      description: Высота потолков в метрах
      example: 2.9
      nullable: true

    AttrProductCode:
      type: string
      description: Код ОН
      example: "kvartira-21"
      minLength: 1

    AttrProductFloor:
      type: integer
      description: Этаж
      nullable: true
      example: 3

    AttrProductId:
      type: integer
      description: Идентификатор объекта недвижимости
      example: 9214

    AttrProductMeterPrice:
      type: number
      description: Стоимость одного метра в рублях
      example: 215812

    AttrProductMonthlyPayment:
      type: number
      description: Ежемесячный платеж в рублях
      example: 21581
      nullable: true

    AttrProductName:
      type: string
      description: Название ОН
      example: "СТН-1-2-К-1-2-3-3"
      minLength: 1

    AttrProductNumber:
      type: string
      description: Номер ОН
      nullable: true
      example: "148А"

    AttrProductNumberOnFloor:
      type: integer
      description: Номер ОН на этаже
      example: 23

    AttrProductRoomsNumber:
      type: integer
      description: Количество комнат
      nullable: true
      enum: [0, 1, 2, 3, 4]

    AttrProductStopSales:
      type: boolean
      description: Признак "Стоп-продажи" для ОН

    AttrProductTechnicalLayout:
      type: string
      description: План ОН (техническая планировка)
      nullable: true
      example: "/upload/iblock/c13/9zarozg1dm2s58i7j30by3gn42r97puj.webp"

    AttrProductFunctionalLayout:
      type: string
      description: Функциональная планировка
      nullable: true
      example: "/upload/iblock/c13/9zarozg1dm2s58i7j30by3gn42r97puj.webp"

    AttrProductApartmentOnFloor:
      type: string
      description: План ОН на этаже
      nullable: true
      example: "/upload/iblock/027/dgo7asfu4yc9n1yu25iu20j3putp25yg.webp"

    AttrProductLayout3d:
      type: string
      description: Ссылка на 3D-план
      example: "https://mrsuperapp.adv.ru/"
      nullable: true

    AttrProductTotalPrice:
      type: number
      description: Базовая цена ОН в рублях
      example: 14027818

    AttrProductDiscountPrice:
      description: Цена ОН со скидкой в рублях
      type: number
      example: 14027818

    AttrProductDiscountType:
      description: |
        Вариант расчета скидки.

        - `absolute` — абсолютное значение в рублях
        - `percent` — в процентах от суммы
      type: string
      enum:
        - "absolute"
        - "percent"
      minLength: 1

    AttrProductDiscountPercent:
      description: Размер скидки в процентах.
      type: number
      example: 20.5

    AttrProductDiscountAbsolute:
      type: number
      description: Размер скидки в рублях
      example: 285000.14

    AttrProductDiscountDescription:
      type: string
      description: |
        Описание скидки
        В текущей реализации передается статичный текст
      example: "Срок действия условий ограничен. Точную цену уточняйте у менеджера."
      nullable: true
      minLength: 1

    AttrProjectCode:
      type: string
      description: Символьный код проекта
      example: "MOD"
      minLength: 1

    AttrProjectId:
      type: integer
      description: Идентификатор проекта
      example: 9214

    AttrProjectExternal:
      description: |
        Признак [внешнего проекта](https://wiki.adv.ru/pages/viewpage.action?pageId=307092650).

        Для таких проектов могут быть недоступны некоторые функции (например, покупка).
      type: boolean

    AttrProjectImage:
      type: string
      nullable: true
      description: Изображение проекта
      example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"

    AttrProjectLogo:
      type: string
      nullable: true
      description: Логотип проекта
      example: "/upload/iblock/56b/wx9xwnk1x4epk8hnib6aq6t993sirm6v.png"

    AttrProjectMain3d:
      type: string
      description: Ссылка на 3D-тур проекта
      nullable: true
      example: "https://example.com/3d_plan"

    AttrProjectAir3d:
      type: string
      description: Ссылка на Аэросъемку
      nullable: true
      example: "https://example.com/aero_plan"

    AttrProjectName:
      type: string
      description: Название проекта
      example: "MOD"
      minLength: 1

    AttrProjectTitle:
      type: string
      nullable: true
      description: Заголовок проекта
      example: "Премиальный жилой комплекс в 10 минутах от Цветного бульвара"

    AttrPurchaseStep:
      type: string
      description: Код состояния сделки
      enum:
        - booking_payment
        - booking_paid
        - booking_expired
        - booking_canceled
        - contract_approval
        - contract_acceptance_ddu
        - contract_acceptance_pddu
        - contract_acceptance_dkp
        - contract_acceptance_pdkp
        - contract_acceptance_uddu
        - escrow_opening
        - letter_of_credit_opening
        - AttrPurchaseStep
        - contract_preparing_eds
        - contract_signing
        - contract_signing_eds
        - contract_acceptance_main
        - registration_preparing
        - contract_registration
        - building
        - notifying
        - contract_accepted
        - inspection_registration
        - inspection_confirmation
        - inspection_waiting
        - inspection_canceling
        - inspection_starting
        - inspection_completed
        - purchase_completed
        - unilateral_act_sent

    # Пользователь

    AttrBookingId:
      type: integer
      description: Идентификатор бесплатного бронирования пользователя
      example: 9214

    # Пагинация

    AttrCount:
      type: integer
      description: Количестов найденных элементов (с учётом фильтров) согласно запросу

    AttrPaginationLimit:
      type: integer
      description: Количестов элементов на странице

    AttrPaginationPage:
      type: integer
      description: Текущая страница

    AttrPaginationPageCount:
      type: integer
      description: Общее количество страниц для соответствующего limit

  # ################################
  # Входные параметры
  # ################################

  # Фильтры

  parameters:
    applicationFilter:
      name: application
      in: query
      description: Фильтр, позволяющий отобрать из общего массива объектов только объекты для МП
      schema:
        type: boolean

    areaMinFilter:
      name: area_min
      in: query
      description: Фильтр по минимальной площади
      example: 50
      schema:
        type: integer

    areaMaxFilter:
      name: area_max
      in: query
      description: Фильтр по максимальной площади
      example: 100
      schema:
        type: integer

    buildingsCodeFilter:
      name: building[]
      in: query
      description: Фильтр по корпусу
      example: ["stain"]
      schema:
        type: array
        items:
          type: string

    categoryFilter:
      name: category
      in: query
      description: Фильтр по типу ОН
      schema:
        $ref: "#/components/schemas/AttrCategoryCode"

    completedProjectFilter:
      name: completed
      in: query
      description: Признак завершённого проекта
      schema:
        type: boolean

    floorMinFilter:
      name: floor_min
      in: query
      description: Фильтр по минимальному этажу
      example: 5
      schema:
        type: integer

    floorMaxFilter:
      name: floor_max
      in: query
      description: Фильтр по максимальному этажу
      example: 10
      schema:
        type: integer

    isAssignmentFilter:
      name: assignment
      in: query
      description: Фильтр по переуступке (пока не используются, история MRSUPERAPP-2954)
      example: true
      schema:
        type: boolean

    isBookedFilter:
      name: booked
      in: query
      description: Фильтр по признаку "Забронирован"
      example: true
      schema:
        type: boolean

    isFreeFilter:
      name: free
      in: query
      description: Фильтр по признаку "Доступен"
      example: true
      schema:
        type: boolean

    isFamilyFilter:
      name: family
      in: query
      description: Фильтр по признаку "Семейное"
      example: true
      schema:
        type: boolean

    kitchenLayoutTypeIdParam:
      name: layout_type_id
      in: query
      required: true
      description: Идентификатор типа планировки кухни
      schema:
        type: string

    paymentMinFilter:
      name: payment_min
      in: query
      description: Фильтр по мин платежу
      example: 100
      schema:
        type: integer

    paymentMaxFilter:
      name: payment_max
      in: query
      example: 200
      description: Фильтр по макс платежу
      schema:
        type: integer

    placeFilter:
      name: place[]
      in: query
      description: Фильтр по станции метро
      example: ["dmitrovskaya"]
      schema:
        type: array
        items:
          type: string

    priceMinFilter:
      name: price_min
      in: query
      description: Фильтр по мин цене
      example: 100
      schema:
        type: integer

    priceMaxFilter:
      name: price_max
      in: query
      example: 200
      description: Фильтр по макс цене
      schema:
        type: integer

    productCodeFilter:
      name: product_code
      in: query
      description: Код ОН
      schema:
        type: string
        example: "kvartira-21"

    productIdFilter:
      name: product
      in: query
      description: Идентификатор ОН
      schema:
        type: integer
        example: 9214

    productsIdsFilter:
      name: ids[]
      in: query
      description: Фильтр по идентификаторам ОН
      example: [9247]
      schema:
        type: array
        items:
          type: integer

    projectCodeParam:
      name: project_code
      in: query
      description: Код проекта (не путать с фильтром по проекту). Параметр передается, если метод вызывается со страницы проекта
      example: "hide"
      schema:
        type: string

    projectFilter:
      name: project
      in: query
      description: Фильтр по коду проекта
      example: "hide"
      schema:
        type: string

    projectsFilter:
      name: project[]
      in: query
      description: Фильтр по коду проектов
      example: ["hide"]
      schema:
        type: array
        items:
          type: string

    releaseFilter:
      name: release[]
      in: query
      description: Фильтр по сроку сдачи
      example: ["2Q2023"]
      schema:
        type: array
        items:
          type: string

    roomsCountFilter:
      name: rooms[]
      in: query
      description: Фильтр по количеству комнат. 0 - студии, 4 - 4 и более
      example: [1]
      schema:
        type: array
        items:
          type: integer

    sectionFilter:
      name: section[]
      in: query
      description: Фильтр по секции
      example: [1567]
      schema:
        type: array
        items:
          type: integer

    levelMinFilter:
      name: level_min
      in: query
      description: Фильтр по минимальному уровню
      example: -3
      schema:
        type: integer

    levelMaxFilter:
      name: level_max
      in: query
      description: Фильтр по максимальному уровню
      example: -1
      schema:
        type: integer

    isDiscountFilter:
      name: discount
      in: query
      description: Фильтр по наличию скидки
      example: true
      schema:
        type: boolean

    housingFilter:
      name: housing[]
      in: query
      description: Фильтр по типу жилого помещения
      schema:
        type: array
        items:
          type: string
          enum: ["Flat", "Apartment"]

    decorationFilter:
      name: decoration[]
      in: query
      description: Фильтр по типу отделки
      example: ["MRBase", "MRReady"]
      schema:
        type: array
        items:
          type: string
          description: Код CRM отделки

    hasKitchenFilter:
      name: has_kitchen
      in: query
      description: Фильтр по наличию кухни
      example: true
      schema:
        type: boolean

    installmentsFilter:
      name: installments
      in: query
      description: Фильтр по наличию рассрочки (пока не используются, история MRSUPERAPP-2954)
      schema:
        type: boolean

    # Сортировка

    catalogSort:
      name: sort
      in: query
      description: |
        Код способа сортировки (по умолчанию default)\
        Способы сортировки описаны тут - https://wiki.adv.ru/pages/viewpage.action?pageId=273666894
      schema:
        type: string

    # Пагинация

    paginationPage:
      name: page
      in: query
      description: Номер страницы для пагинации (по умолчанию = 1)
      schema:
        type: integer

    paginationLimit:
      name: limit
      in: query
      description: Количество элементов на странице для пагинации (каждый метод может иметь своё значение по умолчанию)
      schema:
        type: integer

    # Кастомные заголовки

    captchaToken:
      name: Captcha-Token
      in: header
      required: false
      description: Токен, полученный после прохождения проверки пользователя во внешнем сервисе верификации запросов
      example: "dD0xNjYyNDU3NDMzO2k9MmEwMjo2Yjg6YjA4MTpiNTk3OjoxOjFiO0Q9MjVCREY1RDgzMDBERjQ3QjExNkUyMDJDNjJFNEI3Q0Y0QjYzRkRDNzJEMkVGQzQyRUNDNjMxODgzMUM0REZBNzI1QUE1QzUwO3U9MTY2MjQ1NzQzMzk5MTEwNjQxNTtoPTg4MWRjMDc2YzE3MjkxNGUwNDgwMTVkYzhlZjU3ODQ0"
      schema:
        type: string

    deviceToken:
      name: Device-Token
      in: header
      required: false
      description: Константное значение, аналог Captcha-Token для моб. приложений для прохождения проверки (временное решение, будет отключено после разработки варианта проверки запросов на отправку роботом для мобильных приложений)
      schema:
        type: string

  # ################################
  # Схемы безопасности
  # ################################

  securitySchemes:
    JWT:
      description: |
        JWT, создаваемый сервером аутентификации.
      type: http
      scheme: bearer
      bearerFormat: JWT

    FUSER_ID:
      description: |
        Внутренний идентификатор пользователя в Битрикс.

        Используется для идентификации неавторизованного пользователя, например, для работы с избранным.
      type: apiKey
      in: cookie
      name: FUSER_ID
